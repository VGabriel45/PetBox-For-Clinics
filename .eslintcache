[{"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/index.js":"1","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/App.js":"2","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Dashboard.js":"3","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Questions/Questions.js":"4","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Questions/QuestionPage.js":"5","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/SuccessPage/SuccesPage.js":"6","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/ClientUI.js/WelcomePage.js":"7","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Auth/registerClinic.js":"8","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/ClientUI.js/Profile.js":"9","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Auth/register.component.js":"10","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Services/auth.service.js":"11","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Appointments/Appointments.js":"12","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Appointments/AppointmentPage.js":"13","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Auth/login.component.js":"14","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/GetAllPets.js":"15","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/CustomerProfile.js":"16","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/AddCustomer.js":"17","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/GetPetsOfCustomer.js":"18","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/PetDetails.js":"19","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/Employees.js":"20","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/UpdatePet.js":"21","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/UpdateEmployee.js":"22","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/AddEmployee.js":"23","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/AddPet.js":"24","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/GetAllCustomers.js":"25","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/UpdateCustomer.js":"26","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/EmployeeProfile.js":"27","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/listItems.js":"28","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/LastCustomer.js":"29","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Services/auth-header.js":"30","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Navbar/Navbar.js":"31","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Notification/Components/SimplePopover.js":"32","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Title.js":"33","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Firebase/firebase.js":"34"},{"size":274,"mtime":1614354549046,"results":"35","hashOfConfig":"36"},{"size":4299,"mtime":1619623815128,"results":"37","hashOfConfig":"36"},{"size":6361,"mtime":1619623759608,"results":"38","hashOfConfig":"36"},{"size":3213,"mtime":1614355424478,"results":"39","hashOfConfig":"36"},{"size":3755,"mtime":1614354549044,"results":"40","hashOfConfig":"36"},{"size":969,"mtime":1614339007907,"results":"41","hashOfConfig":"36"},{"size":474,"mtime":1619459532537,"results":"42","hashOfConfig":"36"},{"size":6403,"mtime":1619621204550,"results":"43","hashOfConfig":"36"},{"size":695,"mtime":1614354549038,"results":"44","hashOfConfig":"36"},{"size":9263,"mtime":1619608676246,"results":"45","hashOfConfig":"36"},{"size":1384,"mtime":1619605013885,"results":"46","hashOfConfig":"36"},{"size":5408,"mtime":1619517987362,"results":"47","hashOfConfig":"36"},{"size":4164,"mtime":1619091724134,"results":"48","hashOfConfig":"36"},{"size":3998,"mtime":1614355424470,"results":"49","hashOfConfig":"36"},{"size":4887,"mtime":1614355424478,"results":"50","hashOfConfig":"36"},{"size":3714,"mtime":1619617214328,"results":"51","hashOfConfig":"36"},{"size":3722,"mtime":1619459532537,"results":"52","hashOfConfig":"36"},{"size":4610,"mtime":1614354549043,"results":"53","hashOfConfig":"36"},{"size":2118,"mtime":1619616323250,"results":"54","hashOfConfig":"36"},{"size":5149,"mtime":1614355424476,"results":"55","hashOfConfig":"36"},{"size":5445,"mtime":1619616969050,"results":"56","hashOfConfig":"36"},{"size":6487,"mtime":1614354549040,"results":"57","hashOfConfig":"36"},{"size":5716,"mtime":1619615599596,"results":"58","hashOfConfig":"36"},{"size":4327,"mtime":1619459532540,"results":"59","hashOfConfig":"36"},{"size":5513,"mtime":1614355424471,"results":"60","hashOfConfig":"36"},{"size":6338,"mtime":1619617312657,"results":"61","hashOfConfig":"36"},{"size":1981,"mtime":1619615834887,"results":"62","hashOfConfig":"36"},{"size":2912,"mtime":1619626035223,"results":"63","hashOfConfig":"36"},{"size":2735,"mtime":1619623769835,"results":"64","hashOfConfig":"36"},{"size":240,"mtime":1614354549045,"results":"65","hashOfConfig":"36"},{"size":2445,"mtime":1619621888271,"results":"66","hashOfConfig":"36"},{"size":5107,"mtime":1614355424477,"results":"67","hashOfConfig":"36"},{"size":343,"mtime":1614339007908,"results":"68","hashOfConfig":"36"},{"size":430,"mtime":1619456079317,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1dl3e3i",{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"72"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/index.js",[],["160","161"],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/App.js",["162","163","164","165"],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Dashboard.js",["166","167","168"],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Questions/Questions.js",["169","170"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport authHeader from \"../Services/auth-header\";\nimport AuthService from \"../Services/auth.service\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: \"inline\",\n  },\n}));\n\nexport default function AlignItemsList() {\n  const classes = useStyles();\n  const [questions, setquestions] = useState([]);\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  async function getQuestions() {\n    await axios\n      .get(`http://localhost:8080/clinic/${currentUser.id}/questions`, {\n        headers: authHeader(),\n      })\n      .then((res) => setquestions(res.data));\n  }\n\n  useEffect(() => {\n    getQuestions();\n  }, []);\n\n  function showQuestions() {\n    return questions.map((question) =>\n      !question.solved ? (\n        <ListItem alignItems=\"flex-start\">\n          <ListItemAvatar>\n            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n            {console.log(questions)}\n          </ListItemAvatar>\n          <Link\n            to={`/customers/${question.customer.id}/questions/${question.id}`}\n          >\n            <ListItemText\n              key={question.id}\n              primary={question.text}\n              secondary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    <small key={question.id}>\n                      <Link\n                        to={`/customers/${question.customer.id}`}\n                        key={question.id}\n                      >\n                        {question.author}\n                      </Link>\n                    </small>\n                  </Typography>\n                  {\" - \"}\n                  {question.date}\n                </React.Fragment>\n              }\n            />\n          </Link>\n        </ListItem>\n      ) : (\n        \"\"\n      )\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <h1 style={{ textAlign: \"center\", marginTop: \"2%\" }}>\n        Questions asked by customers\n      </h1>\n      <Link to=\"/dash\">Back to dashboard</Link>\n      <Paper\n        elevation={3}\n        style={{\n          width: \"50%\",\n          margin: \"auto\",\n          marginTop: \"5%\",\n          backgroundColor: \"#3f51b5\",\n        }}\n      >\n        <List className={classes.root}>\n          {showQuestions()}\n          <Divider variant=\"inset\" component=\"li\" />\n        </List>\n      </Paper>\n    </React.Fragment>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Questions/QuestionPage.js",["171","172","173","174","175"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport authHeader from \"../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: \"inline\",\n  },\n}));\n\nexport default function AlignItemsList(props) {\n  const history = useHistory();\n  const classes = useStyles();\n  const [question, setquestion] = useState({});\n  const [response, setresponse] = useState();\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n  const questionId = params.questionId;\n\n  async function markAsSolved() {\n    await axios.put(\n      `http://localhost:8080/customers/${customerId}/questions/${questionId}/setSolved`,\n      { headers: authHeader() }\n    );\n  }\n\n  async function getQuestion() {\n    await axios\n      .get(\n        `http://localhost:8080/customers/${customerId}/questions/${questionId}`,\n        { headers: authHeader() }\n      )\n      .then((res) => setquestion(res.data));\n  }\n\n  function handleChange(event) {\n    setresponse(event.target.value);\n    console.log(question);\n  }\n\n  function formatDateWithoutTime(date) {\n    var parsedDate = new Date(date);\n    return parsedDate.toLocaleString();\n  }\n\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.put(\n      `http://localhost:8080/customers/${customerId}/questions/${questionId}/setResponse`,\n      {\n        date: question.date,\n        solved: true,\n        text: question.text,\n        author: question.author,\n        seen: true,\n        response: response,\n        customer: question.customer,\n      },\n      { headers: authHeader() }\n    );\n    history.push(\"/questions\");\n    window.location.reload(\"/questions\");\n  }\n\n  useEffect(() => {\n    getQuestion();\n  }, []);\n\n  return (\n    <Container>\n      <Link to=\"/dash\">Back to dashboard</Link>\n      <p>\n        Question author{\" \"}\n        <small>\n          <Link to={`http://localhost:8080/customers/${customerId}`}>\n            <strong>{question.author}</strong>\n          </Link>\n        </small>\n      </p>\n      <Paper>\n        <p>\n          Question: <strong>{question.text}</strong>\n        </p>\n        Response: <strong>{question.response}</strong>\n        <form className=\"form-signin\" method=\"post\" onSubmit={submitForm}>\n          <div class=\"form-floating\">\n            <textarea\n              className=\"form-control\"\n              placeholder=\"Leave a comment here\"\n              id=\"response\"\n              style={{ height: \"100px\" }}\n              onChange={handleChange}\n              name=\"response\"\n            ></textarea>\n            <label for=\"floatingTextarea1\">\n              {question.response ? \"Already responded\" : \"Add response\"}\n            </label>\n          </div>\n          {/* <Link to={`/successPage`}>\n            {\" \"} */}\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit response\n          </button>\n          {/* </Link> */}\n        </form>\n        <br />\n        <p>\n          Question date: <strong>{formatDateWithoutTime(question.date)}</strong>\n        </p>\n        {/* Mark as solved:{\" \"}\n        <Checkbox\n          checked={question.solved ? true : false}\n          onClick={markAsSolved}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n        {console.log(question.solved)} */}\n      </Paper>\n    </Container>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/SuccessPage/SuccesPage.js",["176"],"import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { AppBar } from \"@material-ui/core\";\n\nexport default function SuccesPage() {\n  return (\n    <div className=\"successPageBody\">\n      <AppBar />\n      <div className=\"card\">\n        <div\n          style={{\n            \"border-radius\": \"200px\",\n            height: \"200px\",\n            width: \"200px\",\n            background: \"#F8FAF5\",\n            margin: \"0 auto\",\n          }}\n        >\n          <i className=\"checkmark\" className=\"successI\">\n            ✓\n          </i>\n        </div>\n        <h1 className=\"successH1\">Success</h1>\n        <p className=\"successP\">\n          Your response has been sent !\n          <br />\n          <Link to={`/dash`}>\n            <Button variant=\"contained\" style={{ marginTop: \"5%\" }}>\n              Back to dashboard\n            </Button>{\" \"}\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/ClientUI.js/WelcomePage.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Auth/registerClinic.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/ClientUI.js/Profile.js",["177","178","179","180","181","182"],"import React, { useState } from \"react\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AuthService from \"../Services/auth.service\";\nimport axios from \"axios\";\n\nexport default function Profile(props) {\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n  const [user, setuser] = useState({});\n\n  async function getData() {\n    const response = await axios.get(\n      `http://localhost:8080/customers/${currentUser.id}`\n    );\n    setuser(response.data);\n    const userResponse = axios.get(\n      `http://localhost:8080/customers/${currentUser.id}`\n    );\n  }\n\n  return <div>{currentUser.username}</div>;\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Auth/register.component.js",["183"],"import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport AuthService from \"../Services/auth.service\";\nimport { Container } from \"@material-ui/core\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangeGender = this.onChangeGender.bind(this);\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.currentUser = AuthService.getCurrentUser();\n    this.onChangeImage = this.onChangeImage.bind(this);\n    // this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      address: \"\",\n      gender: \"\",\n      image: \"\",\n      successful: false,\n      message: \"\",\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangeFirstName(e) {\n    this.setState({\n      firstName: e.target.value,\n    });\n  }\n\n  onChangeLastName(e) {\n    this.setState({\n      lastName: e.target.value,\n    });\n  }\n\n  onChangePhoneNumber(e) {\n    this.setState({\n      phoneNumber: e.target.value,\n    });\n  }\n\n  onChangeAddress(e) {\n    this.setState({\n      address: e.target.value,\n    });\n  }\n\n  onChangeGender(e) {\n    this.setState({\n      gender: e.target.value,\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  onChangeImage(e) {\n    this.setState({\n      image: e.target.files[0],\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username + ` - ${this.currentUser.username}`,\n        this.state.email,\n        this.state.address,\n        this.state.phoneNumber,\n        this.state.gender,\n        this.state.firstName,\n        this.state.lastName\n      ).then(\n        (response) => {\n          this.setState({\n            message: response.data.message,\n            successful: true,\n          });\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage,\n          });\n        }\n      );\n    }\n    let imageData = new FormData();\n    imageData.append(\"file\", this.state.image);\n    axios.post(\n      `http://localhost:8080/upload/customer/${this.state.username}`,\n      imageData\n    );\n  }\n\n  render() {\n    return (\n      <Container\n        style={{\n          border: \"white\",\n          height: \"100%\",\n          width: \"50%\",\n          margin: \"auto\",\n          marginTop: \"5%\",\n        }}\n      >\n        <Link to=\"/dash\">Back to dashboard</Link>\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form\n          onSubmit={this.handleRegister}\n          ref={(c) => {\n            this.form = c;\n          }}\n        >\n          {!this.state.successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.onChangeUsername}\n                  validations={[required, vusername]}\n                />\n              </div>\n\n              <div className=\"mb-3\">\n                <label htmlFor=\"firstName\" className=\"form-label\">\n                  First Name\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.firstName}\n                  name=\"firstName\"\n                  onChange={this.onChangeFirstName}\n                  id=\"firstName\"\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"lastName\" className=\"form-label\">\n                  Last Name\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.onChangeLastName}\n                  id=\"lastName\"\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"phoneNumber\" className=\"form-label\">\n                  Phone Number\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.phoneNumber}\n                  onChange={this.onChangePhoneNumber}\n                  id=\"phoneNumber\"\n                  name=\"phoneNumber\"\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"gender\" className=\"form-label\">\n                  Gender\n                </label>\n                <select\n                  className=\"form-select form-select-sm mb-3\"\n                  value={this.state.gender}\n                  onChange={this.onChangeGender}\n                  name=\"gender\"\n                  aria-label=\".form-select-sm example\"\n                  id=\"gender\"\n                >\n                  <option defaultValue=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n                  <option value=\"other\">Other</option>\n                </select>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n                  Email address\n                </label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  value={this.state.email}\n                  onChange={this.onChangeEmail}\n                  id=\"exampleInputEmail1\"\n                  validations={[required, email]}\n                  aria-describedby=\"emailHelp\"\n                  name=\"email\"\n                />\n                <div id=\"emailHelp\" className=\"form-text\">\n                  We'll never share your email with anyone else.\n                </div>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"address\" className=\"form-label\">\n                  Address\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.address}\n                  onChange={this.onChangeAddress}\n                  id=\"address\"\n                  name=\"address\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\">\n                  Add customer\n                </button>\n              </div>\n            </div>\n          )}\n\n          {this.state.message && (\n            <div className=\"form-group\">\n              <div\n                className={\n                  this.state.successful\n                    ? \"alert alert-success\"\n                    : \"alert alert-danger\"\n                }\n                role=\"alert\"\n              >\n                {this.state.message}\n              </div>\n            </div>\n          )}\n          <CheckButton\n            style={{ display: \"none\" }}\n            ref={(c) => {\n              this.checkBtn = c;\n            }}\n          />\n        </Form>\n      </Container>\n    );\n  }\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Services/auth.service.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Appointments/Appointments.js",["184","185","186","187"],"import React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport axios from \"axios\";\nimport Container from \"@material-ui/core/Container\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport authHeader from \"../Services/auth-header\";\nimport AuthService from \"../Services/auth.service\";\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  const [appointments, setappointments] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  async function getAppointments() {\n    await axios\n      .get(`http://localhost:8080/clinic/${currentUser.id}/appointments`, { headers: authHeader() })\n      .then((res) => setappointments(res.data));\n  }\n\n  function formatDateWithoutTime(date) {\n    var parsedDate = new Date(date);\n    return parsedDate.toLocaleDateString();\n  }\n\n  useEffect(() => {\n    getAppointments();\n  }, []);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = appointments.filter((app) =>\n      app.customer.firstName\n        .toString()\n        .toLowerCase()\n        .includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(appointments);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  const displayAppointments = (appointments) => {\n    return (\n      <TableContainer component={Paper}>\n        <Link to=\"/dash\">Back to dashboard</Link>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Customer Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Date</StyledTableCell>\n              <StyledTableCell align=\"right\">Hour</StyledTableCell>\n              <StyledTableCell align=\"right\">Reason</StyledTableCell>\n              <StyledTableCell align=\"right\">Status</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {appointments.map((app) => (\n              <StyledTableRow key={app.id}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  <Link to={`customers/${app.customer.id}`}>\n                    {app.customer.firstName}\n                  </Link>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {formatDateWithoutTime(app.dateOfAppointment)}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{app.hour}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <Link\n                    to={`customers/${app.customer.id}/appointments/${app.id}`}\n                  >\n                    {app.reason}\n                  </Link>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {!app.accepted && !app.declined ? (\n                    <p style={{ color: \"orange\" }}>Waiting</p>\n                  ) : app.accepted ? (\n                    <p style={{ color: \"green\" }}>Accepted</p>\n                  ) : (\n                        <p style={{ color: \"red\" }}>Declined</p>\n                      )}\n                </StyledTableCell>\n                {console.log(app)}\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayAppointments(searchResults)\n        : displayAppointments(appointments)}\n    </div>\n  );\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchAppointment\"\n        freeSolo\n        options={appointments.map((app) => app.customer.firstName)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search appointment\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-appointment\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"lg\">\n        <h1>Appointments</h1>\n        <div>{search}</div>\n        {content}\n      </Container>\n    </React.Fragment>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Appointments/AppointmentPage.js",["188"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport authHeader from \"../Services/auth-header\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nexport default function AppointmentPage(props) {\n  const {\n    match: { params },\n  } = props;\n  const history = useHistory();\n  const customerId = params.customerId;\n  const appointmentId = params.appointmentId;\n  const [appointment, setappointment] = useState({});\n\n  async function getAppointment() {\n    await axios\n      .get(\n        `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}`,\n        { headers: authHeader() }\n      )\n      .then((res) => setappointment(res.data));\n  }\n\n  function acceptAppointment() {\n    // set accept boolean of appointment to true with a put request\n    axios.get(\n      `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}/accept`,\n      { headers: authHeader() }\n    );\n    window.location.reload();\n  }\n\n  function declineAppointment() {\n    // set accept boolean of appointment to false with a put request\n    axios.get(\n      `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}/decline`,\n      { headers: authHeader() }\n    );\n    window.location.reload();\n  }\n\n  function deleteAppointment() {\n    axios.delete(\n      `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}`,\n      { headers: authHeader() }\n    );\n    history.push(\"/appointments\");\n    window.location.reload(\"/appointments\");\n  }\n\n  function markAsSeen() {\n    axios.get(`http://localhost:8080/customers/${customerId}/appointments/${appointmentId}/setSeen`, { headers: authHeader() });\n  }\n\n  function formatDateWithoutTime(date) {\n    var parsedDate = new Date(date);\n    return parsedDate.toLocaleDateString();\n  }\n\n  useEffect(() => {\n    getAppointment();\n    markAsSeen();\n  }, []);\n\n  return (\n    <div>\n      <Link to=\"/appointments\">Back to appointments</Link>\n      <br />\n      Appointment author:{\" \"}\n      <h1>\n        {appointment.customer\n          ? appointment.customer.firstName + \" \" + appointment.customer.lastName\n          : \"\"}\n      </h1>\n      Reason of appointment: <h2>{appointment.reason}</h2>\n      Date of appointment:{\" \"}\n      <h3>\n        {formatDateWithoutTime(appointment.dateOfAppointment)} - At{\" \"}\n        {appointment.hour}\n      </h3>\n      <div>\n        {appointment.accepted ? (\n          <div>\n            <h2>This appointment has been accepted.</h2>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={declineAppointment}\n              className=\"btn btn-primary btn-sm\"\n            >\n              Change to declined\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={deleteAppointment}\n            >\n              Delete appointment\n            </Button>\n          </div>\n        ) : appointment.declined ? (\n          \"\"\n        ) : (\n              <div>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={acceptAppointment}\n                >\n                  Accept\n            </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={declineAppointment}\n                >\n                  Decline\n            </Button>\n              </div>\n            )}\n        {appointment.declined ? (\n          <div>\n            <h2>This appointment has been declined.</h2>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={acceptAppointment}\n            >\n              Change to accepted\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={deleteAppointment}\n            >\n              Delete appointment\n            </Button>\n          </div>\n        ) : (\n            \"\"\n          )}\n      </div>\n      {console.log(appointment.reason)}\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Auth/login.component.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/GetAllPets.js",["189","190","191"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport authHeader from \"../../Services/auth-header\";\nimport AuthService from \"../../Services/auth.service\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function GetAllPets() {\n  const classes = useStyles();\n  const [pets, setpets] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  async function getPets() {\n    await axios\n      .get(`http://localhost:8080/clinic/${currentUser.id}/pets`, { headers: authHeader() })\n      .then((res) => setpets(res.data));\n  }\n\n  useEffect(() => {\n    getPets();\n  }, []);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = pets.filter((pet) =>\n      pet.name.toString().toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(pets);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  const displayPets = (pets) => {\n    return (\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Gender</StyledTableCell>\n              <StyledTableCell align=\"right\">Race</StyledTableCell>\n              <StyledTableCell align=\"right\">Age</StyledTableCell>\n              <StyledTableCell align=\"right\">Color</StyledTableCell>\n              <StyledTableCell align=\"right\">Owner</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {pets\n              ? pets.map((pet) => (\n                  <StyledTableRow key={pet.id}>\n                    <Link to={`/customers/${pet.customer.id}/pets/${pet.id}`}>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {pet.name}\n                      </StyledTableCell>\n                    </Link>\n                    <StyledTableCell align=\"right\">\n                      {pet.gender}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.race}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.age}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.color}</StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      <Link to={`/customers/${pet.customer.id}`}>\n                        {pet.customer.firstName} {pet.customer.lastName}\n                      </Link>\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))\n              : \"Loading...\"}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayPets(searchResults)\n        : displayPets(pets)}\n    </div>\n  );\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchPet\"\n        freeSolo\n        options={pets.map((pet) => pet.name)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search for pet\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-pet\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"lg\">\n        <h1>Pets</h1>\n        <Link to=\"/dash\">Back to dashboard</Link>\n        <div>\n          <div>{search}</div>\n          {content}\n        </div>\n      </Container>\n    </React.Fragment>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/CustomerProfile.js",["192","193","194"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\n\nimport firebase from \"../../Firebase/firebase\";\n\nexport default function CustomerProfile(props) {\n  const history = useHistory();\n  const [customer, setcustomer] = useState({});\n  const [pets, setpets] = useState([]);\n  const [appointments, setappointments] = useState([]);\n  const [customerImage, setcustomerImage] = useState();\n  const [loading, setloading] = useState();\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n\n  async function getCustomer() {\n    setloading(true);\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => setcustomer(res.data));\n    setloading(false);\n  }\n\n  async function getCustomerPets() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/pets`, {\n        headers: authHeader(),\n      })\n      .then((res) => setpets(res.data));\n  }\n\n  async function getCustomerImage() {\n    let storageRef = firebase.storage().ref();\n    let fileRef = storageRef.child(await customerId);\n    setcustomerImage(await fileRef.getDownloadURL());\n  }\n\n  async function getCustomerAppointments() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/appointments`, {\n        headers: authHeader(),\n      })\n      .then((res) => setappointments(res.data));\n  }\n\n  async function deleteCustomer() {\n    await axios.delete(\n      `http://localhost:8080/customers/${customerId}`,\n      { headers: authHeader() },\n      {\n        data: { customer },\n      }\n    );\n    axios.delete(`http://localhost:8080/delete/${customer.username}`, {\n      headers: authHeader(),\n    });\n    history.push(\"/customers\");\n  }\n\n  async function updateCustomer() {\n    await axios.put(\n      `http://localhost:8080/customers/${customerId}`,\n      {\n        customer,\n      },\n      { headers: authHeader() }\n    );\n  }\n\n  function formatDateWithoutTime(date) {\n    var parsedDate = new Date(date);\n    return parsedDate.toLocaleString();\n  }\n\n  useEffect(() => {\n    getCustomer();\n    getCustomerPets();\n    getCustomerAppointments();\n    getCustomerImage();\n  }, []);\n\n  return (\n    <div>\n      <Link to=\"/dash\">Back to dashboard</Link>\n      <br />\n      Username: {customer.username}\n      <br />\n      First name: {customer.firstName}\n      <br />\n      Last name : {customer.lastName}\n      <br />\n      Email address : {customer.email}\n      <br />\n      Gender : {customer.gender}\n      <br />\n      Address: {customer.address}\n      <br />\n      Last seen at: {formatDateWithoutTime(customer.lastSeen)}\n      <br />\n      {customerImage ? <img src={customerImage} alt=\"customerImage\" style={{ width: \"200px\" }} /> : \"No image\"}\n      <br />\n      <ul>\n        Pets:\n        {pets.map((pet) => (\n          <li>\n            <Link to={`/customers/${customerId}/pets/${pet.id}`}>\n              {pet.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <Link to={`/customers/${customer.id}/addPet`}>Add new pet</Link>\n      <ul>\n        Appointments\n        {appointments.map((app) => (\n          <li>\n            <Link to={`/customers/${customer.id}/appointments/${app.id}`}>\n              {app.reason}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <button className=\"btn btn-danger\" onClick={deleteCustomer}>\n        Delete\n      </button>\n      <Link to={`/customers/${customerId}/updateCustomer`}>\n        <button className=\"btn btn-warning\">Edit</button>\n      </Link>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/AddCustomer.js",["195"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function AddPersons(props) {\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.post(\"http://localhost:8080/customers\", {\n      firstName: data.get(\"firstName\"),\n      lastName: data.get(\"lastName\"),\n      address: data.get(\"address\"),\n      phoneNumber: data.get(\"phoneNumber\"),\n      gender: data.get(\"gender\"),\n      age: data.get(\"age\"),\n      lastSeen: new Date(),\n    });\n  }\n\n  return (\n    <Container\n      style={{\n        border: \"white\",\n        height: \"100%\",\n        width: \"50%\",\n        margin: \"auto\",\n        marginTop: \"5%\",\n      }}\n    >\n      <h1>Add customer</h1>\n      <form\n        className=\"form-signin\"\n        method=\"post\"\n        action=\"/customers\"\n        onSubmit={submitForm}\n      >\n        <div className=\"mb-3\">\n          <label htmlFor=\"firstName\" className=\"form-label\">\n            First Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"firstName\"\n            name=\"firstName\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"lastName\" className=\"form-label\">\n            Last Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"lastName\"\n            name=\"lastName\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"phoneNumber\" className=\"form-label\">\n            Phone Number\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"gender\" className=\"form-label\">\n            Gender\n          </label>\n          <select\n            className=\"form-select form-select-sm mb-3\"\n            aria-label=\".form-select-sm example\"\n            id=\"gender\"\n            name=\"gender\"\n          >\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n            <option value=\"other\">Other</option>\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            name=\"email\"\n          />\n          <div id=\"emailHelp\" className=\"form-text\">\n            We'll never share your email with anyone else.\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"address\" className=\"form-label\">\n            Address\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"address\"\n            name=\"address\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"age\" className=\"form-label\">\n            Age\n          </label>\n          <input type=\"text\" className=\"form-control\" id=\"age\" name=\"age\" />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </Container>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/GetPetsOfCustomer.js",["196","197"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Container } from \"@material-ui/core\";\nimport authHeader from \"../../Services/auth-header\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function GetAllPets(props) {\n  const classes = useStyles();\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n  const [pets, setpets] = useState([]);\n\n  async function getPets() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/pets`, {\n        headers: authHeader(),\n      })\n      .then((res) => setpets(res.data));\n  }\n\n  useEffect(() => {\n    getPets();\n  }, []);\n\n  return (\n    <Container>\n      <Link to=\"/dash\">Back to dashboard</Link>\n      {pets.length > 0 ? (\n        <div>\n          <h1>Pets</h1>{\" \"}\n          <div>\n            <Autocomplete\n              style={{ width: \"250px\" }}\n              freeSolo\n              id=\"free-solo-2-demo\"\n              disableClearable\n              // options={top100Films.map((option) => option.title)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Search input\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          </div>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"customized table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell>Name</StyledTableCell>\n                  <StyledTableCell align=\"right\">Gender</StyledTableCell>\n                  <StyledTableCell align=\"right\">Race</StyledTableCell>\n                  <StyledTableCell align=\"right\">Age</StyledTableCell>\n                  <StyledTableCell align=\"right\">Color</StyledTableCell>\n                  <StyledTableCell align=\"right\">Owner</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {pets.map((pet) => (\n                  <StyledTableRow key={pet.id}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      <Link to={`/customers/${customerId}/pets/${pet.id}`}>\n                        {pet.name}\n                      </Link>\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      {pet.gender}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.race}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.age}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.color}</StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      <Link to={`/customers/${pet.customer.id}`}>\n                        {pet.customer.firstName} {pet.customer.lastName}\n                      </Link>\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      ) : (\n        <h1>No pets for this customer yet.</h1>\n      )}\n    </Container>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/PetDetails.js",["198"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport authHeader from \"../../Services/auth-header\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"../../Styles/PetDetailsPage.css\";\n\nimport firebase from \"../../Firebase/firebase\";\n\nexport default function PetDetails(props) {\n  const {\n    match: { params },\n  } = props;\n\n  const petId = params.petId;\n  const customerId = params.customerId;\n\n  const history = useHistory();\n  const [pet, setpet] = useState({});\n  const [petImage, setpetImage] = useState();\n\n  async function getPet() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/pets/${petId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => {\n        setpet(res.data);\n        getPetImage(res.data.id)\n      })\n  }\n\n  async function deletePet() {\n    await axios.delete(\n      `http://localhost:8080/customers/${customerId}/pets/${petId}`,\n      { headers: authHeader() }\n    );\n    axios.delete(`http://localhost:8080/delete/${pet.name}`, {\n      headers: authHeader(),\n    });\n    history.push(\"/pets\");\n    window.location.reload(\"/pets\");\n  }\n\n  async function getPetImage(petId) {\n    let storageRef = firebase.storage().ref();\n    let fileRef = storageRef.child(await petId);\n    setpetImage(await fileRef.getDownloadURL());\n  }\n\n  useEffect(() => {\n    getPet();\n  }, [petImage]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"petDetailsDiv\">\n        <h1>\n          Pet name: {pet.name} - {pet.type}\n        </h1>\n        <h1>Pet race: {pet.race}</h1>\n        <h1>Pet age: {pet.age}</h1>\n        <h1>Pet color: {pet.color}</h1>\n        <div className=\"petImageDiv\">\n          {petImage ? <img src={petImage} alt=\"\" className=\"petImage\" /> : 'No image'}\n        </div>\n\n        <br />\n        <button className=\"btn btn-danger\" onClick={deletePet}>\n          Delete\n      </button>\n        <Link to={`/customers/${customerId}/pets/${petId}/updatePet`}>\n          <button className=\"btn btn-warning\">Edit</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/Employees.js",["199","200","201"],"import React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport authHeader from \"../../Services/auth-header\";\nimport AuthService from \"../../Services/auth.service\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function Employees() {\n  const classes = useStyles();\n  const [employees, setemployees] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  async function getEmployees() {\n    await axios\n      .get(`http://localhost:8080/clinic/${currentUser.id}/employees`, { headers: authHeader() })\n      .then((res) => setemployees(res.data));\n  }\n\n  useEffect(() => {\n    getEmployees();\n  }, []);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = employees.filter((empl) =>\n      empl.firstName.toString().toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(employees);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchEmployee\"\n        freeSolo\n        options={employees.map((em) => em.firstName)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search employee\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-employee\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  const displayEmployees = (employees) => {\n    return (\n      <React.Fragment>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>FIrst Name</StyledTableCell>\n                <StyledTableCell align=\"left\">Last Name</StyledTableCell>\n                <StyledTableCell align=\"left\">Age</StyledTableCell>\n                <StyledTableCell align=\"left\">Role</StyledTableCell>\n                <StyledTableCell align=\"left\">Phone number</StyledTableCell>\n                <StyledTableCell align=\"left\">Address</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {employees.map((em) => (\n                <StyledTableRow key={em.id}>\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                    <Link to={`/employees/${em.id}`}>{em.firstName}</Link>\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.lastName}</StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.age}</StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.role}</StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    {em.phoneNumber}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.address}</StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </React.Fragment>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayEmployees(searchResults)\n        : displayEmployees(employees)}\n    </div>\n  );\n\n  return (\n    <div>\n      {employees.length > 0 ? (\n        <Container maxWidth=\"lg\" style={{ marginTop: \"5%\" }}>\n          <h1>Employees</h1>\n          <div>{search}</div>\n          <Link to=\"/addEmployee\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Add employee\n            </button>\n          </Link>\n          {content}\n        </Container>\n      ) : (\n        <Container>\n          <h2>No employees yet.</h2>\n          <Link to=\"/addEmployee\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Add employee\n            </button>\n          </Link>\n        </Container>\n      )}\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/UpdatePet.js",["202","203","204"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function UpdatePet(props) {\n  const {\n    match: { params },\n  } = props;\n  const petId = params.petId;\n  const customerId = params.customerId;\n  const [pet, setpet] = useState({});\n  const [customer, setcustomer] = useState({});\n  const [loading, setloading] = useState(false);\n  const history = useHistory();\n\n  async function getPet() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/pets/${petId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => setpet(res.data));\n  }\n\n  const onChangeHandler = (e) => {\n    setpet({\n      ...pet,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    setloading(true);\n    getPet();\n    setloading(false)\n  }, []);\n\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.put(\n      `http://localhost:8080/customers/${customerId}/pets/${petId}`,\n      {\n        id: petId,\n        name: data.get(\"name\"),\n        type: data.get(\"type\"),\n        gender: data.get(\"gender\"),\n        race: data.get(\"race\"),\n        age: data.get(\"age\"),\n        color: data.get(\"color\"),\n        customer: pet.customer,\n        lastSeen: new Date(),\n      },\n      { headers: authHeader() }\n    );\n\n    history.push(`/dash`);\n    // window.location.reload();\n  }\n\n  return (\n    <Container\n      style={{\n        border: \"white\",\n        height: \"100%\",\n        width: \"50%\",\n        margin: \"auto\",\n        marginTop: \"5%\",\n      }}\n    >\n      {loading ? (\n        <div>\n          <span className=\"spinner-border spinner-border-sm\"></span>\n          <p>Updating your profile</p>\n        </div>\n      ) : (\n          <React.Fragment>\n            <Link to={`/customers/${customerId}/pets/${petId}`}>Back to pet</Link>\n            <h1>Update pet data</h1>\n            <form className=\"form-signin\" method=\"post\" onSubmit={submitForm}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label\">\n                  Pet name\n              </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={pet.name}\n                  onChange={onChangeHandler}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"race\" className=\"form-label\">\n                  Race\n              </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"race\"\n                  name=\"race\"\n                  value={pet.race}\n                  onChange={onChangeHandler}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"type\" className=\"form-label\">\n                  Type\n              </label>\n                <select\n                  className=\"form-select form-select-sm mb-3\"\n                  aria-label=\".form-select-sm example\"\n                  id=\"type\"\n                  name=\"type\"\n                  value={pet.type}\n                  onChange={onChangeHandler}\n                >\n                  <option value=\"Dog\">Dog</option>\n                  <option value=\"Cat\">Cat</option>\n                  <option value=\"Hamster\">Hamster</option>\n                  <option value=\"Bird\">Bird</option>\n                  <option value=\"Bird\">Rabbit</option>\n                  <option value=\"Other\">Other</option>\n                </select>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"gender\" className=\"form-label\">\n                  Gender\n              </label>\n                <select\n                  className=\"form-select form-select-sm mb-3\"\n                  aria-label=\".form-select-sm example\"\n                  id=\"gender\"\n                  name=\"gender\"\n                  value={pet.gender}\n                  onChange={onChangeHandler}\n                >\n                  <option value=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n                </select>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"color\" className=\"form-label\">\n                  Color\n              </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"color\"\n                  name=\"color\"\n                  value={pet.color}\n                  onChange={onChangeHandler}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"age\" className=\"form-label\">\n                  Age\n              </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"age\"\n                  name=\"age\"\n                  value={pet.age}\n                  onChange={onChangeHandler}\n                />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n            </button>\n            </form>\n          </React.Fragment>\n        )}\n    </Container>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/UpdateEmployee.js",["205"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function UpdateEmployee(props) {\n  const {\n    match: { params },\n  } = props;\n  const employeeId = params.employeeId;\n  const [employee, setEmployee] = useState({});\n  const history = useHistory();\n\n  async function getEmployee() {\n    await axios\n      .get(`http://localhost:8080/employees/${employeeId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => setEmployee(res.data));\n  }\n\n  const onChangeHandler = (e) => {\n    setEmployee({\n      ...employee,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    getEmployee();\n  }, []);\n\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.put(\n      `http://localhost:8080/employees/${employeeId}`,\n      {\n        id: employeeId,\n        firstName: data.get(\"firstName\"),\n        lastName: data.get(\"lastName\"),\n        address: data.get(\"address\"),\n        phoneNumber: data.get(\"phoneNumber\"),\n        gender: data.get(\"gender\"),\n        age: data.get(\"age\"),\n        role: data.get(\"role\"),\n        salary: data.get(\"salary\"),\n        email: data.get(\"email\"),\n        // contractStartingDate: data.get(\"startDate\"),\n        // contractEndingDate: data.get(\"endDate\"),\n      },\n      { headers: authHeader() }\n    );\n    history.push(`/employees/${employeeId}`);\n    window.location.reload(`/employees/${employeeId}`);\n  }\n\n  return (\n    <Container\n      style={{\n        border: \"white\",\n        height: \"100%\",\n        width: \"50%\",\n        margin: \"auto\",\n        marginTop: \"5%\",\n      }}\n    >\n      <Link to={`/employees/${employeeId}`}>Back to employee</Link>\n      <h1>Update employee data</h1>\n      <form\n        className=\"form-signin\"\n        method=\"put\"\n        // action=\"/employee\"\n        onSubmit={submitForm}\n      >\n        <div className=\"mb-3\">\n          <label htmlFor=\"firstName\" className=\"form-label\">\n            First Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"firstName\"\n            name=\"firstName\"\n            value={employee.firstName}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"lastName\" className=\"form-label\">\n            Last Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"lastName\"\n            name=\"lastName\"\n            value={employee.lastName}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"phoneNumber\" className=\"form-label\">\n            Phone Number\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            value={employee.phoneNumber}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"gender\" className=\"form-label\">\n            Gender\n          </label>\n          <select\n            className=\"form-select form-select-sm mb-3\"\n            aria-label=\".form-select-sm example\"\n            id=\"gender\"\n            name=\"gender\"\n            value={employee.gender}\n            onChange={onChangeHandler}\n          >\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n            <option value=\"other\">Other</option>\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"email\" className=\"form-label\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"email\"\n            aria-describedby=\"emailHelp\"\n            name=\"email\"\n            value={employee.email}\n            onChange={onChangeHandler}\n          />\n          <div id=\"emailHelp\" className=\"form-text\">\n            We'll never share your email with anyone else.\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"address\" className=\"form-label\">\n            Address\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"address\"\n            name=\"address\"\n            value={employee.address}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"age\" className=\"form-label\">\n            Age\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"age\"\n            name=\"age\"\n            value={employee.age}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"role\" className=\"form-label\">\n            Role\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"role\"\n            name=\"role\"\n            value={employee.role}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"salary\" className=\"form-label\">\n            Salary\n          </label>\n          <input\n            value={employee.salary}\n            type=\"number\"\n            min=\"1\"\n            step=\"any\"\n            className=\"form-control\"\n            id=\"salary\"\n            name=\"salary\"\n          />\n        </div>\n        {/* <div className=\"mb-3\">\n          <label htmlFor=\"startDate\" className=\"form-label\">\n            Start date\n          </label>\n          <input\n            value={employee.contractStartingDate}\n            type=\"date\"\n            className=\"form-control\"\n            id=\"startDate\"\n            name=\"startDate\"\n          />\n          <label htmlFor=\"endDate\" className=\"form-label\">\n            End date\n          </label>\n          <input\n            value={employee.contractEndingDate}\n            type=\"date\"\n            className=\"form-control\"\n            id=\"endDate\"\n            name=\"endDate\"\n          />\n        </div> */}\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </Container>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/AddEmployee.js",["206","207"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"@material-ui/core\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport AuthService from \"../../Services/auth.service\";\n\nexport default function AddEmployee() {\n  const history = useHistory();\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.post(\n      `http://localhost:8080/clinic/${currentUser.id}/employees`,\n      {\n        firstName: data.get(\"firstName\"),\n        lastName: data.get(\"lastName\"),\n        address: data.get(\"address\"),\n        phoneNumber: data.get(\"phoneNumber\"),\n        email: data.get(\"email\"),\n        gender: data.get(\"gender\"),\n        age: data.get(\"age\"),\n        role: data.get(\"role\"),\n        contractStartingDate: data.get(\"startDate\"),\n        contractEndingDate: data.get(\"endDate\"),\n        salary: data.get(\"salary\"),\n      },\n      { headers: authHeader() }\n    );\n    history.push(`/employees`);\n  }\n\n  return (\n    <div>\n      <Container\n        style={{\n          border: \"white\",\n          height: \"100%\",\n          width: \"50%\",\n          margin: \"auto\",\n          marginTop: \"5%\",\n        }}\n      >\n        <h1>Add employee</h1>\n        <Link to=\"/dash\">Back to dashboard</Link>\n        <form\n          className=\"form-signin\"\n          method=\"post\"\n          action=\"/customers\"\n          onSubmit={submitForm}\n        >\n          <div className=\"mb-3\">\n            <label htmlFor=\"firstName\" className=\"form-label\">\n              First Name\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"firstName\"\n              name=\"firstName\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"lastName\" className=\"form-label\">\n              Last Name\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"lastName\"\n              name=\"lastName\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"email\" className=\"form-label\">\n              Email\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"email\"\n              name=\"email\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"phoneNumber\" className=\"form-label\">\n              Phone Number\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"phoneNumber\"\n              name=\"phoneNumber\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"gender\" className=\"form-label\">\n              Gender\n            </label>\n            <select\n              className=\"form-select form-select-sm mb-3\"\n              aria-label=\".form-select-sm example\"\n              id=\"gender\"\n              name=\"gender\"\n            >\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n              Email address\n            </label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              name=\"email\"\n            />\n            <div id=\"emailHelp\" className=\"form-text\">\n              We'll never share your email with anyone else.\n            </div>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"address\" className=\"form-label\">\n              Address\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"address\"\n              name=\"address\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"age\" className=\"form-label\">\n              Age\n            </label>\n            <input type=\"text\" className=\"form-control\" id=\"age\" name=\"age\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"role\" className=\"form-label\">\n              Role\n            </label>\n            <input type=\"text\" className=\"form-control\" id=\"age\" name=\"role\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"salary\" className=\"form-label\">\n              Salary\n            </label>\n            <input\n              type=\"number\"\n              min=\"1\"\n              step=\"any\"\n              className=\"form-control\"\n              id=\"salary\"\n              name=\"salary\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"startDate\" className=\"form-label\">\n              Start date\n            </label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"startDate\"\n              name=\"startDate\"\n            />\n            <label htmlFor=\"endDate\" className=\"form-label\">\n              End date\n            </label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"endDate\"\n              name=\"endDate\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </Container>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/AddPet.js",["208"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"@material-ui/core\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthService from \"../../Services/auth.service\";\n\nexport default function AddPet(props) {\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n  const history = useHistory();\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  async function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    await axios.post(\n      `http://localhost:8080/clinic/${currentUser.id}/customers/${customerId}/pets`,\n      {\n        name: data.get(\"name\"),\n        gender: data.get(\"gender\"),\n        race: data.get(\"race\"),\n        age: data.get(\"age\"),\n        color: data.get(\"color\"),\n        type: data.get(\"type\"),\n        // picture: data.get(\"picture\"),\n      },\n      { headers: authHeader() }\n    );\n    redirect();\n  }\n\n  function redirect() {\n    history.push(\"/pets\");\n  }\n\n  return (\n    <div>\n      <Container\n        style={{\n          border: \"white\",\n          height: \"100%\",\n          width: \"50%\",\n          margin: \"auto\",\n          marginTop: \"5%\",\n        }}\n      >\n        <h1>Add pet</h1>\n        <form\n          className=\"form-signin\"\n          method=\"post\"\n          action=\"/pets\"\n          onSubmit={submitForm}\n        >\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"form-label\">\n              Name\n            </label>\n            <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"type\" className=\"form-label\">\n              Pet type\n            </label>\n            <select\n              className=\"form-select form-select-sm mb-3\"\n              aria-label=\".form-select-sm example\"\n              id=\"type\"\n              name=\"type\"\n            >\n              <option value=\"dog\">Dog</option>\n              <option value=\"cat\">Cat</option>\n              <option value=\"hamster\">Hamster</option>\n              <option value=\"rabbit\">Rabbit</option>\n              <option value=\"bird\">Bird</option>\n            </select>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"age\" className=\"form-label\">\n              Age\n            </label>\n            <input type=\"text\" className=\"form-control\" id=\"age\" name=\"age\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"race\" className=\"form-label\">\n              Race\n            </label>\n            <input type=\"text\" className=\"form-control\" id=\"race\" name=\"race\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"gender\" className=\"form-label\">\n              Gender\n            </label>\n            <select\n              className=\"form-select form-select-sm mb-3\"\n              aria-label=\".form-select-sm example\"\n              id=\"gender\"\n              name=\"gender\"\n            >\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n            </select>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"color\" className=\"form-label\">\n              Color\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"color\"\n              name=\"color\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label for=\"picture\">Add a picture:</label>\n            <input\n              type=\"file\"\n              id=\"picture\"\n              name=\"picture\"\n              accept=\"image/png, image/jpeg\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </Container>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/GetAllCustomers.js",["209","210","211"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport authHeader from \"../../Services/auth-header\";\nimport AuthService from \"../../Services/auth.service\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  const [customers, setcustomers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  async function getCustomers() {\n    await axios\n      .get(`http://localhost:8080/clinic/${currentUser.id}/customers`, {\n        headers: authHeader(),\n      })\n      .then((res) => setcustomers(res.data));\n  }\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = customers.filter((customer) =>\n      customer.firstName\n        .toString()\n        .toLowerCase()\n        .includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(customers);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  const displayCustomers = (customers) => {\n    return (\n      <TableContainer component={Paper}>\n        <Link to=\"/dash\">Back to dashboard</Link>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>FirstName</StyledTableCell>\n              <StyledTableCell align=\"right\">LastName</StyledTableCell>\n              <StyledTableCell align=\"right\">Address</StyledTableCell>\n              <StyledTableCell align=\"right\">PhoneNumber</StyledTableCell>\n              <StyledTableCell align=\"right\">Gender</StyledTableCell>\n              <StyledTableCell align=\"right\">Age</StyledTableCell>\n              <StyledTableCell align=\"right\">Pets</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {customers.map((customer) => (\n              <StyledTableRow key={customer.id}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  <Link\n                    to={`/customers/${customer.id}`}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    {customer.firstName}\n                  </Link>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.lastName}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.address}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.phoneNumber}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.gender}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{customer.age}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <Link\n                    to={`/customers/${customer.id}/pets`}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    See pets\n                  </Link>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayCustomers(searchResults)\n        : displayCustomers(customers)}\n    </div>\n  );\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchCustomer\"\n        freeSolo\n        options={customers.map((customer) => customer.firstName)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search customer\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-customer\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"lg\">\n        <h1>Customers</h1>\n        <div>{search}</div>\n        <Link to=\"/addCustomer\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Add new customer\n          </button>\n        </Link>\n        {content}\n      </Container>\n    </React.Fragment>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/UpdateCustomer.js",["212","213"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function UpdateCustomer(props) {\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n  const [customer, setcustomer] = useState({});\n  const [loading, setloading] = useState(false);\n  const history = useHistory();\n\n  async function getCustomer() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => setcustomer(res.data));\n  }\n\n  const onChangeHandler = (e) => {\n    setcustomer({\n      ...customer,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    getCustomer();\n  }, []);\n\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.put(\n      `http://localhost:8080/customers/${customerId}`,\n      {\n        id: customerId,\n        firstName: data.get(\"firstName\"),\n        lastName: data.get(\"lastName\"),\n        username: data.get(\"username\"),\n        email: data.get(\"email\"),\n        address: data.get(\"address\"),\n        phoneNumber: data.get(\"phoneNumber\"),\n        gender: data.get(\"gender\"),\n        age: data.get(\"age\"),\n        lastSeen: new Date(),\n      },\n      { headers: authHeader() }\n    );\n\n    history.push(\"/dash\");\n\n  }\n\n  return (\n    <Container\n      style={{\n        border: \"white\",\n        height: \"100%\",\n        width: \"50%\",\n        margin: \"auto\",\n        marginTop: \"5%\",\n      }}\n    >\n      {loading ? (\n        <div>\n          <span className=\"spinner-border spinner-border-sm\"></span>\n          <p>Updating your profile</p>\n        </div>\n      ) : (\n          <React.Fragment>\n            <Link to={`/customers/${customerId}`}>Back to customer</Link>\n            <h1>Update customer data</h1>\n            <form\n              className=\"form-signin\"\n              method=\"post\"\n              action=\"/customers\"\n              onSubmit={submitForm}\n            >\n              <div className=\"mb-3\">\n                <label htmlFor=\"firstName\" className=\"form-label\">\n                  First Name\n              </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  value={customer.firstName}\n                  onChange={onChangeHandler}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"lastName\" className=\"form-label\">\n                  Last Name\n              </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  value={customer.lastName}\n                  onChange={onChangeHandler}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"username\" className=\"form-label\">\n                  Username\n              </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={customer.username}\n                  onChange={onChangeHandler}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"phoneNumber\" className=\"form-label\">\n                  Phone Number\n              </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"phoneNumber\"\n                  name=\"phoneNumber\"\n                  value={customer.phoneNumber}\n                  onChange={onChangeHandler}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"gender\" className=\"form-label\">\n                  Gender\n              </label>\n                <select\n                  className=\"form-select form-select-sm mb-3\"\n                  aria-label=\".form-select-sm example\"\n                  id=\"gender\"\n                  name=\"gender\"\n                  value={customer.gender}\n                  onChange={onChangeHandler}\n                >\n                  <option value=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n                  <option value=\"other\">Other</option>\n                </select>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"email\" className=\"form-label\">\n                  Email address\n              </label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"exampleInputEmail1\"\n                  aria-describedby=\"emailHelp\"\n                  name=\"email\"\n                  value={customer.email}\n                  onChange={onChangeHandler}\n                />\n                <div id=\"emailHelp\" className=\"form-text\">\n                  We'll never share your email with anyone else.\n              </div>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"address\" className=\"form-label\">\n                  Address\n              </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"address\"\n                  name=\"address\"\n                  value={customer.address}\n                  onChange={onChangeHandler}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"age\" className=\"form-label\">\n                  Age\n              </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"age\"\n                  name=\"age\"\n                  value={customer.age}\n                  onChange={onChangeHandler}\n                />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n            </button>\n            </form>\n          </React.Fragment>\n        )}\n    </Container>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/EmployeeProfile.js",["214"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Link } from \"react-router-dom\";\n\nexport default function EmployeeProfile(props) {\n\n  let API_URL = \"http://localhost:8080\";\n\n  const [employee, setEmployee] = useState({});\n  const history = useHistory();\n\n  const {\n    match: { params },\n  } = props;\n  const employeeId = params.employeeId;\n\n  async function getEmployee() {\n    await axios\n      .get(`${API_URL}/employees/${employeeId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => setEmployee(res.data));\n  }\n\n  async function deleteEmployee() {\n    await axios.delete(`${API_URL}/employees/${employeeId}`, {\n      headers: authHeader(),\n    });\n    history.push(`${API_URL}/employees/${employeeId}`);\n    window.location.reload(`${API_URL}/employees/${employeeId}`);\n  }\n\n  function formatDateWithoutTime(date) {\n    var parsedDate = new Date(date);\n    return parsedDate.toLocaleString();\n  }\n\n  useEffect(() => {\n    getEmployee();\n  }, []);\n\n  return (\n    <div>\n      First name: {employee.firstName}\n      <br />\n      Last name : {employee.lastName}\n      <br />\n      Email : {employee.email}\n      <br />\n      Gender : {employee.gender}\n      <br />\n      Address: {employee.address}\n      <br />\n      Phone number: {employee.phoneNumber}\n      <br />\n      Contract started on:{\" \"}\n      {formatDateWithoutTime(employee.contractStartingDate)}\n      <br />\n      Contract ends on: {formatDateWithoutTime(employee.contractEndingDate)}\n      <br />\n      Currently working as a {employee.role}\n      <br />\n      Current salary: {employee.salary}$\n      <br />\n      <button className=\"btn btn-danger\" onClick={deleteEmployee}>\n        Delete\n      </button>\n      <Link to={`/employees/${employeeId}/updateEmployee`}>\n        <button className=\"btn btn-warning\">Edit</button>\n      </Link>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/listItems.js",["215","216","217","218"],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/LastCustomer.js",["219","220","221","222","223"],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Services/auth-header.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Navbar/Navbar.js",["224","225"],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Notification/Components/SimplePopover.js",["226","227","228"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport axios from \"axios\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { Link } from \"react-router-dom\";\nimport authHeader from \"../../Services/auth-header\";\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function SimplePopover() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [questions, setquestions] = useState([]);\n  const [appointments, setappointments] = useState([]);\n  const [numberOfUnseenQuestions, setNumberOfUnseenQuestions] = useState();\n  const [\n    numberOfUnseenAppointments,\n    setNumberOfUnseenAppointments,\n  ] = useState();\n  const [seen, setseen] = useState();\n  var data;\n\n  async function getData() {\n    await axios\n      .get(\"http://localhost:8080/questions\", { headers: authHeader() })\n      .then((res) => setquestions(!res.data.seen ? res.data : \"\"));\n    await axios\n      .get(\"http://localhost:8080/appointments\", { headers: authHeader() })\n      .then((res) => setappointments(!res.data.seen ? res.data : \"\"));\n  }\n\n  useEffect(() => {\n    getData();\n    getNumberOfUnseenQuestions();\n    getNumberOfUnseenAppointments();\n  }, []);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  function markAsSeen() {\n    questions.length > 0\n      ? questions.forEach((q) => {\n          axios.get(\n            `http://localhost:8080/customers/${q.customer.id}/questions/${q.id}/setSeen`,\n            { headers: authHeader() }\n          );\n          setNumberOfUnseenQuestions(0);\n        })\n      : console.log(\"No question\");\n\n    appointments.length > 0\n      ? appointments.forEach((a) => {\n          axios.get(\n            `http://localhost:8080/customers/${a.customer.id}/appointments/${a.id}/setSeen`,\n            { headers: authHeader() }\n          );\n          setNumberOfUnseenAppointments(0);\n        })\n      : console.log(\"No appointment\");\n  }\n\n  async function getNumberOfUnseenQuestions() {\n    return await axios\n      .get(\"http://localhost:8080/questions/seen\", { headers: authHeader() })\n      .then((res) => setNumberOfUnseenQuestions(res.data));\n  }\n\n  async function getNumberOfUnseenAppointments() {\n    return await axios\n      .get(\"http://localhost:8080/appointments/seen\", { headers: authHeader() })\n      .then((res) => setNumberOfUnseenAppointments(res.data));\n  }\n\n  return (\n    <div>\n      <Badge\n        badgeContent={numberOfUnseenQuestions + numberOfUnseenAppointments}\n        color=\"secondary\"\n        onClick={markAsSeen}\n      >\n        {\" \"}\n        <Button\n          aria-describedby={id}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleClick}\n        >\n          <NotificationsIcon />\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <Typography className={classes.typography}>\n            {console.log(questions)}\n            {questions.length > 0\n              ? questions.map((q) =>\n                  !q.seen ? (\n                    <div>\n                      <p>\n                        <Link\n                          to={`/customers/${q.customer.id}/questions/${q.id}`}\n                        >\n                          <strong>{`Question - ${q.text}`}</strong>\n                        </Link>\n                      </p>\n                      <small>{`by ${q.author}`}</small>\n                      <br />\n                    </div>\n                  ) : (\n                    \"\"\n                  )\n                )\n              : \"No new questions\"}\n            <hr />\n            {appointments.length > 0\n              ? appointments.map((a) =>\n                  !a.seen ? (\n                    <div>\n                      <p>\n                        <strong>\n                          <Link\n                            to={`/customers/${a.customer.id}/appointments/${a.id}`}\n                          >{`Appointment - ${a.reason}`}</Link>\n                        </strong>\n                      </p>\n                      <small>{`by ${a.customer.firstName} ${a.customer.lastName}`}</small>\n                      <br />\n                    </div>\n                  ) : (\n                    \"\"\n                  )\n                )\n              : \"No new appointments\"}\n          </Typography>\n        </Popover>\n      </Badge>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Title.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Firebase/firebase.js",[],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":12,"column":8,"nodeType":"235","messageId":"236","endLine":12,"endColumn":21},{"ruleId":"233","severity":1,"message":"237","line":18,"column":8,"nodeType":"235","messageId":"236","endLine":18,"endColumn":19},{"ruleId":"233","severity":1,"message":"238","line":34,"column":10,"nodeType":"235","messageId":"236","endLine":34,"endColumn":21},{"ruleId":"233","severity":1,"message":"239","line":34,"column":23,"nodeType":"235","messageId":"236","endLine":34,"endColumn":37},{"ruleId":"233","severity":1,"message":"240","line":21,"column":8,"nodeType":"235","messageId":"236","endLine":21,"endColumn":20},{"ruleId":"233","severity":1,"message":"241","line":23,"column":8,"nodeType":"235","messageId":"236","endLine":23,"endColumn":18},{"ruleId":"233","severity":1,"message":"239","line":123,"column":23,"nodeType":"235","messageId":"236","endLine":123,"endColumn":37},{"ruleId":"233","severity":1,"message":"239","line":29,"column":23,"nodeType":"235","messageId":"236","endLine":29,"endColumn":37},{"ruleId":"242","severity":1,"message":"243","line":41,"column":6,"nodeType":"244","endLine":41,"endColumn":8,"suggestions":"245"},{"ruleId":"233","severity":1,"message":"246","line":7,"column":8,"nodeType":"235","messageId":"236","endLine":7,"endColumn":16},{"ruleId":"233","severity":1,"message":"247","line":23,"column":9,"nodeType":"235","messageId":"236","endLine":23,"endColumn":16},{"ruleId":"233","severity":1,"message":"248","line":32,"column":18,"nodeType":"235","messageId":"236","endLine":32,"endColumn":30},{"ruleId":"233","severity":1,"message":"249","line":60,"column":11,"nodeType":"235","messageId":"236","endLine":60,"endColumn":15},{"ruleId":"242","severity":1,"message":"250","line":81,"column":6,"nodeType":"244","endLine":81,"endColumn":8,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":20,"column":36,"nodeType":"254","endLine":20,"endColumn":56},{"ruleId":"233","severity":1,"message":"255","line":2,"column":8,"nodeType":"235","messageId":"236","endLine":2,"endColumn":17},{"ruleId":"233","severity":1,"message":"256","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":17},{"ruleId":"233","severity":1,"message":"239","line":8,"column":23,"nodeType":"235","messageId":"236","endLine":8,"endColumn":37},{"ruleId":"233","severity":1,"message":"257","line":9,"column":10,"nodeType":"235","messageId":"236","endLine":9,"endColumn":14},{"ruleId":"233","severity":1,"message":"258","line":11,"column":18,"nodeType":"235","messageId":"236","endLine":11,"endColumn":25},{"ruleId":"233","severity":1,"message":"259","line":16,"column":11,"nodeType":"235","messageId":"236","endLine":16,"endColumn":23},{"ruleId":"233","severity":1,"message":"260","line":42,"column":7,"nodeType":"235","messageId":"236","endLine":42,"endColumn":16},{"ruleId":"233","severity":1,"message":"246","line":14,"column":8,"nodeType":"235","messageId":"236","endLine":14,"endColumn":16},{"ruleId":"233","severity":1,"message":"239","line":49,"column":23,"nodeType":"235","messageId":"236","endLine":49,"endColumn":37},{"ruleId":"242","severity":1,"message":"261","line":64,"column":6,"nodeType":"244","endLine":64,"endColumn":8,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":74,"column":28,"nodeType":"265","messageId":"266","endLine":74,"endColumn":30},{"ruleId":"242","severity":1,"message":"267","line":64,"column":6,"nodeType":"244","endLine":64,"endColumn":8,"suggestions":"268"},{"ruleId":"233","severity":1,"message":"239","line":47,"column":23,"nodeType":"235","messageId":"236","endLine":47,"endColumn":37},{"ruleId":"242","severity":1,"message":"269","line":57,"column":6,"nodeType":"244","endLine":57,"endColumn":8,"suggestions":"270"},{"ruleId":"263","severity":1,"message":"264","line":64,"column":28,"nodeType":"265","messageId":"266","endLine":64,"endColumn":30},{"ruleId":"233","severity":1,"message":"271","line":15,"column":10,"nodeType":"235","messageId":"236","endLine":15,"endColumn":17},{"ruleId":"233","severity":1,"message":"272","line":67,"column":18,"nodeType":"235","messageId":"236","endLine":67,"endColumn":32},{"ruleId":"242","severity":1,"message":"273","line":87,"column":6,"nodeType":"244","endLine":87,"endColumn":8,"suggestions":"274"},{"ruleId":"233","severity":1,"message":"275","line":4,"column":10,"nodeType":"235","messageId":"236","endLine":4,"endColumn":14},{"ruleId":"233","severity":1,"message":"276","line":39,"column":7,"nodeType":"235","messageId":"236","endLine":39,"endColumn":11},{"ruleId":"242","severity":1,"message":"269","line":71,"column":6,"nodeType":"244","endLine":71,"endColumn":8,"suggestions":"277"},{"ruleId":"242","severity":1,"message":"278","line":54,"column":6,"nodeType":"244","endLine":54,"endColumn":16,"suggestions":"279"},{"ruleId":"233","severity":1,"message":"239","line":47,"column":23,"nodeType":"235","messageId":"236","endLine":47,"endColumn":37},{"ruleId":"242","severity":1,"message":"280","line":57,"column":6,"nodeType":"244","endLine":57,"endColumn":8,"suggestions":"281"},{"ruleId":"263","severity":1,"message":"264","line":64,"column":28,"nodeType":"265","messageId":"266","endLine":64,"endColumn":30},{"ruleId":"233","severity":1,"message":"282","line":15,"column":10,"nodeType":"235","messageId":"236","endLine":15,"endColumn":18},{"ruleId":"233","severity":1,"message":"283","line":15,"column":20,"nodeType":"235","messageId":"236","endLine":15,"endColumn":31},{"ruleId":"242","severity":1,"message":"278","line":38,"column":6,"nodeType":"244","endLine":38,"endColumn":8,"suggestions":"284"},{"ruleId":"242","severity":1,"message":"285","line":33,"column":6,"nodeType":"244","endLine":33,"endColumn":8,"suggestions":"286"},{"ruleId":"233","severity":1,"message":"287","line":5,"column":22,"nodeType":"235","messageId":"236","endLine":5,"endColumn":31},{"ruleId":"233","severity":1,"message":"239","line":10,"column":23,"nodeType":"235","messageId":"236","endLine":10,"endColumn":37},{"ruleId":"233","severity":1,"message":"239","line":14,"column":23,"nodeType":"235","messageId":"236","endLine":14,"endColumn":37},{"ruleId":"233","severity":1,"message":"239","line":47,"column":23,"nodeType":"235","messageId":"236","endLine":47,"endColumn":37},{"ruleId":"263","severity":1,"message":"264","line":65,"column":28,"nodeType":"265","messageId":"266","endLine":65,"endColumn":30},{"ruleId":"242","severity":1,"message":"288","line":74,"column":6,"nodeType":"244","endLine":74,"endColumn":8,"suggestions":"289"},{"ruleId":"233","severity":1,"message":"290","line":14,"column":19,"nodeType":"235","messageId":"236","endLine":14,"endColumn":29},{"ruleId":"242","severity":1,"message":"291","line":34,"column":6,"nodeType":"244","endLine":34,"endColumn":8,"suggestions":"292"},{"ruleId":"242","severity":1,"message":"285","line":43,"column":6,"nodeType":"244","endLine":43,"endColumn":8,"suggestions":"293"},{"ruleId":"233","severity":1,"message":"294","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"233","severity":1,"message":"295","line":1,"column":27,"nodeType":"235","messageId":"236","endLine":1,"endColumn":36},{"ruleId":"233","severity":1,"message":"296","line":6,"column":8,"nodeType":"235","messageId":"236","endLine":6,"endColumn":21},{"ruleId":"233","severity":1,"message":"297","line":12,"column":8,"nodeType":"235","messageId":"236","endLine":12,"endColumn":22},{"ruleId":"233","severity":1,"message":"298","line":1,"column":38,"nodeType":"235","messageId":"236","endLine":1,"endColumn":53},{"ruleId":"233","severity":1,"message":"299","line":15,"column":10,"nodeType":"235","messageId":"236","endLine":15,"endColumn":24},{"ruleId":"300","severity":1,"message":"301","line":31,"column":59,"nodeType":"265","messageId":"302","endLine":31,"endColumn":60},{"ruleId":"303","severity":1,"message":"304","line":41,"column":7,"nodeType":"305","messageId":"306","endLine":56,"endColumn":8},{"ruleId":"242","severity":1,"message":"291","line":67,"column":6,"nodeType":"244","endLine":67,"endColumn":8,"suggestions":"307"},{"ruleId":"233","severity":1,"message":"239","line":7,"column":23,"nodeType":"235","messageId":"236","endLine":7,"endColumn":37},{"ruleId":"300","severity":1,"message":"301","line":37,"column":35,"nodeType":"265","messageId":"302","endLine":37,"endColumn":36},{"ruleId":"233","severity":1,"message":"308","line":28,"column":10,"nodeType":"235","messageId":"236","endLine":28,"endColumn":14},{"ruleId":"233","severity":1,"message":"309","line":28,"column":16,"nodeType":"235","messageId":"236","endLine":28,"endColumn":23},{"ruleId":"233","severity":1,"message":"310","line":29,"column":7,"nodeType":"235","messageId":"236","endLine":29,"endColumn":11},"no-native-reassign",["311"],"no-negated-in-lhs",["312"],"no-unused-vars","'PersonProfile' is defined but never used.","Identifier","unusedVar","'AddCustomer' is defined but never used.","'currentUser' is assigned a value but never used.","'setcurrentUser' is assigned a value but never used.","'Appointments' is defined but never used.","'AddPersons' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getQuestions'. Either include it or remove the dependency array.","ArrayExpression",["313"],"'Checkbox' is defined but never used.","'classes' is assigned a value but never used.","'markAsSolved' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQuestion'. Either include it or remove the dependency array.",["314"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ClearIcon' is defined but never used.","'CheckIcon' is defined but never used.","'user' is assigned a value but never used.","'getData' is defined but never used.","'userResponse' is assigned a value but never used.","'vpassword' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAppointments'. Either include it or remove the dependency array.",["315"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getAppointment' and 'markAsSeen'. Either include them or remove the dependency array.",["316"],"React Hook useEffect has a missing dependency: 'getPets'. Either include it or remove the dependency array.",["317"],"'loading' is assigned a value but never used.","'updateCustomer' is defined but never used.","React Hook useEffect has missing dependencies: 'getCustomer', 'getCustomerAppointments', 'getCustomerImage', and 'getCustomerPets'. Either include them or remove the dependency array.",["318"],"'Link' is defined but never used.","'rows' is assigned a value but never used.",["319"],"React Hook useEffect has a missing dependency: 'getPet'. Either include it or remove the dependency array.",["320"],"React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.",["321"],"'customer' is assigned a value but never used.","'setcustomer' is assigned a value but never used.",["322"],"React Hook useEffect has a missing dependency: 'getEmployee'. Either include it or remove the dependency array.",["323"],"'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.",["324"],"'setloading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCustomer'. Either include it or remove the dependency array.",["325"],["326"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'ListSubheader' is defined but never used.","'AssignmentIcon' is defined but never used.","'useLayoutEffect' is defined but never used.","'preventDefault' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["327"],"'seen' is assigned a value but never used.","'setseen' is assigned a value but never used.","'data' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"336","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"347","fix":"353"},{"desc":"351","fix":"354"},"Update the dependencies array to be: [getQuestions]",{"range":"355","text":"356"},"Update the dependencies array to be: [getQuestion]",{"range":"357","text":"358"},"Update the dependencies array to be: [getAppointments]",{"range":"359","text":"360"},"Update the dependencies array to be: [getAppointment, markAsSeen]",{"range":"361","text":"362"},"Update the dependencies array to be: [getPets]",{"range":"363","text":"364"},"Update the dependencies array to be: [getCustomer, getCustomerAppointments, getCustomerImage, getCustomerPets]",{"range":"365","text":"366"},{"range":"367","text":"364"},"Update the dependencies array to be: [getPet, petImage]",{"range":"368","text":"369"},"Update the dependencies array to be: [getEmployees]",{"range":"370","text":"371"},"Update the dependencies array to be: [getPet]",{"range":"372","text":"373"},"Update the dependencies array to be: [getEmployee]",{"range":"374","text":"375"},"Update the dependencies array to be: [getCustomers]",{"range":"376","text":"377"},"Update the dependencies array to be: [getCustomer]",{"range":"378","text":"379"},{"range":"380","text":"375"},{"range":"381","text":"379"},[1330,1332],"[getQuestions]",[2153,2155],"[getQuestion]",[1996,1998],"[getAppointments]",[1923,1925],"[getAppointment, markAsSeen]",[1769,1771],"[getPets]",[2343,2345],"[getCustomer, getCustomerAppointments, getCustomerImage, getCustomerPets]",[1997,1999],[1407,1417],"[getPet, petImage]",[1798,1800],"[getEmployees]",[998,1000],"[getPet]",[853,855],"[getEmployee]",[2194,2196],"[getCustomers]",[902,904],"[getCustomer]",[1102,1104],[1668,1670]]