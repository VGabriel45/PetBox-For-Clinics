[{"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/index.js":"1","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/App.js":"2","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Dashboard.js":"3","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/listItems.js":"4","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Title.js":"5","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/LastCustomer.js":"6","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Notification/Components/SimplePopover.js":"7","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/SuccessPage/SuccesPage.js":"8","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Questions/QuestionPage.js":"9","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Questions/Questions.js":"10","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Appointments/AppointmentPage.js":"11","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Appointments/Appointments.js":"12","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Customers/Components/CustomerProfile.js":"13","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Pets/Components/GetAllPets.js":"14","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Customers/Components/AddCustomer.js":"15","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Customers/Components/GetAllCustomers.js":"16","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Pets/Components/PetDetails.js":"17","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Pets/Components/AddPet.js":"18","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Pets/Components/GetPetsOfCustomer.js":"19","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Employess/Components/Employees.js":"20","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Employess/Components/AddEmployee.js":"21","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Employess/Components/EmployeeProfile.js":"22","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Services/auth.service.js":"23","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Auth/login.component.js":"24","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Auth/register.component.js":"25","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Services/user.service.js":"26","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Services/auth-header.js":"27","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Navbar/Navbar.js":"28","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/ClientUI.js/WelcomePage.js":"29"},{"size":274,"mtime":1611409736088,"results":"30","hashOfConfig":"31"},{"size":3418,"mtime":1612187505408,"results":"32","hashOfConfig":"31"},{"size":6147,"mtime":1612179495333,"results":"33","hashOfConfig":"31"},{"size":2471,"mtime":1609849207986,"results":"34","hashOfConfig":"31"},{"size":343,"mtime":1609326640336,"results":"35","hashOfConfig":"31"},{"size":1357,"mtime":1612179348005,"results":"36","hashOfConfig":"31"},{"size":4814,"mtime":1610271874543,"results":"37","hashOfConfig":"31"},{"size":969,"mtime":1610278368325,"results":"38","hashOfConfig":"31"},{"size":2878,"mtime":1610809920362,"results":"39","hashOfConfig":"31"},{"size":2946,"mtime":1610280456869,"results":"40","hashOfConfig":"31"},{"size":3030,"mtime":1610272687965,"results":"41","hashOfConfig":"31"},{"size":5166,"mtime":1610194982481,"results":"42","hashOfConfig":"31"},{"size":2321,"mtime":1610280289986,"results":"43","hashOfConfig":"31"},{"size":4971,"mtime":1610192292389,"results":"44","hashOfConfig":"31"},{"size":3444,"mtime":1610807411642,"results":"45","hashOfConfig":"31"},{"size":5208,"mtime":1611415581096,"results":"46","hashOfConfig":"31"},{"size":1083,"mtime":1610272478088,"results":"47","hashOfConfig":"31"},{"size":3148,"mtime":1610190143569,"results":"48","hashOfConfig":"31"},{"size":4467,"mtime":1610190768719,"results":"49","hashOfConfig":"31"},{"size":5058,"mtime":1610189984119,"results":"50","hashOfConfig":"31"},{"size":4903,"mtime":1610190167909,"results":"51","hashOfConfig":"31"},{"size":1530,"mtime":1610272583465,"results":"52","hashOfConfig":"31"},{"size":846,"mtime":1612187407096,"results":"53","hashOfConfig":"31"},{"size":3850,"mtime":1611409789324,"results":"54","hashOfConfig":"31"},{"size":8657,"mtime":1612187465456,"results":"55","hashOfConfig":"31"},{"size":528,"mtime":1611411426274,"results":"56","hashOfConfig":"31"},{"size":211,"mtime":1611409420100,"results":"57","hashOfConfig":"31"},{"size":1744,"mtime":1612184217552,"results":"58","hashOfConfig":"31"},{"size":163,"mtime":1612179439401,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"6i0kq4",{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"62"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/index.js",[],["139","140"],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/App.js",["141","142","143","144"],"import \"./App.css\";\n\nimport React, { useState } from \"react\";\nimport GetAllPersons from \"./Customers/Components/GetAllCustomers\";\nimport GetAllPets from \"./Pets/Components/GetAllPets\";\nimport GetPetsOfCustomer from \"./Pets/Components/GetPetsOfCustomer\";\nimport Reports from \"./Questions/Questions\";\nimport Employees from \"./Employess/Components/Employees\";\nimport Appointments from \"./Appointments/Appointments\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport PersonProfile from \"./Customers/Components/CustomerProfile\";\nimport PetDetails from \"./Pets/Components/PetDetails\";\nimport AddPet from \"./Pets/Components/AddPet\";\nimport AppointmentPage from \"./Appointments/AppointmentPage\";\nimport AddEmployee from \"./Employess/Components/AddEmployee\";\nimport EmployeeProfile from \"./Employess/Components/EmployeeProfile\";\nimport AddCustomer from \"./Customers/Components/AddCustomer\";\nimport QuestionPage from \"./Questions/QuestionPage\";\nimport SuccesPage from \"./SuccessPage/SuccesPage\";\nimport CustomerProfile from \"./Customers/Components/CustomerProfile\";\n\nimport AuthService from \"./Services/auth.service\";\nimport WelcomePage from \"./ClientUI.js/WelcomePage\";\nimport Register from \"./Auth/register.component\";\nimport Login from \"./Auth/login.component\";\n\nexport default function App() {\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/dash\" component={Dashboard} />\n\n          <Route path=\"/customers\" exact component={GetAllPersons} />\n          <Route\n            path=\"/customers/:customerId\"\n            exact\n            component={CustomerProfile}\n          />\n          <Route path=\"/addCustomer\" exact component={Register} />\n          <Route\n            path=\"/customers/:customerId/pets/:petId\"\n            exact\n            component={PetDetails}\n          />\n          <Route\n            path=\"/customers/:customerId/appointments/:appointmentId\"\n            exact\n            component={AppointmentPage}\n          />\n          <Route\n            path=\"/customers/:customerId/pets\"\n            exact\n            component={GetPetsOfCustomer}\n          />\n\n          <Route\n            path=\"/customers/:customerId/addPet\"\n            exact\n            component={AddPet}\n          />\n          <Route path=\"/pets\" component={GetAllPets} />\n          <Route\n            path=\"/customers/:customerId/pets/:petId\"\n            exact\n            component={PetDetails}\n          />\n\n          <Route path=\"/questions\" exact component={Reports} />\n          <Route\n            path=\"/customers/:customerId/questions/:questionId\"\n            exact\n            component={QuestionPage}\n          />\n\n          <Route path=\"/employees\" component={Employees} exact />\n          <Route\n            path=\"/employees/:employeeId\"\n            component={EmployeeProfile}\n            exact\n          />\n          <Route path=\"/addEmployee\" exact component={AddEmployee} />\n\n          <Route path=\"/appointments\" component={Appointments} />\n\n          <Route path=\"/successPage\" component={SuccesPage} />\n\n          <Route path=\"/home\" component={WelcomePage} />\n\n          <Route path=\"/register\" component={Register} />\n\n          <Route path=\"/login\" component={Login} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Dashboard.js",["145"],"import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { mainListItems, secondaryListItems } from \"./listItems\";\nimport Deposits from \"./LastCustomer\";\nimport Appointments from \"./Appointments/Appointments\";\nimport PetsIcon from \"@material-ui/icons/Pets\";\nimport AddPersons from \"./Customers/Components/AddCustomer\";\nimport SimplePopover from \"./Notification/Components/SimplePopover\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            PetBox <PetsIcon />\n          </Typography>\n          <IconButton color=\"inherit\">\n            <SimplePopover />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <img\n                  src=\"https://veryimportantpets.ro/wp-content/uploads/2019/10/pets-hanging-1.png\"\n                  alt=\"Logo\"\n                  style={{ height: \"100%\" }}\n                />\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper} style={{ height: \"100%\" }}>\n                <AddPersons />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/listItems.js",[],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Title.js",[],["146","147"],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/LastCustomer.js",["148","149"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport axios from \"axios\";\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function LastCustomer() {\n  const classes = useStyles();\n  const [lastcustomer, setlastcustomer] = useState();\n\n  async function getCustomer() {\n    await axios\n      .get(\"http://localhost:8080/customers/lastCustomer\")\n      .then((res) => {\n        setlastcustomer(res.data);\n      });\n  }\n\n  useEffect(() => {\n    getCustomer();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Title>Last Customer</Title>\n      {lastcustomer ? (\n        <div>\n          <Typography component=\"p\" variant=\"h4\">\n            {lastcustomer.firstName} {lastcustomer.lastName}\n          </Typography>\n          <Typography color=\"textSecondary\" className={classes.depositContext}>\n            on {lastcustomer.lastSeen}\n          </Typography>\n          <div>\n            <Link href={`/customers/${lastcustomer.id}`}>View details</Link>\n          </div>\n        </div>\n      ) : (\n        \"Nothing to show\"\n      )}\n    </React.Fragment>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Notification/Components/SimplePopover.js",["150","151","152"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport axios from \"axios\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function SimplePopover() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [questions, setquestions] = useState([]);\n  const [appointments, setappointments] = useState([]);\n  const [numberOfUnseenQuestions, setNumberOfUnseenQuestions] = useState();\n  const [\n    numberOfUnseenAppointments,\n    setNumberOfUnseenAppointments,\n  ] = useState();\n  const [seen, setseen] = useState();\n  var data;\n\n  async function getData() {\n    await axios\n      .get(\"http://localhost:8080/questions\")\n      .then((res) => setquestions(!res.data.seen ? res.data : \"\"));\n    await axios\n      .get(\"http://localhost:8080/appointments\")\n      .then((res) => setappointments(!res.data.seen ? res.data : \"\"));\n  }\n\n  useEffect(() => {\n    getData();\n    getNumberOfUnseenQuestions();\n    getNumberOfUnseenAppointments();\n  }, []);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  function markAsSeen() {\n    questions.length > 0\n      ? questions.forEach((q) => {\n          axios.get(\n            `http://localhost:8080/customers/${q.customer.id}/questions/${q.id}/setSeen`\n          );\n        })\n      : console.log(\"No question\");\n\n    appointments.length > 0\n      ? appointments.forEach((a) => {\n          axios.get(\n            `http://localhost:8080/customers/${a.customer.id}/appointments/${a.id}/setSeen`\n          );\n        })\n      : console.log(\"No appointment\");\n  }\n\n  async function getNumberOfUnseenQuestions() {\n    return await axios\n      .get(\"http://localhost:8080/questions/seen\")\n      .then((res) => setNumberOfUnseenQuestions(res.data));\n  }\n\n  async function getNumberOfUnseenAppointments() {\n    return await axios\n      .get(\"http://localhost:8080/appointments/seen\")\n      .then((res) => setNumberOfUnseenAppointments(res.data));\n  }\n\n  return (\n    <div>\n      {console.log(questions)}\n      <Badge\n        badgeContent={numberOfUnseenQuestions + numberOfUnseenAppointments}\n        color=\"secondary\"\n        onClick={markAsSeen}\n      >\n        {\" \"}\n        <Button\n          aria-describedby={id}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleClick}\n        >\n          <NotificationsIcon />\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <Typography className={classes.typography}>\n            {console.log(questions)}\n            {questions.length > 0\n              ? questions.map((q) =>\n                  !q.seen ? (\n                    <div>\n                      <p>\n                        <Link\n                          to={`/customers/${q.customer.id}/questions/${q.id}`}\n                        >\n                          <strong>{`Question - ${q.text}`}</strong>\n                        </Link>\n                      </p>\n                      <small>{`by ${q.author}`}</small>\n                      <br />\n                    </div>\n                  ) : (\n                    \"\"\n                  )\n                )\n              : \"No new questions\"}\n            <hr />\n            {appointments.length > 0\n              ? appointments.map((a) =>\n                  !a.seen ? (\n                    <div>\n                      <p>\n                        <strong>\n                          <Link\n                            to={`/customers/${a.customer.id}/appointments/${a.id}`}\n                          >{`Appointment - ${a.reason}`}</Link>\n                        </strong>\n                      </p>\n                      <small>{`by ${a.customer.firstName} ${a.customer.lastName}`}</small>\n                      <br />\n                    </div>\n                  ) : (\n                    \"\"\n                  )\n                )\n              : \"No new appointments\"}\n          </Typography>\n        </Popover>\n      </Badge>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/SuccessPage/SuccesPage.js",["153"],"import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { AppBar } from \"@material-ui/core\";\n\nexport default function SuccesPage() {\n  return (\n    <div className=\"successPageBody\">\n      <AppBar />\n      <div className=\"card\">\n        <div\n          style={{\n            \"border-radius\": \"200px\",\n            height: \"200px\",\n            width: \"200px\",\n            background: \"#F8FAF5\",\n            margin: \"0 auto\",\n          }}\n        >\n          <i className=\"checkmark\" className=\"successI\">\n            ✓\n          </i>\n        </div>\n        <h1 className=\"successH1\">Success</h1>\n        <p className=\"successP\">\n          Your response has been sent !\n          <br />\n          <Link to={`/dash`}>\n            <Button variant=\"contained\" style={{ marginTop: \"5%\" }}>\n              Back to dashboard\n            </Button>{\" \"}\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Questions/QuestionPage.js",["154","155"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: \"inline\",\n  },\n}));\n\nexport default function AlignItemsList(props) {\n  const classes = useStyles();\n  const [question, setquestion] = useState([]);\n  const [response, setresponse] = useState();\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n  const questionId = params.questionId;\n\n  async function markAsSolved() {\n    await axios.get(\n      `http://localhost:8080/customers/${customerId}/questions/${questionId}/setSolved`\n    );\n  }\n\n  async function getQuestion() {\n    await axios\n      .get(\n        `http://localhost:8080/customers/${customerId}/questions/${questionId}`\n      )\n      .then((res) => setquestion(res.data));\n  }\n\n  function handleChange(event) {\n    setresponse(event.target.value);\n  }\n\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.get(\n      `http://localhost:8080/customers/${customerId}/questions/${questionId}/setResponse`,\n      {\n        response: data.get(\"response\"),\n      }\n    );\n  }\n\n  useEffect(() => {\n    getQuestion();\n  }, []);\n\n  return (\n    <Container>\n      <p>\n        Question author{\" \"}\n        <small>\n          <Link to={`http://localhost:8080/customers/${customerId}`}>\n            {question.author}\n          </Link>\n        </small>\n      </p>\n      <Paper>\n        <p>Question: {question.text}</p>\n        Response: <small>{response}</small>\n        <form className=\"form-signin\" method=\"post\" onSubmit={submitForm}>\n          <div class=\"form-floating\">\n            <textarea\n              className=\"form-control\"\n              placeholder=\"Leave a comment here\"\n              id=\"response\"\n              style={{ height: \"100px\" }}\n              onChange={handleChange}\n              name=\"response\"\n            ></textarea>\n            <label for=\"floatingTextarea2\">Add your response</label>\n          </div>\n          {/* <Link to={`/successPage`}>\n            {\" \"} */}\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit response\n          </button>\n          {/* </Link> */}\n        </form>\n        <p>Question date: {question.date}</p>\n        Mark as solved:{\" \"}\n        <Checkbox\n          checked={question.solved ? true : false}\n          onClick={markAsSolved}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n        {console.log(question.solved)}\n      </Paper>\n    </Container>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Questions/Questions.js",[],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Appointments/AppointmentPage.js",["156"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function AppointmentPage(props) {\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n  const appointmentId = params.appointmentId;\n  const [appointment, setappointment] = useState({});\n\n  async function getAppointment() {\n    await axios\n      .get(\n        `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}`\n      )\n      .then((res) => setappointment(res.data));\n  }\n\n  function acceptAppointment() {\n    // set accept boolean of appointment to true with a put request\n    axios.get(\n      `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}/accept`\n    );\n  }\n\n  function declineAppointment() {\n    // set accept boolean of appointment to false with a put request\n    axios.get(\n      `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}/decline`\n    );\n  }\n\n  function deleteAppointment() {\n    axios.delete(\n      `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}`\n    );\n  }\n\n  useEffect(() => {\n    getAppointment();\n  }, []);\n\n  return (\n    <div>\n      Appointment author:{\" \"}\n      <h1>\n        {appointment.customer\n          ? appointment.customer.firstName + \" \" + appointment.customer.lastName\n          : \"\"}\n      </h1>\n      Reason of appointment: <h2>{appointment.reason}</h2>\n      Date of appointment: <h3>{appointment.dateOfAppointment}</h3>\n      <div>\n        {appointment.accepted ? (\n          <div>\n            <h2>This appointment has been accepted.</h2>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={declineAppointment}\n              className=\"btn btn-primary btn-sm\"\n            >\n              Change to declined\n            </Button>\n          </div>\n        ) : appointment.declined ? (\n          \"\"\n        ) : (\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={acceptAppointment}\n            >\n              Accept\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={declineAppointment}\n            >\n              Decline\n            </Button>\n          </div>\n        )}\n        {appointment.declined ? (\n          <div>\n            <h2>This appointment has been declined.</h2>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={acceptAppointment}\n            >\n              Change to accepted\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={deleteAppointment}\n            >\n              Delete appointment\n            </Button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      {console.log(appointment.reason)}\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Appointments/Appointments.js",["157","158"],"import React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport axios from \"axios\";\nimport Container from \"@material-ui/core/Container\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  const [appointments, setappointments] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  // var [appointment, setAppointment] = useState({});\n\n  async function getAppointments() {\n    await axios\n      .get(\"http://localhost:8080/appointments\")\n      .then((res) => setappointments(res.data));\n  }\n\n  useEffect(() => {\n    getAppointments();\n  }, []);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = appointments.filter((app) =>\n      app.customer.firstName\n        .toString()\n        .toLowerCase()\n        .includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(appointments);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  // const confirmAppointment = (event) => {\n  //   setAppointment = event.target.value;\n  //   appointment.confirmed = true;\n  //   console.log(appointment.confirmed);\n  //   axios.put(\"http://localhost:8080/appointments\", app);\n  // };\n\n  const displayAppointments = (appointments) => {\n    return (\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Customer Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Date</StyledTableCell>\n              <StyledTableCell align=\"right\">Hour</StyledTableCell>\n              <StyledTableCell align=\"right\">Reason</StyledTableCell>\n              <StyledTableCell align=\"right\">State</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {appointments.map((app) => (\n              <StyledTableRow key={app.id}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  <Link to={`customers/${app.customer.id}`}>\n                    {app.customer.firstName}\n                  </Link>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {app.dateOfAppointment}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {app.dateOfAppointment}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <Link\n                    to={`customers/${app.customer.id}/appointments/${app.id}`}\n                  >\n                    {app.reason}\n                  </Link>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {!app.accepted && !app.declined\n                    ? \"Waiting\"\n                    : app.accepted\n                    ? \"Accepted\"\n                    : \"Declined\"}\n                </StyledTableCell>\n                {console.log(app)}\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayAppointments(searchResults)\n        : displayAppointments(appointments)}\n    </div>\n  );\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchAppointment\"\n        freeSolo\n        options={appointments.map((app) => app.customer.firstName)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search appointment\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-appointment\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"lg\">\n        <h1>Appointments</h1>\n        <div>{search}</div>\n        {content}\n      </Container>\n    </React.Fragment>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Customers/Components/CustomerProfile.js",["159"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default function CustomerProfile(props) {\n  const [customer, setcustomer] = useState({});\n  const [pets, setpets] = useState([]);\n  const [appointments, setappointments] = useState([]);\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n\n  async function getCustomer() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}`)\n      .then((res) => setcustomer(res.data));\n  }\n\n  async function getCustomerPets() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/pets`)\n      .then((res) => setpets(res.data));\n  }\n\n  async function getCustomerAppointments() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/appointments`)\n      .then((res) => setappointments(res.data));\n  }\n\n  async function deleteCustomer() {\n    await axios.delete(`http://localhost:8080/customers/${customerId}`, {\n      data: { customer },\n    });\n  }\n\n  async function updateCustomer() {\n    await axios.put(`http://localhost:8080/customers/${customerId}`, {\n      customer,\n    });\n  }\n\n  useEffect(() => {\n    getCustomer();\n    getCustomerPets();\n    getCustomerAppointments();\n  }, []);\n\n  return (\n    <div>\n      First name: {customer.firstName}\n      <br />\n      Last name : {customer.lastName}\n      <br />\n      Gender : {customer.gender}\n      <br />\n      Address: {customer.address}\n      <br />\n      Last seen at: {customer.lastSeen}\n      <br />\n      <ul>\n        Pets:\n        {pets.map((pet) => (\n          <li>\n            <Link to={`/customers/${customerId}/pets/${pet.id}`}>\n              {pet.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <Link to={`/customers/${customer.id}/addPet`}>Add new pet</Link>\n      <ul>\n        Appointments\n        {appointments.map((app) => (\n          <li>\n            <Link to={`/customers/${customer.id}/appointments/${app.id}`}>\n              {app.reason}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <button className=\"btn btn-danger\" onClick={deleteCustomer}>\n        Delete\n      </button>\n      <button className=\"btn btn-warning\" onClick={updateCustomer}>\n        Edit\n      </button>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Pets/Components/GetAllPets.js",["160","161"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function GetAllPets() {\n  const classes = useStyles();\n  const [pets, setpets] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  async function getPets() {\n    await axios\n      .get(\"http://localhost:8080/pets\")\n      .then((res) => setpets(res.data));\n  }\n\n  useEffect(() => {\n    getPets();\n  }, []);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = pets.filter((pet) =>\n      pet.name.toString().toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(pets);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  const displayPets = (pets) => {\n    return (\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Gender</StyledTableCell>\n              <StyledTableCell align=\"right\">Race</StyledTableCell>\n              <StyledTableCell align=\"right\">Age</StyledTableCell>\n              <StyledTableCell align=\"right\">Color</StyledTableCell>\n              <StyledTableCell align=\"right\">Owner</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {pets\n              ? pets.map((pet) => (\n                  <StyledTableRow key={pet.id}>\n                    <Link to={`/customers/${pet.customer.id}/pets/${pet.id}`}>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {pet.name}\n                      </StyledTableCell>\n                    </Link>\n                    <StyledTableCell align=\"right\">\n                      {pet.gender}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.race}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.age}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.color}</StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      <Link to={`/customers/${pet.customer.id}`}>\n                        {pet.customer.firstName} {pet.customer.lastName}\n                      </Link>\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))\n              : \"Loading...\"}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayPets(searchResults)\n        : displayPets(pets)}\n    </div>\n  );\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchPet\"\n        freeSolo\n        options={pets.map((pet) => pet.name)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search for pet\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-pet\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"lg\">\n        <h1>Pets</h1>\n        <div>\n          <div>{search}</div>\n          {content}\n        </div>\n      </Container>\n    </React.Fragment>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Customers/Components/AddCustomer.js",["162"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function AddPersons(props) {\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    console.log(data.get(\"firstName\"));\n\n    axios.post(\"http://localhost:8080/customers\", {\n      firstName: data.get(\"firstName\"),\n      lastName: data.get(\"lastName\"),\n      address: data.get(\"address\"),\n      phoneNumber: data.get(\"phoneNumber\"),\n      gender: data.get(\"gender\"),\n      age: data.get(\"age\"),\n    });\n  }\n\n  return (\n    <Container\n      style={{\n        border: \"white\",\n        height: \"100%\",\n        width: \"50%\",\n        margin: \"auto\",\n        marginTop: \"5%\",\n      }}\n    >\n      <h1>Add customer</h1>\n      <form\n        className=\"form-signin\"\n        method=\"post\"\n        action=\"/customers\"\n        onSubmit={submitForm}\n      >\n        <div className=\"mb-3\">\n          <label htmlFor=\"firstName\" className=\"form-label\">\n            First Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"firstName\"\n            name=\"firstName\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"lastName\" className=\"form-label\">\n            Last Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"lastName\"\n            name=\"lastName\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"phoneNumber\" className=\"form-label\">\n            Phone Number\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"gender\" className=\"form-label\">\n            Gender\n          </label>\n          <select\n            className=\"form-select form-select-sm mb-3\"\n            aria-label=\".form-select-sm example\"\n            id=\"gender\"\n            name=\"gender\"\n          >\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n            <option value=\"other\">Other</option>\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            name=\"email\"\n          />\n          <div id=\"emailHelp\" className=\"form-text\">\n            We'll never share your email with anyone else.\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"address\" className=\"form-label\">\n            Address\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"address\"\n            name=\"address\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"age\" className=\"form-label\">\n            Age\n          </label>\n          <input type=\"text\" className=\"form-control\" id=\"age\" name=\"age\" />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </Container>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Customers/Components/GetAllCustomers.js",["163"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  const [customers, setcustomers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  async function getCustomers() {\n    await axios\n      .get(\"http://localhost:8080/customers\")\n      .then((res) => setcustomers(res.data));\n  }\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = customers.filter((customer) =>\n      customer.firstName\n        .toString()\n        .toLowerCase()\n        .includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(customers);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  const displayCustomers = (customers) => {\n    return (\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>FirstName</StyledTableCell>\n              <StyledTableCell align=\"right\">LastName</StyledTableCell>\n              <StyledTableCell align=\"right\">Address</StyledTableCell>\n              <StyledTableCell align=\"right\">PhoneNumber</StyledTableCell>\n              <StyledTableCell align=\"right\">Gender</StyledTableCell>\n              <StyledTableCell align=\"right\">Age</StyledTableCell>\n              <StyledTableCell align=\"right\">Pets</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {customers.map((customer) => (\n              <StyledTableRow key={customer.id}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  <Link\n                    to={`/customers/${customer.id}`}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    {customer.firstName}\n                  </Link>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.lastName}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.address}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.phoneNumber}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.gender}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{customer.age}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <Link\n                    to={`/customers/${customer.id}/pets`}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    See pets\n                  </Link>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayCustomers(searchResults)\n        : displayCustomers(customers)}\n    </div>\n  );\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchCustomer\"\n        freeSolo\n        options={customers.map((customer) => customer.firstName)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search customer\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-customer\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"lg\">\n        <h1>Customers</h1>\n        <div>{search}</div>\n        <Link to=\"/addCustomer\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Add new customer\n          </button>\n        </Link>\n        {content}\n      </Container>\n    </React.Fragment>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Pets/Components/PetDetails.js",["164"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function PetDetails(props) {\n  const {\n    match: { params },\n  } = props;\n  const petId = params.petId;\n  const customerId = params.customerId;\n  const [pet, setpet] = useState({});\n\n  async function getPet() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/pets/${petId}`)\n      .then((res) => setpet(res.data));\n  }\n\n  async function deletePet() {\n    await axios.delete(`http://localhost:8080/customers/${customerId}/pets/${petId}`);\n  }\n\n  async function updatePet() {\n    await axios.put(`/customers/${customerId}/pets/${petId}`,{pet});\n  }\n\n  useEffect(() => {\n    getPet();\n  }, []);\n\n  return (\n    <div>\n      <h1>Pet name: {pet.name}</h1>\n      <h1>Pet race: {pet.race}</h1>\n      <h1>Pet age: {pet.age}</h1>\n      <h1>Pet color: {pet.color}</h1>\n      <button className=\"btn btn-danger\" onClick={deletePet}>\n        Delete\n      </button>\n      <button className=\"btn btn-warning\" onClick={updatePet}>\n        Edit\n      </button>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Pets/Components/AddPet.js",[],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Pets/Components/GetPetsOfCustomer.js",["165","166"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Container } from \"@material-ui/core\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function GetAllPets(props) {\n  const classes = useStyles();\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n  const [pets, setpets] = useState([]);\n\n  async function getPets() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/pets`)\n      .then((res) => setpets(res.data));\n  }\n\n  useEffect(() => {\n    getPets();\n  }, []);\n\n  return (\n    <Container>\n      {pets.length > 0 ? (\n        <div>\n          <h1>Pets</h1>{\" \"}\n          <div>\n            <Autocomplete\n              style={{ width: \"250px\" }}\n              freeSolo\n              id=\"free-solo-2-demo\"\n              disableClearable\n              // options={top100Films.map((option) => option.title)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Search input\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          </div>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"customized table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell>Name</StyledTableCell>\n                  <StyledTableCell align=\"right\">Gender</StyledTableCell>\n                  <StyledTableCell align=\"right\">Race</StyledTableCell>\n                  <StyledTableCell align=\"right\">Age</StyledTableCell>\n                  <StyledTableCell align=\"right\">Color</StyledTableCell>\n                  <StyledTableCell align=\"right\">Owner</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {pets.map((pet) => (\n                  <StyledTableRow key={pet.id}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      <Link to={`/customers/${customerId}/pets/${pet.id}`}>\n                        {pet.name}\n                      </Link>\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      {pet.gender}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.race}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.age}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.color}</StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      <Link to={`/customers/${pet.customer.id}`}>\n                        {pet.customer.firstName} {pet.customer.lastName}\n                      </Link>\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      ) : (\n        <h1>No pets for this customer yet.</h1>\n      )}\n    </Container>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Employess/Components/Employees.js",["167"],"import React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function Employees() {\n  const classes = useStyles();\n  const [employees, setemployees] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  async function getEmployees() {\n    await axios\n      .get(\"http://localhost:8080/employees\")\n      .then((res) => setemployees(res.data));\n  }\n\n  useEffect(() => {\n    getEmployees();\n  }, []);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = employees.filter((empl) =>\n      empl.firstName.toString().toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(employees);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchEmployee\"\n        freeSolo\n        options={employees.map((em) => em.firstName)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search employee\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-employee\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  const displayEmployees = (employees) => {\n    return (\n      <React.Fragment>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>FIrst Name</StyledTableCell>\n                <StyledTableCell align=\"left\">Last Name</StyledTableCell>\n                <StyledTableCell align=\"left\">Age</StyledTableCell>\n                <StyledTableCell align=\"left\">Role</StyledTableCell>\n                <StyledTableCell align=\"left\">Salary</StyledTableCell>\n                <StyledTableCell align=\"left\">Phone number</StyledTableCell>\n                <StyledTableCell align=\"left\">Address</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {employees.map((em) => (\n                <StyledTableRow key={em.id}>\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                    <Link to={`/employees/${em.id}`}>{em.firstName}</Link>\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.lastName}</StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.age}</StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.role}</StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.salary}</StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    {em.phoneNumber}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.address}</StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </React.Fragment>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayEmployees(searchResults)\n        : displayEmployees(employees)}\n    </div>\n  );\n\n  return (\n    <div>\n      {employees.length > 0 ? (\n        <Container maxWidth=\"lg\" style={{ marginTop: \"5%\" }}>\n          <h1>Employees</h1>\n          <div>{search}</div>\n          <Link to=\"/addEmployee\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Add employee\n            </button>\n          </Link>\n          {content}\n        </Container>\n      ) : (\n        <Container>\n          <h2>No employees yet.</h2>\n          <Link to=\"/addEmployee\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Add employee\n            </button>\n          </Link>\n        </Container>\n      )}\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Employess/Components/AddEmployee.js",[],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Employess/Components/EmployeeProfile.js",["168","169"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default function EmployeeProfile(props) {\n  const [employee, setEmployee] = useState({});\n  const {\n    match: { params },\n  } = props;\n  const employeeId = params.employeeId;\n\n  async function getEmployee() {\n    await axios\n      .get(`http://localhost:8080/employees/${employeeId}`)\n      .then((res) => setEmployee(res.data));\n  }\n\n  async function deleteEmployee() {\n    await axios.delete(`http://localhost:8080/employees/${employeeId}`, {\n      data: { employee },\n    });\n  }\n\n  async function updateEmployee() {\n    await axios.put(`http://localhost:8080/employees/${employeeId}`, {\n      employee,\n    });\n  }\n\n  useEffect(() => {\n    getEmployee();\n  }, []);\n\n  return (\n    <div>\n      First name: {employee.firstName}\n      <br />\n      Last name : {employee.lastName}\n      <br />\n      Gender : {employee.gender}\n      <br />\n      Address: {employee.address}\n      <br />\n      Phone number: {employee.role}\n      <br />\n      Contract started on: {employee.contractStartingDate}\n      <br />\n      Contract ends on: {employee.contractEndingDate}\n      <br />\n      Currently working as an {employee.role}\n      <br />\n      Current salary: {employee.salary}$\n      <br />\n      <button className=\"btn btn-danger\" onClick={deleteEmployee}>\n        Delete\n      </button>\n      <button className=\"btn btn-warning\" onClick={updateEmployee}>\n        Edit\n      </button>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Services/auth.service.js",[],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Auth/login.component.js",[],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Auth/register.component.js",["170"],"import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../Services/auth.service\";\nimport { Container } from \"@material-ui/core\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangeGender = this.onChangeGender.bind(this);\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    // this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      address: \"\",\n      gender: \"\",\n      successful: false,\n      message: \"\",\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangeFirstName(e) {\n    this.setState({\n      firstName: e.target.value,\n    });\n  }\n\n  onChangeLastName(e) {\n    this.setState({\n      lastName: e.target.value,\n    });\n  }\n\n  onChangePhoneNumber(e) {\n    this.setState({\n      phoneNumber: e.target.value,\n    });\n  }\n\n  onChangeAddress(e) {\n    this.setState({\n      address: e.target.value,\n    });\n  }\n\n  onChangeGender(e) {\n    this.setState({\n      gender: e.target.value,\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.address,\n        this.state.phoneNumber,\n        this.state.gender,\n        this.state.firstName,\n        this.state.lastName\n      ).then(\n        (response) => {\n          this.setState({\n            message: response.data.message,\n            successful: true,\n          });\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage,\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <Container\n        style={{\n          border: \"white\",\n          height: \"100%\",\n          width: \"50%\",\n          margin: \"auto\",\n          marginTop: \"5%\",\n        }}\n      >\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form\n          onSubmit={this.handleRegister}\n          ref={(c) => {\n            this.form = c;\n          }}\n        >\n          {!this.state.successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.onChangeUsername}\n                  validations={[required, vusername]}\n                />\n              </div>\n\n              <div className=\"mb-3\">\n                <label htmlFor=\"firstName\" className=\"form-label\">\n                  First Name\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.firstName}\n                  name=\"firstName\"\n                  onChange={this.onChangeFirstName}\n                  id=\"firstName\"\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"lastName\" className=\"form-label\">\n                  Last Name\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.onChangeLastName}\n                  id=\"lastName\"\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"phoneNumber\" className=\"form-label\">\n                  Phone Number\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.phoneNumber}\n                  onChange={this.onChangePhoneNumber}\n                  id=\"phoneNumber\"\n                  name=\"phoneNumber\"\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"gender\" className=\"form-label\">\n                  Gender\n                </label>\n                <select\n                  className=\"form-select form-select-sm mb-3\"\n                  value={this.state.gender}\n                  onChange={this.onChangeGender}\n                  name=\"gender\"\n                  aria-label=\".form-select-sm example\"\n                  id=\"gender\"\n                >\n                  <option value=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n                  <option value=\"other\">Other</option>\n                </select>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n                  Email address\n                </label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  value={this.state.email}\n                  onChange={this.onChangeEmail}\n                  id=\"exampleInputEmail1\"\n                  validations={[required, email]}\n                  aria-describedby=\"emailHelp\"\n                  name=\"email\"\n                />\n                <div id=\"emailHelp\" className=\"form-text\">\n                  We'll never share your email with anyone else.\n                </div>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"address\" className=\"form-label\">\n                  Address\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.address}\n                  onChange={this.onChangeAddress}\n                  id=\"address\"\n                  name=\"address\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n              </div>\n            </div>\n          )}\n\n          {this.state.message && (\n            <div className=\"form-group\">\n              <div\n                className={\n                  this.state.successful\n                    ? \"alert alert-success\"\n                    : \"alert alert-danger\"\n                }\n                role=\"alert\"\n              >\n                {this.state.message}\n              </div>\n            </div>\n          )}\n          <CheckButton\n            style={{ display: \"none\" }}\n            ref={(c) => {\n              this.checkBtn = c;\n            }}\n          />\n        </Form>\n      </Container>\n    );\n  }\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Services/user.service.js",[],["171","172"],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Services/auth-header.js",[],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/Navbar/Navbar.js",["173"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport AuthService from \"../Services/auth.service\";\n\nexport default function Navbar() {\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  function logOut() {\n    AuthService.logout();\n  }\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <Link to={\"/\"} className=\"navbar-brand\">\n          PetBox\n        </Link>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/home\"} className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n\n          {currentUser && (\n            <li className=\"nav-item\">\n              <Link to={\"/user\"} className=\"nav-link\">\n                User\n              </Link>\n            </li>\n          )}\n        </div>\n\n        {currentUser ? (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/profile\"} className=\"nav-link\">\n                {currentUser.username}\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                LogOut\n              </a>\n            </li>\n          </div>\n        ) : (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\">\n                Login\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to={\"/register\"} className=\"nav-link\">\n                Sign Up\n              </Link>\n            </li>\n          </div>\n        )}\n      </nav>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontend/src/ClientUI.js/WelcomePage.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":12,"column":8,"nodeType":"180","messageId":"181","endLine":12,"endColumn":21},{"ruleId":"178","severity":1,"message":"182","line":18,"column":8,"nodeType":"180","messageId":"181","endLine":18,"endColumn":19},{"ruleId":"178","severity":1,"message":"183","line":29,"column":10,"nodeType":"180","messageId":"181","endLine":29,"endColumn":21},{"ruleId":"178","severity":1,"message":"184","line":29,"column":23,"nodeType":"180","messageId":"181","endLine":29,"endColumn":37},{"ruleId":"178","severity":1,"message":"185","line":21,"column":8,"nodeType":"180","messageId":"181","endLine":21,"endColumn":20},{"ruleId":"174","replacedBy":"186"},{"ruleId":"176","replacedBy":"187"},{"ruleId":"178","severity":1,"message":"188","line":1,"column":38,"nodeType":"180","messageId":"181","endLine":1,"endColumn":53},{"ruleId":"178","severity":1,"message":"189","line":8,"column":10,"nodeType":"180","messageId":"181","endLine":8,"endColumn":24},{"ruleId":"178","severity":1,"message":"190","line":27,"column":10,"nodeType":"180","messageId":"181","endLine":27,"endColumn":14},{"ruleId":"178","severity":1,"message":"191","line":27,"column":16,"nodeType":"180","messageId":"181","endLine":27,"endColumn":23},{"ruleId":"178","severity":1,"message":"192","line":28,"column":7,"nodeType":"180","messageId":"181","endLine":28,"endColumn":11},{"ruleId":"193","severity":1,"message":"194","line":20,"column":36,"nodeType":"195","endLine":20,"endColumn":56},{"ruleId":"178","severity":1,"message":"196","line":20,"column":9,"nodeType":"180","messageId":"181","endLine":20,"endColumn":16},{"ruleId":"197","severity":1,"message":"198","line":61,"column":6,"nodeType":"199","endLine":61,"endColumn":8,"suggestions":"200"},{"ruleId":"197","severity":1,"message":"201","line":43,"column":6,"nodeType":"199","endLine":43,"endColumn":8,"suggestions":"202"},{"ruleId":"178","severity":1,"message":"203","line":14,"column":8,"nodeType":"180","messageId":"181","endLine":14,"endColumn":16},{"ruleId":"204","severity":1,"message":"205","line":66,"column":28,"nodeType":"206","messageId":"207","endLine":66,"endColumn":30},{"ruleId":"197","severity":1,"message":"208","line":48,"column":6,"nodeType":"199","endLine":48,"endColumn":8,"suggestions":"209"},{"ruleId":"178","severity":1,"message":"210","line":38,"column":7,"nodeType":"180","messageId":"181","endLine":38,"endColumn":11},{"ruleId":"204","severity":1,"message":"205","line":73,"column":28,"nodeType":"206","messageId":"207","endLine":73,"endColumn":30},{"ruleId":"178","severity":1,"message":"211","line":4,"column":10,"nodeType":"180","messageId":"181","endLine":4,"endColumn":14},{"ruleId":"204","severity":1,"message":"205","line":60,"column":28,"nodeType":"206","messageId":"207","endLine":60,"endColumn":30},{"ruleId":"197","severity":1,"message":"212","line":28,"column":6,"nodeType":"199","endLine":28,"endColumn":8,"suggestions":"213"},{"ruleId":"178","severity":1,"message":"210","line":38,"column":7,"nodeType":"180","messageId":"181","endLine":38,"endColumn":11},{"ruleId":"197","severity":1,"message":"214","line":68,"column":6,"nodeType":"199","endLine":68,"endColumn":8,"suggestions":"215"},{"ruleId":"204","severity":1,"message":"205","line":61,"column":28,"nodeType":"206","messageId":"207","endLine":61,"endColumn":30},{"ruleId":"178","severity":1,"message":"211","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":14},{"ruleId":"197","severity":1,"message":"216","line":32,"column":6,"nodeType":"199","endLine":32,"endColumn":8,"suggestions":"217"},{"ruleId":"178","severity":1,"message":"218","line":40,"column":7,"nodeType":"180","messageId":"181","endLine":40,"endColumn":16},{"ruleId":"174","replacedBy":"219"},{"ruleId":"176","replacedBy":"220"},{"ruleId":"178","severity":1,"message":"184","line":7,"column":23,"nodeType":"180","messageId":"181","endLine":7,"endColumn":37},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'PersonProfile' is defined but never used.","Identifier","unusedVar","'AddCustomer' is defined but never used.","'currentUser' is assigned a value but never used.","'setcurrentUser' is assigned a value but never used.","'Appointments' is defined but never used.",["221"],["222"],"'useLayoutEffect' is defined but never used.","'preventDefault' is defined but never used.","'seen' is assigned a value but never used.","'setseen' is assigned a value but never used.","'data' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getQuestion'. Either include it or remove the dependency array.","ArrayExpression",["223"],"React Hook useEffect has a missing dependency: 'getAppointment'. Either include it or remove the dependency array.",["224"],"'Checkbox' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getCustomer', 'getCustomerAppointments', and 'getCustomerPets'. Either include them or remove the dependency array.",["225"],"'rows' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getPet'. Either include it or remove the dependency array.",["226"],"React Hook useEffect has a missing dependency: 'getPets'. Either include it or remove the dependency array.",["227"],"React Hook useEffect has a missing dependency: 'getEmployee'. Either include it or remove the dependency array.",["228"],"'vpassword' is assigned a value but never used.",["221"],["222"],"no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [getQuestion]",{"range":"241","text":"242"},"Update the dependencies array to be: [getAppointment]",{"range":"243","text":"244"},"Update the dependencies array to be: [getCustomer, getCustomerAppointments, getCustomerPets]",{"range":"245","text":"246"},"Update the dependencies array to be: [getPet]",{"range":"247","text":"248"},"Update the dependencies array to be: [getPets]",{"range":"249","text":"250"},"Update the dependencies array to be: [getEmployee]",{"range":"251","text":"252"},[1541,1543],"[getQuestion]",[1209,1211],"[getAppointment]",[1295,1297],"[getCustomer, getCustomerAppointments, getCustomerPets]",[709,711],"[getPet]",[1902,1904],"[getPets]",[793,795],"[getEmployee]"]