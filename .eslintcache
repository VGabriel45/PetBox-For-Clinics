[{"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/index.js":"1","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/App.js":"2","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Dashboard.js":"3","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Appointments/Appointments.js":"4","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Questions/Questions.js":"5","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Questions/QuestionPage.js":"6","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Appointments/AppointmentPage.js":"7","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/ClientUI.js/Profile.js":"8","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Services/auth.service.js":"9","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Auth/registerClinic.js":"10","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Auth/register.component.js":"11","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/ClientUI.js/WelcomePage.js":"12","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Auth/login.component.js":"13","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/AddCustomer.js":"14","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/CustomerProfile.js":"15","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/GetAllCustomers.js":"16","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/UpdateCustomer.js":"17","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/GetAllPets.js":"18","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/GetPetsOfCustomer.js":"19","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/PetDetails.js":"20","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/UpdatePet.js":"21","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/AddPet.js":"22","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/EmployeeProfile.js":"23","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/Employees.js":"24","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/AddEmployee.js":"25","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/UpdateEmployee.js":"26","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/LastCustomer.js":"27","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/listItems.js":"28","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Services/auth-header.js":"29","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Notification/Components/SimplePopover.js":"30","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Navbar/Navbar.js":"31","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Title.js":"32","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/ConfirmationScreens/SuccesPage.js":"33","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Navbar/NavigationBar.js":"34","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Appointments/AppointmentComponent.js":"35","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Components/Forms/Authentication/LoginForm.js":"36","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Components/Forms/Authentication/RegisterForm.js":"37","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Components/Forms/Other/AddNewCustomerForm.js":"38","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/CustomerProfileComponent.js":"39","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/PetPageHTML.js":"40","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Firebase/firebase.js":"41","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/EmployeeProfileComponent.js":"42","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Components/Forms/Authentication/FormValidationLogic.js":"43","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Components/Forms/Other/LinearBuffer.js":"44","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Services/user.service.js":"45","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/CustomerProfileLogic.js":"46","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/PetPageLogic.js":"47","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/MicroComponents/PetVaccine.js":"48","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/MicroComponents/PetSick.js":"49","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/MicroComponents/PetAlergic.js":"50","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/MicroComponents/PetHasInjuries.js":"51","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Questions/Components/ConfirmationModal.js":"52"},{"size":274,"mtime":1614354549046,"results":"53","hashOfConfig":"54"},{"size":4441,"mtime":1620379911216,"results":"55","hashOfConfig":"54"},{"size":6429,"mtime":1620304919084,"results":"56","hashOfConfig":"54"},{"size":5408,"mtime":1620236545572,"results":"57","hashOfConfig":"54"},{"size":3652,"mtime":1620390199756,"results":"58","hashOfConfig":"54"},{"size":5354,"mtime":1620389562224,"results":"59","hashOfConfig":"54"},{"size":4854,"mtime":1620236545571,"results":"60","hashOfConfig":"54"},{"size":695,"mtime":1614354549038,"results":"61","hashOfConfig":"54"},{"size":1184,"mtime":1620236545594,"results":"62","hashOfConfig":"54"},{"size":6807,"mtime":1620236545574,"results":"63","hashOfConfig":"54"},{"size":9779,"mtime":1620236545573,"results":"64","hashOfConfig":"54"},{"size":520,"mtime":1620236545576,"results":"65","hashOfConfig":"54"},{"size":4273,"mtime":1620236545573,"results":"66","hashOfConfig":"54"},{"size":3722,"mtime":1620236545580,"results":"67","hashOfConfig":"54"},{"size":3006,"mtime":1620236545581,"results":"68","hashOfConfig":"54"},{"size":5513,"mtime":1620236373074,"results":"69","hashOfConfig":"54"},{"size":7234,"mtime":1620293100244,"results":"70","hashOfConfig":"54"},{"size":4982,"mtime":1620236545591,"results":"71","hashOfConfig":"54"},{"size":4348,"mtime":1620236545592,"results":"72","hashOfConfig":"54"},{"size":2633,"mtime":1620236545592,"results":"73","hashOfConfig":"54"},{"size":5621,"mtime":1620381879692,"results":"74","hashOfConfig":"54"},{"size":4747,"mtime":1620292434683,"results":"75","hashOfConfig":"54"},{"size":1446,"mtime":1620236545585,"results":"76","hashOfConfig":"54"},{"size":5149,"mtime":1620236373080,"results":"77","hashOfConfig":"54"},{"size":5716,"mtime":1620236545585,"results":"78","hashOfConfig":"54"},{"size":6526,"mtime":1620236545586,"results":"79","hashOfConfig":"54"},{"size":2733,"mtime":1620236545589,"results":"80","hashOfConfig":"54"},{"size":2735,"mtime":1620236545596,"results":"81","hashOfConfig":"54"},{"size":240,"mtime":1614354549045,"results":"82","hashOfConfig":"54"},{"size":5107,"mtime":1620236373083,"results":"83","hashOfConfig":"54"},{"size":2424,"mtime":1620236545590,"results":"84","hashOfConfig":"54"},{"size":343,"mtime":1614339007908,"results":"85","hashOfConfig":"54"},{"size":969,"mtime":1620236545579,"results":"86","hashOfConfig":"54"},{"size":3298,"mtime":1620236545590,"results":"87","hashOfConfig":"54"},{"size":1768,"mtime":1620236545569,"results":"88","hashOfConfig":"54"},{"size":5305,"mtime":1620379715592,"results":"89","hashOfConfig":"54"},{"size":7182,"mtime":1620236545578,"results":"90","hashOfConfig":"54"},{"size":9625,"mtime":1620290859919,"results":"91","hashOfConfig":"54"},{"size":7516,"mtime":1620305495099,"results":"92","hashOfConfig":"54"},{"size":7983,"mtime":1620381813124,"results":"93","hashOfConfig":"54"},{"size":430,"mtime":1620236545587,"results":"94","hashOfConfig":"54"},{"size":4961,"mtime":1620236545586,"results":"95","hashOfConfig":"54"},{"size":1355,"mtime":1620236545577,"results":"96","hashOfConfig":"54"},{"size":1091,"mtime":1620379572495,"results":"97","hashOfConfig":"54"},{"size":689,"mtime":1620288931985,"results":"98","hashOfConfig":"54"},{"size":736,"mtime":1620290497734,"results":"99","hashOfConfig":"54"},{"size":2750,"mtime":1620381806077,"results":"100","hashOfConfig":"54"},{"size":986,"mtime":1620304254469,"results":"101","hashOfConfig":"54"},{"size":943,"mtime":1620304256333,"results":"102","hashOfConfig":"54"},{"size":979,"mtime":1620304417830,"results":"103","hashOfConfig":"54"},{"size":1014,"mtime":1620304257337,"results":"104","hashOfConfig":"54"},{"size":1527,"mtime":1620389417953,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1dl3e3i",{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"108"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"108"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"108"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/index.js",[],["240","241"],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/App.js",["242","243","244","245","246"],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Dashboard.js",["247","248","249","250"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { mainListItems, secondaryListItems } from \"./listItems\";\nimport LastCustomer from \"./LastCustomer\";\nimport Appointments from \"./Appointments/Appointments\";\nimport PetsIcon from \"@material-ui/icons/Pets\";\nimport AddPersons from \"./Customers/Components/AddCustomer\";\nimport SimplePopover from \"./Notification/Components/SimplePopover\";\nimport authService from \"./Services/auth.service\";\nimport Register from \"./Auth/register.component\";\nimport NavigationBar from \"./Navbar/NavigationBar\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const [currentUser, setcurrentUser] = useState(authService.getCurrentUser());\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            {currentUser.username} <PetsIcon />\n          </Typography>\n          <IconButton color=\"inherit\">\n            <SimplePopover />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <img\n                  src=\"https://elringtons.com.au/wp-content/uploads/2017/10/pets.jpg\"\n                  alt=\"Logo\"\n                  style={{ height: \"100%\" }}\n                />\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <LastCustomer clinicId={currentUser.id} />\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper} style={{ height: \"100%\" }}>\n                <Register />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Appointments/Appointments.js",["251","252"],"import React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport axios from \"axios\";\nimport Container from \"@material-ui/core/Container\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport authHeader from \"../Services/auth-header\";\nimport AuthService from \"../Services/auth.service\";\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  const [appointments, setappointments] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  async function getAppointments() {\n    await axios\n      .get(`http://localhost:8080/clinic/${currentUser.id}/appointments`, { headers: authHeader() })\n      .then((res) => setappointments(res.data));\n  }\n\n  function formatDateWithoutTime(date) {\n    var parsedDate = new Date(date);\n    return parsedDate.toLocaleDateString();\n  }\n\n  useEffect(() => {\n    getAppointments();\n  }, []);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = appointments.filter((app) =>\n      app.customer.firstName\n        .toString()\n        .toLowerCase()\n        .includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(appointments);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  const displayAppointments = (appointments) => {\n    return (\n      <TableContainer component={Paper}>\n        <Link to=\"/dash\">Back to dashboard</Link>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Customer Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Date</StyledTableCell>\n              <StyledTableCell align=\"right\">Hour</StyledTableCell>\n              <StyledTableCell align=\"right\">Reason</StyledTableCell>\n              <StyledTableCell align=\"right\">Status</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {appointments.map((app) => (\n              <StyledTableRow key={app.id}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  <Link to={`customers/${app.customer.id}`}>\n                    {app.customer.firstName}\n                  </Link>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {formatDateWithoutTime(app.dateOfAppointment)}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{app.hour}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <Link\n                    to={`customers/${app.customer.id}/appointments/${app.id}`}\n                  >\n                    {app.reason}\n                  </Link>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {!app.accepted && !app.declined ? (\n                    <p style={{ color: \"orange\" }}>Waiting</p>\n                  ) : app.accepted ? (\n                    <p style={{ color: \"green\" }}>Accepted</p>\n                  ) : (\n                        <p style={{ color: \"red\" }}>Declined</p>\n                      )}\n                </StyledTableCell>\n                {console.log(app)}\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayAppointments(searchResults)\n        : displayAppointments(appointments)}\n    </div>\n  );\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchAppointment\"\n        freeSolo\n        options={appointments.map((app) => app.customer.firstName)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search appointment\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-appointment\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"lg\">\n        <h1>Appointments</h1>\n        <div>{search}</div>\n        {content}\n      </Container>\n    </React.Fragment>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Questions/Questions.js",["253","254"],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Questions/QuestionPage.js",["255","256","257","258","259"],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Appointments/AppointmentPage.js",["260"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport authHeader from \"../Services/auth-header\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport AppointmentComponent from \"./AppointmentComponent\";\nimport firebase from \"../Firebase/firebase\";\n\nimport \"../Styles/AppointmentPage.css\";\n\nexport default function AppointmentPage(props) {\n  const {\n    match: { params },\n  } = props;\n  const history = useHistory();\n  const customerId = params.customerId;\n  const appointmentId = params.appointmentId;\n  const [appointment, setappointment] = useState({});\n  const [customerImage, setcustomerImage] = useState(\"\");\n\n  async function getAppointment() {\n    await axios\n      .get(\n        `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}`,\n        { headers: authHeader() }\n      )\n      .then((res) => setappointment(res.data));\n  }\n\n  function acceptAppointment() {\n    // set accept boolean of appointment to true with a put request\n    axios.get(\n      `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}/accept`,\n      { headers: authHeader() }\n    );\n    window.location.reload();\n  }\n\n  function declineAppointment() {\n    // set accept boolean of appointment to false with a put request\n    axios.get(\n      `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}/decline`,\n      { headers: authHeader() }\n    );\n    window.location.reload();\n  }\n\n  function deleteAppointment() {\n    axios.delete(\n      `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}`,\n      { headers: authHeader() }\n    );\n    history.push(\"/appointments\");\n    window.location.reload(\"/appointments\");\n  }\n\n  function markAsSeen() {\n    axios.get(\n      `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}/setSeen`,\n      { headers: authHeader() }\n    );\n  }\n\n  function formatDateWithoutTime(date) {\n    var parsedDate = new Date(date);\n    return parsedDate.toLocaleDateString();\n  }\n\n  async function getCustomerImage() {\n    let storageRef = firebase.storage().ref();\n    let fileRef = storageRef.child(await customerId);\n    setcustomerImage(await fileRef.getDownloadURL());\n  }\n\n  useEffect(() => {\n    getAppointment();\n    markAsSeen();\n    getCustomerImage();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"container box\" style={{ width: \"40%\", marginTop: \"10%\" }}>\n        <br />\n        <Link to=\"/appointments\">Back to appointments</Link>\n        <br />\n        <br />\n        <AppointmentComponent\n          appointment={appointment}\n          customerImage={customerImage}\n          date={formatDateWithoutTime(appointment.dateOfAppointment)}\n        />\n        <br />\n        <div>\n          {appointment.accepted ? (\n            <div>\n              <div class=\"notification is-primary\">\n                <h2>This appointment has been accepted.</h2>\n              </div>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={declineAppointment}\n                style={{ marginRight: \"235px\" }}\n                // className=\"btn btn-primary btn-sm\"\n              >\n                Change to declined\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={deleteAppointment}\n              >\n                Delete appointment\n              </Button>\n            </div>\n          ) : appointment.declined ? (\n            \"\"\n          ) : (\n            <div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={acceptAppointment}\n              >\n                Accept\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={declineAppointment}\n              >\n                Decline\n              </Button>\n            </div>\n          )}\n          {appointment.declined ? (\n            <div>\n              <div class=\"notification is-danger\">\n                <h2>This appointment has been declined.</h2>\n              </div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={acceptAppointment}\n                style={{ marginRight: \"230px\" }}\n              >\n                Change to accepted\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={deleteAppointment}\n              >\n                Delete appointment\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n        {console.log(appointment.reason)}\n      </div>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/ClientUI.js/Profile.js",["261","262","263","264","265","266"],"import React, { useState } from \"react\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AuthService from \"../Services/auth.service\";\nimport axios from \"axios\";\n\nexport default function Profile(props) {\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n  const [user, setuser] = useState({});\n\n  async function getData() {\n    const response = await axios.get(\n      `http://localhost:8080/customers/${currentUser.id}`\n    );\n    setuser(response.data);\n    const userResponse = axios.get(\n      `http://localhost:8080/customers/${currentUser.id}`\n    );\n  }\n\n  return <div>{currentUser.username}</div>;\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Services/auth.service.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Auth/registerClinic.js",["267"],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Auth/register.component.js",["268","269","270"],"import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport AuthService from \"../Services/auth.service\";\nimport { Container } from \"@material-ui/core\";\nimport NavigationBar from \"../Navbar/NavigationBar\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangeGender = this.onChangeGender.bind(this);\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.currentUser = AuthService.getCurrentUser();\n    this.onChangeImage = this.onChangeImage.bind(this);\n    // this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      address: \"\",\n      gender: \"\",\n      image: \"\",\n      successful: false,\n      message: \"\",\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangeFirstName(e) {\n    this.setState({\n      firstName: e.target.value,\n    });\n  }\n\n  onChangeLastName(e) {\n    this.setState({\n      lastName: e.target.value,\n    });\n  }\n\n  onChangePhoneNumber(e) {\n    this.setState({\n      phoneNumber: e.target.value,\n    });\n  }\n\n  onChangeAddress(e) {\n    this.setState({\n      address: e.target.value,\n    });\n  }\n\n  onChangeGender(e) {\n    this.setState({\n      gender: e.target.value,\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  onChangeImage(e) {\n    this.setState({\n      image: e.target.files[0],\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username + ` - ${this.currentUser.username}`,\n        this.state.email,\n        this.state.address,\n        this.state.phoneNumber,\n        this.state.gender,\n        this.state.firstName,\n        this.state.lastName\n      ).then(\n        (response) => {\n          this.setState({\n            message: response.data.message,\n            successful: true,\n          });\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage,\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container box\">\n        <NavigationBar />\n        <Container\n          style={{\n            border: \"white\",\n            height: \"100%\",\n            width: \"50%\",\n            margin: \"auto\",\n            marginTop: \"5%\",\n          }}\n        >\n          <Link to=\"/dash\">Back to dashboard</Link>\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <label htmlFor=\"firstName\" className=\"form-label\">\n                    First Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={this.state.firstName}\n                    name=\"firstName\"\n                    onChange={this.onChangeFirstName}\n                    id=\"firstName\"\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"lastName\" className=\"form-label\">\n                    Last Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"lastName\"\n                    value={this.state.lastName}\n                    onChange={this.onChangeLastName}\n                    id=\"lastName\"\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"phoneNumber\" className=\"form-label\">\n                    Phone Number\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={this.state.phoneNumber}\n                    onChange={this.onChangePhoneNumber}\n                    id=\"phoneNumber\"\n                    name=\"phoneNumber\"\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"gender\" className=\"form-label\">\n                    Gender\n                  </label>\n                  <select\n                    className=\"form-select form-select-sm mb-3\"\n                    value={this.state.gender}\n                    onChange={this.onChangeGender}\n                    name=\"gender\"\n                    aria-label=\".form-select-sm example\"\n                    id=\"gender\"\n                  >\n                    <option defaultValue=\"male\">Male</option>\n                    <option value=\"female\">Female</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n\n                <div className=\"mb-3\">\n                  <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n                    Email address\n                  </label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    id=\"exampleInputEmail1\"\n                    validations={[required, email]}\n                    aria-describedby=\"emailHelp\"\n                    name=\"email\"\n                  />\n                  <div id=\"emailHelp\" className=\"form-text\">\n                    We'll never share your email with anyone else.\n                  </div>\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n                    Email address\n                  </label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    id=\"exampleInputEmail1\"\n                    validations={[required, email]}\n                    aria-describedby=\"emailHelp\"\n                    name=\"email\"\n                  />\n                  <div id=\"emailHelp\" className=\"form-text\">\n                    We'll never share your email with anyone else.\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">\n                    Add customer\n                  </button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/ClientUI.js/WelcomePage.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Auth/login.component.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/AddCustomer.js",["271"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function AddPersons(props) {\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.post(\"http://localhost:8080/customers\", {\n      firstName: data.get(\"firstName\"),\n      lastName: data.get(\"lastName\"),\n      address: data.get(\"address\"),\n      phoneNumber: data.get(\"phoneNumber\"),\n      gender: data.get(\"gender\"),\n      age: data.get(\"age\"),\n      lastSeen: new Date(),\n    });\n    let imageData = new FormData();\n    imageData.append(\"file\", data.get(\"image\"));\n    axios.post(\n      `http://localhost:8080/upload/customer/${data.get(\"name\")}`,\n      imageData\n    );\n  }\n\n  return (\n    <Container\n      style={{\n        border: \"white\",\n        height: \"100%\",\n        width: \"50%\",\n        margin: \"auto\",\n        marginTop: \"5%\",\n      }}\n    >\n      <h1>Add customer</h1>\n      <form\n        className=\"form-signin\"\n        method=\"post\"\n        action=\"/customers\"\n        onSubmit={submitForm}\n      >\n        <div className=\"mb-3\">\n          <label htmlFor=\"firstName\" className=\"form-label\">\n            First Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"firstName\"\n            name=\"firstName\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"lastName\" className=\"form-label\">\n            Last Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"lastName\"\n            name=\"lastName\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"phoneNumber\" className=\"form-label\">\n            Phone Number\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"gender\" className=\"form-label\">\n            Gender\n          </label>\n          <select\n            className=\"form-select form-select-sm mb-3\"\n            aria-label=\".form-select-sm example\"\n            id=\"gender\"\n            name=\"gender\"\n          >\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n            <option value=\"other\">Other</option>\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            name=\"email\"\n          />\n          <div id=\"emailHelp\" className=\"form-text\">\n            We'll never share your email with anyone else.\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"address\" className=\"form-label\">\n            Address\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"address\"\n            name=\"address\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"age\" className=\"form-label\">\n            Age\n          </label>\n          <input type=\"text\" className=\"form-control\" id=\"age\" name=\"age\" />\n        </div>\n        <div>\n          <input type=\"file\" className=\"form-control\" name=\"image\" />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </Container>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/CustomerProfile.js",["272","273"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\n\nimport firebase from \"../../Firebase/firebase\";\nimport CustomerProfileComponent from \"./CustomerProfileComponent\";\nimport NavigationBar from \"../../Navbar/NavigationBar\";\n\nimport \"../../Styles/CustomerProfile.css\";\n\nexport default function CustomerProfile(props) {\n  const {\n    match: { params },\n  } = props;\n\n  const history = useHistory();\n\n  const [customer, setcustomer] = useState({});\n  const customerId = params.customerId;\n  const [customerImage, setcustomerImage] = useState();\n\n  const [pets, setpets] = useState([]);\n  const [appointments, setappointments] = useState([]);\n  const [questions, setquestions] = useState([]);\n\n  const [loading, setloading] = useState();\n\n  async function getCustomer() {\n    setloading(true);\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => setcustomer(res.data));\n    setloading(false);\n  }\n\n  async function getCustomerPets() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/pets`, {\n        headers: authHeader(),\n      })\n      .then((res) => setpets(res.data));\n  }\n\n  async function getCustomerImage() {\n    let storageRef = firebase.storage().ref();\n    let fileRef = storageRef.child(await customerId);\n    setcustomerImage(await fileRef.getDownloadURL());\n  }\n\n  async function getCustomerAppointments() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/appointments`, {\n        headers: authHeader(),\n      })\n      .then((res) => setappointments(res.data));\n  }\n\n  async function getCustomerQuestions() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/questions`, {\n        headers: authHeader(),\n      })\n      .then((res) => setquestions(res.data));\n  }\n\n  async function deleteCustomer() {\n    await axios.delete(\n      `http://localhost:8080/customers/${customerId}`,\n      { headers: authHeader() },\n      {\n        data: { customer },\n      }\n    );\n    axios.delete(`http://localhost:8080/delete/${customer.username}`, {\n      headers: authHeader(),\n    });\n    history.push(\"/customers\");\n  }\n\n  async function updateCustomer() {\n    await axios.put(\n      `http://localhost:8080/customers/${customerId}`,\n      {\n        customer,\n      },\n      { headers: authHeader() }\n    );\n  }\n\n  function formatDateWithoutTime(date) {\n    var parsedDate = new Date(date);\n    return parsedDate.toLocaleString();\n  }\n\n  useEffect(() => {\n    getCustomer();\n    getCustomerPets();\n    getCustomerAppointments();\n    getCustomerImage();\n  }, []);\n\n  return (\n    <div>\n      <NavigationBar />\n      <CustomerProfileComponent\n        customer={customer}\n        customerImage={customerImage}\n        pets={pets}\n        appointments={appointments}\n        questions={questions}\n      />\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/GetAllCustomers.js",["274","275","276"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport authHeader from \"../../Services/auth-header\";\nimport AuthService from \"../../Services/auth.service\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  const [customers, setcustomers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  async function getCustomers() {\n    await axios\n      .get(`http://localhost:8080/clinic/${currentUser.id}/customers`, {\n        headers: authHeader(),\n      })\n      .then((res) => setcustomers(res.data));\n  }\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = customers.filter((customer) =>\n      customer.firstName\n        .toString()\n        .toLowerCase()\n        .includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(customers);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  const displayCustomers = (customers) => {\n    return (\n      <TableContainer component={Paper}>\n        <Link to=\"/dash\">Back to dashboard</Link>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>FirstName</StyledTableCell>\n              <StyledTableCell align=\"right\">LastName</StyledTableCell>\n              <StyledTableCell align=\"right\">Address</StyledTableCell>\n              <StyledTableCell align=\"right\">PhoneNumber</StyledTableCell>\n              <StyledTableCell align=\"right\">Gender</StyledTableCell>\n              <StyledTableCell align=\"right\">Age</StyledTableCell>\n              <StyledTableCell align=\"right\">Pets</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {customers.map((customer) => (\n              <StyledTableRow key={customer.id}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  <Link\n                    to={`/customers/${customer.id}`}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    {customer.firstName}\n                  </Link>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.lastName}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.address}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.phoneNumber}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.gender}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{customer.age}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <Link\n                    to={`/customers/${customer.id}/pets`}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    See pets\n                  </Link>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayCustomers(searchResults)\n        : displayCustomers(customers)}\n    </div>\n  );\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchCustomer\"\n        freeSolo\n        options={customers.map((customer) => customer.firstName)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search customer\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-customer\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"lg\">\n        <h1>Customers</h1>\n        <div>{search}</div>\n        <Link to=\"/addCustomer\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Add new customer\n          </button>\n        </Link>\n        {content}\n      </Container>\n    </React.Fragment>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/UpdateCustomer.js",["277","278"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Grid, Avatar } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\nimport NavigationBar from \"../../Navbar/NavigationBar\";\n\nconst avatarStyle = {\n  backgroundColor: \"whitesmoke\",\n};\n\nexport default function UpdateCustomer(props) {\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n  const [customer, setcustomer] = useState({});\n  const [loading, setloading] = useState(false);\n  const history = useHistory();\n\n  async function getCustomer() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => setcustomer(res.data));\n  }\n\n  const onChangeHandler = (e) => {\n    setcustomer({\n      ...customer,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    getCustomer();\n  }, []);\n\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.put(\n      `http://localhost:8080/customers/${customerId}`,\n      {\n        id: customerId,\n        firstName: data.get(\"firstName\"),\n        lastName: data.get(\"lastName\"),\n        username: data.get(\"username\"),\n        email: data.get(\"email\"),\n        address: data.get(\"address\"),\n        phoneNumber: data.get(\"phoneNumber\"),\n        gender: data.get(\"gender\"),\n        age: data.get(\"age\"),\n        lastSeen: new Date(),\n      },\n      { headers: authHeader() }\n    );\n\n    history.push(\"/dash\");\n  }\n\n  return (\n    <div>\n      <NavigationBar />\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"5%\" }}\n      >\n        <div className=\"box\" style={{ width: \"50%\" }}>\n          {loading ? (\n            <div>\n              <span className=\"spinner-border spinner-border-sm\"></span>\n              <p>Updating your profile</p>\n            </div>\n          ) : (\n            <div>\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <h1>Update customer data</h1>\n              </div>\n              <Grid align=\"center\" className=\"mt-2\">\n                <Avatar style={avatarStyle}>\n                  <img\n                    src=\"https://i.pinimg.com/originals/0c/3b/3a/0c3b3adb1a7530892e55ef36d3be6cb8.png\"\n                    alt=\"\"\n                  />\n                </Avatar>\n              </Grid>\n              <br />\n              <Link to={`/customers/${customerId}`}>Back to customer</Link>\n              <hr />\n              <form\n                className=\"form-signin\"\n                method=\"post\"\n                action=\"/customers\"\n                onSubmit={submitForm}\n              >\n                <div className=\"mb-3\">\n                  <label htmlFor=\"firstName\" className=\"form-label\">\n                    First Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    value={customer.firstName}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"lastName\" className=\"form-label\">\n                    Last Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    value={customer.lastName}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"username\" className=\"form-label\">\n                    Username\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"username\"\n                    name=\"username\"\n                    value={customer.username}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"phoneNumber\" className=\"form-label\">\n                    Phone Number\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"phoneNumber\"\n                    name=\"phoneNumber\"\n                    value={customer.phoneNumber}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"gender\" className=\"form-label\">\n                    Gender\n                  </label>\n                  <select\n                    className=\"form-select form-select-sm mb-3\"\n                    aria-label=\".form-select-sm example\"\n                    id=\"gender\"\n                    name=\"gender\"\n                    value={customer.gender}\n                    onChange={onChangeHandler}\n                  >\n                    <option value=\"male\">Male</option>\n                    <option value=\"female\">Female</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"email\" className=\"form-label\">\n                    Email address\n                  </label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    id=\"exampleInputEmail1\"\n                    aria-describedby=\"emailHelp\"\n                    name=\"email\"\n                    value={customer.email}\n                    onChange={onChangeHandler}\n                  />\n                  <div id=\"emailHelp\" className=\"form-text\">\n                    We'll never share your email with anyone else.\n                  </div>\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"address\" className=\"form-label\">\n                    Address\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"address\"\n                    name=\"address\"\n                    value={customer.address}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"age\" className=\"form-label\">\n                    Age\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"age\"\n                    name=\"age\"\n                    value={customer.age}\n                    onChange={onChangeHandler}\n                  />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Submit\n                </button>\n              </form>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/GetAllPets.js",["279","280","281"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport authHeader from \"../../Services/auth-header\";\nimport AuthService from \"../../Services/auth.service\";\nimport NavigationBar from \"../../Navbar/NavigationBar\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function GetAllPets() {\n  const classes = useStyles();\n  const [pets, setpets] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  async function getPets() {\n    await axios\n      .get(`http://localhost:8080/clinic/${currentUser.id}/pets`, {\n        headers: authHeader(),\n      })\n      .then((res) => setpets(res.data));\n  }\n\n  useEffect(() => {\n    getPets();\n  }, []);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = pets.filter((pet) =>\n      pet.name.toString().toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(pets);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  const displayPets = (pets) => {\n    return (\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Gender</StyledTableCell>\n              <StyledTableCell align=\"right\">Race</StyledTableCell>\n              <StyledTableCell align=\"right\">Age</StyledTableCell>\n              <StyledTableCell align=\"right\">Color</StyledTableCell>\n              <StyledTableCell align=\"right\">Owner</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {pets\n              ? pets.map((pet) => (\n                  <StyledTableRow key={pet.id}>\n                    <Link to={`/customers/${pet.customer.id}/pets/${pet.id}`}>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {pet.name}\n                      </StyledTableCell>\n                    </Link>\n                    <StyledTableCell align=\"right\">\n                      {pet.gender}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.race}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.age}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.color}</StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      <Link to={`/customers/${pet.customer.id}`}>\n                        {pet.customer.firstName} {pet.customer.lastName}\n                      </Link>\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))\n              : \"Loading...\"}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayPets(searchResults)\n        : displayPets(pets)}\n    </div>\n  );\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchPet\"\n        freeSolo\n        options={pets.map((pet) => pet.name)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search for pet\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-pet\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Container maxWidth=\"lg\">\n        <h1>Pets</h1>\n        <Link to=\"/dash\">Back to dashboard</Link>\n        <div>\n          <div>{search}</div>\n          {content}\n        </div>\n      </Container>\n    </React.Fragment>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/GetPetsOfCustomer.js",["282","283"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Container } from \"@material-ui/core\";\nimport authHeader from \"../../Services/auth-header\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function GetAllPets(props) {\n  const classes = useStyles();\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n  const [pets, setpets] = useState([]);\n\n  async function getPets() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/pets`, {\n        headers: authHeader(),\n      })\n      .then((res) => setpets(res.data));\n  }\n\n  useEffect(() => {\n    getPets();\n  }, []);\n\n  return (\n    <Container>\n      <Link to=\"/dash\">Back to dashboard</Link>\n      {pets.length > 0 ? (\n        <div>\n          <h1>Pets</h1>{\" \"}\n          <div>\n            <Autocomplete\n              style={{ width: \"250px\" }}\n              freeSolo\n              id=\"free-solo-2-demo\"\n              disableClearable\n              // options={top100Films.map((option) => option.title)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Search input\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          </div>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"customized table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell>Name</StyledTableCell>\n                  <StyledTableCell align=\"right\">Gender</StyledTableCell>\n                  <StyledTableCell align=\"right\">Race</StyledTableCell>\n                  <StyledTableCell align=\"right\">Age</StyledTableCell>\n                  <StyledTableCell align=\"right\">Color</StyledTableCell>\n                  <StyledTableCell align=\"right\">Owner</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {pets.map((pet) => (\n                  <StyledTableRow key={pet.id}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      <Link to={`/customers/${customerId}/pets/${pet.id}`}>\n                        {pet.name}\n                      </Link>\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      {pet.gender}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.race}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.age}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.color}</StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      <Link to={`/customers/${pet.customer.id}`}>\n                        {pet.customer.firstName} {pet.customer.lastName}\n                      </Link>\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      ) : (\n        <h1>No pets for this customer yet.</h1>\n      )}\n    </Container>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/PetDetails.js",["284"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport authHeader from \"../../Services/auth-header\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport firebase from \"../../Firebase/firebase\";\nimport PetPageHTML from \"./PetPageHTML\";\nimport NavigationBar from \"../../Navbar/NavigationBar\";\n\nexport default function PetDetails(props) {\n  const {\n    match: { params },\n  } = props;\n\n  const petId = params.petId;\n  const customerId = params.customerId;\n\n  const history = useHistory();\n  const [pet, setpet] = useState({});\n  const [owner, setowner] = useState({});\n  const [meds, setmeds] = useState([]);\n  const [healthProblems, sethealthProblems] = useState([]);\n  const [petImage, setpetImage] = useState();\n\n  async function getPet() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/pets/${petId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => {\n        setpet(res.data);\n        getPetImage(res.data.id);\n      });\n  }\n\n  async function getPetOwner() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => {\n        setowner(res.data);\n      });\n  }\n\n  async function getPetMedicaments() {\n    await axios\n      .get(`http://localhost:8080/meds/pet/${petId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => {\n        setmeds(res.data);\n      });\n  }\n\n  async function getHealthProblems() {\n    await axios\n      .get(`http://localhost:8080/healthProblems/pet/${petId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => {\n        sethealthProblems(res.data);\n      });\n  }\n\n  async function deletePet() {\n    await axios.delete(\n      `http://localhost:8080/customers/${customerId}/pets/${petId}`,\n      { headers: authHeader() }\n    );\n    axios.delete(`http://localhost:8080/delete/${pet.name}`, {\n      headers: authHeader(),\n    });\n    history.push(\"/pets\");\n    window.location.reload(\"/pets\");\n  }\n\n  async function getPetImage(petId) {\n    let storageRef = firebase.storage().ref();\n    let fileRef = storageRef.child(await petId);\n    setpetImage(await fileRef.getDownloadURL());\n  }\n\n  useEffect(() => {\n    getPet();\n    getPetOwner();\n    getPetMedicaments();\n    getHealthProblems();\n  }, [petImage]);\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <PetPageHTML\n        pet={pet}\n        petImage={petImage}\n        petOwner={owner}\n        meds={meds}\n        healthProblems={healthProblems}\n        customerId={customerId}\n      />\n    </React.Fragment>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/UpdatePet.js",["285","286","287"],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/AddPet.js",["288"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Grid, Avatar } from \"@material-ui/core\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthService from \"../../Services/auth.service\";\nimport NavigationBar from \"../../Navbar/NavigationBar\";\n\nconst avatarStyle = {\n  backgroundColor: \"whitesmoke\",\n};\n\nexport default function AddPet(props) {\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n  const history = useHistory();\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  async function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    await axios.post(\n      `http://localhost:8080/clinic/${currentUser.id}/customers/${customerId}/pets`,\n      {\n        name: data.get(\"name\"),\n        gender: data.get(\"gender\"),\n        race: data.get(\"race\"),\n        age: data.get(\"age\"),\n        color: data.get(\"color\"),\n        type: data.get(\"type\"),\n      },\n      { headers: authHeader() }\n    );\n    let imageData = new FormData();\n    imageData.append(\"file\", data.get(\"image\"));\n    axios.post(\n      `http://localhost:8080/upload/pet/${data.get(\"name\")}`,\n      imageData\n    );\n    redirect();\n  }\n\n  function redirect() {\n    history.push(\"/pets\");\n  }\n\n  return (\n    <div>\n      <NavigationBar />\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"5%\" }}\n      >\n        <div className=\"box\" style={{ width: \"50%\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <h1 style={{ margin: \"0 auto\" }}>Add pet</h1>\n          </div>\n          <Grid align=\"center\" className=\"mt-2\">\n            <Avatar style={avatarStyle}>\n              <img\n                src=\"https://cdn4.iconfinder.com/data/icons/pet-shop-14/500/pet_10-512.png\"\n                alt=\"\"\n              />\n            </Avatar>\n          </Grid>\n          <a href={`/customers/${customerId}`}>Back to customer</a>\n          <br />\n          <hr />\n          <form\n            className=\"form-signin\"\n            method=\"post\"\n            action=\"/pets\"\n            onSubmit={submitForm}\n          >\n            <div className=\"mb-3\">\n              <label htmlFor=\"name\" className=\"form-label\">\n                Name\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"name\"\n                name=\"name\"\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"type\" className=\"form-label\">\n                Pet type\n              </label>\n              <select\n                className=\"form-select form-select-sm mb-3\"\n                aria-label=\".form-select-sm example\"\n                id=\"type\"\n                name=\"type\"\n              >\n                <option value=\"dog\">Dog</option>\n                <option value=\"cat\">Cat</option>\n                <option value=\"hamster\">Hamster</option>\n                <option value=\"rabbit\">Rabbit</option>\n                <option value=\"bird\">Bird</option>\n              </select>\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"age\" className=\"form-label\">\n                Age\n              </label>\n              <input type=\"text\" className=\"form-control\" id=\"age\" name=\"age\" />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"race\" className=\"form-label\">\n                Race\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"race\"\n                name=\"race\"\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"gender\" className=\"form-label\">\n                Gender\n              </label>\n              <select\n                className=\"form-select form-select-sm mb-3\"\n                aria-label=\".form-select-sm example\"\n                id=\"gender\"\n                name=\"gender\"\n              >\n                <option value=\"male\">Male</option>\n                <option value=\"female\">Female</option>\n              </select>\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"color\" className=\"form-label\">\n                Color\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"color\"\n                name=\"color\"\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/EmployeeProfile.js",["289","290"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Link } from \"react-router-dom\";\nimport EmployeeProfileComponent from \"./EmployeeProfileComponent\";\nimport NavigationBar from \"../../Navbar/NavigationBar\";\n\nexport default function EmployeeProfile(props) {\n  let API_URL = \"http://localhost:8080\";\n\n  const [employee, setEmployee] = useState({});\n  const history = useHistory();\n\n  const {\n    match: { params },\n  } = props;\n  const employeeId = params.employeeId;\n\n  async function getEmployee() {\n    await axios\n      .get(`${API_URL}/employees/${employeeId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => setEmployee(res.data));\n  }\n\n  async function deleteEmployee() {\n    await axios.delete(`${API_URL}/employees/${employeeId}`, {\n      headers: authHeader(),\n    });\n    history.push(`${API_URL}/employees/${employeeId}`);\n    window.location.reload(`${API_URL}/employees/${employeeId}`);\n  }\n\n  function formatDateWithoutTime(date) {\n    var parsedDate = new Date(date);\n    return parsedDate.toLocaleString();\n  }\n\n  useEffect(() => {\n    getEmployee();\n  }, []);\n\n  return (\n    <div>\n      <NavigationBar />\n      <EmployeeProfileComponent employee={employee} />\n      <button className=\"btn btn-danger\" onClick={deleteEmployee}>\n        Delete\n      </button>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/Employees.js",["291","292","293"],"import React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport authHeader from \"../../Services/auth-header\";\nimport AuthService from \"../../Services/auth.service\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function Employees() {\n  const classes = useStyles();\n  const [employees, setemployees] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  async function getEmployees() {\n    await axios\n      .get(`http://localhost:8080/clinic/${currentUser.id}/employees`, { headers: authHeader() })\n      .then((res) => setemployees(res.data));\n  }\n\n  useEffect(() => {\n    getEmployees();\n  }, []);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = employees.filter((empl) =>\n      empl.firstName.toString().toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(employees);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchEmployee\"\n        freeSolo\n        options={employees.map((em) => em.firstName)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search employee\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-employee\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  const displayEmployees = (employees) => {\n    return (\n      <React.Fragment>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>FIrst Name</StyledTableCell>\n                <StyledTableCell align=\"left\">Last Name</StyledTableCell>\n                <StyledTableCell align=\"left\">Age</StyledTableCell>\n                <StyledTableCell align=\"left\">Role</StyledTableCell>\n                <StyledTableCell align=\"left\">Phone number</StyledTableCell>\n                <StyledTableCell align=\"left\">Address</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {employees.map((em) => (\n                <StyledTableRow key={em.id}>\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                    <Link to={`/employees/${em.id}`}>{em.firstName}</Link>\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.lastName}</StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.age}</StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.role}</StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    {em.phoneNumber}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.address}</StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </React.Fragment>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayEmployees(searchResults)\n        : displayEmployees(employees)}\n    </div>\n  );\n\n  return (\n    <div>\n      {employees.length > 0 ? (\n        <Container maxWidth=\"lg\" style={{ marginTop: \"5%\" }}>\n          <h1>Employees</h1>\n          <div>{search}</div>\n          <Link to=\"/addEmployee\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Add employee\n            </button>\n          </Link>\n          {content}\n        </Container>\n      ) : (\n        <Container>\n          <h2>No employees yet.</h2>\n          <Link to=\"/addEmployee\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Add employee\n            </button>\n          </Link>\n        </Container>\n      )}\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/AddEmployee.js",["294","295","296"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"@material-ui/core\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport AuthService from \"../../Services/auth.service\";\n\nexport default function AddEmployee() {\n  const history = useHistory();\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.post(\n      `http://localhost:8080/clinic/${currentUser.id}/employees`,\n      {\n        firstName: data.get(\"firstName\"),\n        lastName: data.get(\"lastName\"),\n        address: data.get(\"address\"),\n        phoneNumber: data.get(\"phoneNumber\"),\n        email: data.get(\"email\"),\n        gender: data.get(\"gender\"),\n        age: data.get(\"age\"),\n        role: data.get(\"role\"),\n        contractStartingDate: data.get(\"startDate\"),\n        contractEndingDate: data.get(\"endDate\"),\n        salary: data.get(\"salary\"),\n      },\n      { headers: authHeader() }\n    );\n    history.push(`/employees`);\n  }\n\n  return (\n    <div>\n      <Container\n        style={{\n          border: \"white\",\n          height: \"100%\",\n          width: \"50%\",\n          margin: \"auto\",\n          marginTop: \"5%\",\n        }}\n      >\n        <h1>Add employee</h1>\n        <Link to=\"/dash\">Back to dashboard</Link>\n        <form\n          className=\"form-signin\"\n          method=\"post\"\n          action=\"/customers\"\n          onSubmit={submitForm}\n        >\n          <div className=\"mb-3\">\n            <label htmlFor=\"firstName\" className=\"form-label\">\n              First Name\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"firstName\"\n              name=\"firstName\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"lastName\" className=\"form-label\">\n              Last Name\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"lastName\"\n              name=\"lastName\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"email\" className=\"form-label\">\n              Email\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"email\"\n              name=\"email\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"phoneNumber\" className=\"form-label\">\n              Phone Number\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"phoneNumber\"\n              name=\"phoneNumber\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"gender\" className=\"form-label\">\n              Gender\n            </label>\n            <select\n              className=\"form-select form-select-sm mb-3\"\n              aria-label=\".form-select-sm example\"\n              id=\"gender\"\n              name=\"gender\"\n            >\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n              Email address\n            </label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              name=\"email\"\n            />\n            <div id=\"emailHelp\" className=\"form-text\">\n              We'll never share your email with anyone else.\n            </div>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"address\" className=\"form-label\">\n              Address\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"address\"\n              name=\"address\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"age\" className=\"form-label\">\n              Age\n            </label>\n            <input type=\"text\" className=\"form-control\" id=\"age\" name=\"age\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"role\" className=\"form-label\">\n              Role\n            </label>\n            <input type=\"text\" className=\"form-control\" id=\"age\" name=\"role\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"salary\" className=\"form-label\">\n              Salary\n            </label>\n            <input\n              type=\"number\"\n              min=\"1\"\n              step=\"any\"\n              className=\"form-control\"\n              id=\"salary\"\n              name=\"salary\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"startDate\" className=\"form-label\">\n              Start date\n            </label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"startDate\"\n              name=\"startDate\"\n            />\n            <label htmlFor=\"endDate\" className=\"form-label\">\n              End date\n            </label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"endDate\"\n              name=\"endDate\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </Container>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/UpdateEmployee.js",["297"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function UpdateEmployee(props) {\n  const {\n    match: { params },\n  } = props;\n  const employeeId = params.employeeId;\n  const [employee, setEmployee] = useState({});\n  const history = useHistory();\n\n  async function getEmployee() {\n    await axios\n      .get(`http://localhost:8080/employees/${employeeId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => setEmployee(res.data));\n  }\n\n  const onChangeHandler = (e) => {\n    setEmployee({\n      ...employee,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    getEmployee();\n  }, []);\n\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.put(\n      `http://localhost:8080/employees/${employeeId}`,\n      {\n        id: employeeId,\n        firstName: data.get(\"firstName\"),\n        lastName: data.get(\"lastName\"),\n        address: data.get(\"address\"),\n        phoneNumber: data.get(\"phoneNumber\"),\n        gender: data.get(\"gender\"),\n        age: data.get(\"age\"),\n        role: data.get(\"role\"),\n        salary: data.get(\"salary\"),\n        email: data.get(\"email\"),\n        // contractStartingDate: data.get(\"startDate\"),\n        // contractEndingDate: data.get(\"endDate\"),\n      },\n      { headers: authHeader() }\n    );\n    history.push(`/employees/${employeeId}`);\n    window.location.reload(`/employees/${employeeId}`);\n  }\n\n  return (\n    <Container\n      style={{\n        border: \"white\",\n        height: \"100%\",\n        width: \"50%\",\n        margin: \"auto\",\n        marginTop: \"5%\",\n      }}\n    >\n      <Link to={`/employees/${employeeId}`}>Back to employee</Link>\n      <h1>Update employee data</h1>\n      <form\n        className=\"form-signin\"\n        method=\"put\"\n        // action=\"/employee\"\n        onSubmit={submitForm}\n      >\n        <div className=\"mb-3\">\n          <label htmlFor=\"firstName\" className=\"form-label\">\n            First Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"firstName\"\n            name=\"firstName\"\n            value={employee.firstName}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"lastName\" className=\"form-label\">\n            Last Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"lastName\"\n            name=\"lastName\"\n            value={employee.lastName}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"phoneNumber\" className=\"form-label\">\n            Phone Number\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            value={employee.phoneNumber}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"gender\" className=\"form-label\">\n            Gender\n          </label>\n          <select\n            className=\"form-select form-select-sm mb-3\"\n            aria-label=\".form-select-sm example\"\n            id=\"gender\"\n            name=\"gender\"\n            value={employee.gender}\n            onChange={onChangeHandler}\n          >\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n            <option value=\"other\">Other</option>\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"email\" className=\"form-label\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"email\"\n            aria-describedby=\"emailHelp\"\n            name=\"email\"\n            value={employee.email}\n            onChange={onChangeHandler}\n          />\n          <div id=\"emailHelp\" className=\"form-text\">\n            We'll never share your email with anyone else.\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"address\" className=\"form-label\">\n            Address\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"address\"\n            name=\"address\"\n            value={employee.address}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"age\" className=\"form-label\">\n            Age\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"age\"\n            name=\"age\"\n            value={employee.age}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"role\" className=\"form-label\">\n            Role\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"role\"\n            name=\"role\"\n            value={employee.role}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"salary\" className=\"form-label\">\n            Salary\n          </label>\n          <input\n            value={employee.salary}\n            onChange={onChangeHandler}\n            type=\"number\"\n            min=\"1\"\n            step=\"any\"\n            className=\"form-control\"\n            id=\"salary\"\n            name=\"salary\"\n          />\n        </div>\n        {/* <div className=\"mb-3\">\n          <label htmlFor=\"startDate\" className=\"form-label\">\n            Start date\n          </label>\n          <input\n            value={employee.contractStartingDate}\n            type=\"date\"\n            className=\"form-control\"\n            id=\"startDate\"\n            name=\"startDate\"\n          />\n          <label htmlFor=\"endDate\" className=\"form-label\">\n            End date\n          </label>\n          <input\n            value={employee.contractEndingDate}\n            type=\"date\"\n            className=\"form-control\"\n            id=\"endDate\"\n            name=\"endDate\"\n          />\n        </div> */}\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </Container>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/LastCustomer.js",["298","299","300"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport axios from \"axios\";\nimport authHeader from \"./Services/auth-header\";\n\nimport \"react-notifications/lib/notifications.css\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function LastCustomer({ clinicId }) {\n  const classes = useStyles();\n  const [lastcustomer, setlastcustomer] = useState();\n\n  async function getCustomer() {\n    await axios\n      .get(\"http://localhost:8080/customers/lastCustomer\" + \"/\" + clinicId, {\n        headers: authHeader(),\n      })\n      .then((res) => {\n        setlastcustomer(res.data);\n      });\n  }\n\n  function createNotification(type, message) {\n    return () => {\n      switch (type) {\n        case \"info\":\n          NotificationManager.info(message);\n          break;\n        case \"success\":\n          NotificationManager.success(message);\n          break;\n        case \"warning\":\n          NotificationManager.warning(message, 3000);\n          break;\n        case \"error\":\n          NotificationManager.error(message, 5000, () => {\n            alert(\"callback\");\n          });\n          break;\n      }\n    };\n  }\n\n  function formatDateWithoutTime(date) {\n    var parsedDate = new Date(date);\n    return parsedDate.toLocaleString();\n  }\n\n  useEffect(() => {\n    getCustomer();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <NotificationContainer />\n      <Title>Last Added Customer</Title>\n      {lastcustomer ? (\n        <div>\n          <Typography component=\"p\" variant=\"h4\">\n            {lastcustomer.username}\n          </Typography>\n          <Typography color=\"textSecondary\" className={classes.depositContext}>\n            on {formatDateWithoutTime(lastcustomer.lastSeen)}\n          </Typography>\n          <br />\n          <div>\n            <Link\n              onClick={createNotification(\n                \"info\",\n                `${lastcustomer.firstName} ${\n                  lastcustomer.lastName\n                } was the last added customer in our database on ${formatDateWithoutTime(\n                  lastcustomer.lastSeen\n                )}`\n              )}\n            >\n              Help\n              <br />\n            </Link>\n            <br />\n          </div>\n          <a href={`/customers/${lastcustomer.id}`}>See profile</a>\n        </div>\n      ) : (\n        \"Nothing to show\"\n      )}\n    </React.Fragment>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/listItems.js",["301","302","303","304"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PetsIcon from \"@material-ui/icons/Pets\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport SpellcheckIcon from \"@material-ui/icons/Spellcheck\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport AuthService from \"./Services/auth.service\";\n\nimport firebase from \"./Firebase/firebase\";\n\nconst currentUser = AuthService.getCurrentUser();\n\nfunction logOut() {\n  AuthService.logout();\n}\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <Link to=\"/dash\">\n        <ListItemText primary=\"Dashboard\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PetsIcon />\n      </ListItemIcon>\n      <Link to=\"/pets\">\n        <ListItemText primary=\"Pets\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <Link to=\"/customers\">\n        <ListItemText primary=\"Customers\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <HelpIcon />\n      </ListItemIcon>\n      <Link to=\"/questions\">\n        <ListItemText primary=\"Questions\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIndIcon />\n      </ListItemIcon>\n      <Link to=\"/employees\">\n        <ListItemText primary=\"Employees\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <SpellcheckIcon />\n      </ListItemIcon>\n      <Link to=\"/appointments\">\n        <ListItemText primary=\"Appointments\" />\n      </Link>\n    </ListItem>\n  </div>\n);\n\nconst uploadImage = async (e) => {\n  const file = await e.target.files[0];\n  let storageRef = firebase.storage().ref();\n  let fileRef = storageRef.child(currentUser.username);\n  await fileRef.put(file);\n};\n\nexport const secondaryListItems = (\n  <div>\n    {currentUser && currentUser.roles.includes(\"ROLE_ADMIN\") ? (\n      <div className=\"navbar-nav ml-auto\">\n        <ListItem button>\n          <ListItemIcon>\n            <ExitToAppIcon />\n          </ListItemIcon>\n          <Link to=\"/login\" onClick={logOut}>\n            <ListItemText primary=\"Logout\" />\n          </Link>\n        </ListItem>\n        {/* <input type=\"file\" onChange={uploadImage} /> */}\n      </div>\n    ) : (\n      \"\"\n    )}\n  </div>\n);\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Services/auth-header.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Notification/Components/SimplePopover.js",["305","306","307"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport axios from \"axios\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { Link } from \"react-router-dom\";\nimport authHeader from \"../../Services/auth-header\";\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function SimplePopover() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [questions, setquestions] = useState([]);\n  const [appointments, setappointments] = useState([]);\n  const [numberOfUnseenQuestions, setNumberOfUnseenQuestions] = useState();\n  const [\n    numberOfUnseenAppointments,\n    setNumberOfUnseenAppointments,\n  ] = useState();\n  const [seen, setseen] = useState();\n  var data;\n\n  async function getData() {\n    await axios\n      .get(\"http://localhost:8080/questions\", { headers: authHeader() })\n      .then((res) => setquestions(!res.data.seen ? res.data : \"\"));\n    await axios\n      .get(\"http://localhost:8080/appointments\", { headers: authHeader() })\n      .then((res) => setappointments(!res.data.seen ? res.data : \"\"));\n  }\n\n  useEffect(() => {\n    getData();\n    getNumberOfUnseenQuestions();\n    getNumberOfUnseenAppointments();\n  }, []);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  function markAsSeen() {\n    questions.length > 0\n      ? questions.forEach((q) => {\n          axios.get(\n            `http://localhost:8080/customers/${q.customer.id}/questions/${q.id}/setSeen`,\n            { headers: authHeader() }\n          );\n          setNumberOfUnseenQuestions(0);\n        })\n      : console.log(\"No question\");\n\n    appointments.length > 0\n      ? appointments.forEach((a) => {\n          axios.get(\n            `http://localhost:8080/customers/${a.customer.id}/appointments/${a.id}/setSeen`,\n            { headers: authHeader() }\n          );\n          setNumberOfUnseenAppointments(0);\n        })\n      : console.log(\"No appointment\");\n  }\n\n  async function getNumberOfUnseenQuestions() {\n    return await axios\n      .get(\"http://localhost:8080/questions/seen\", { headers: authHeader() })\n      .then((res) => setNumberOfUnseenQuestions(res.data));\n  }\n\n  async function getNumberOfUnseenAppointments() {\n    return await axios\n      .get(\"http://localhost:8080/appointments/seen\", { headers: authHeader() })\n      .then((res) => setNumberOfUnseenAppointments(res.data));\n  }\n\n  return (\n    <div>\n      <Badge\n        badgeContent={numberOfUnseenQuestions + numberOfUnseenAppointments}\n        color=\"secondary\"\n        onClick={markAsSeen}\n      >\n        {\" \"}\n        <Button\n          aria-describedby={id}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleClick}\n        >\n          <NotificationsIcon />\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <Typography className={classes.typography}>\n            {console.log(questions)}\n            {questions.length > 0\n              ? questions.map((q) =>\n                  !q.seen ? (\n                    <div>\n                      <p>\n                        <Link\n                          to={`/customers/${q.customer.id}/questions/${q.id}`}\n                        >\n                          <strong>{`Question - ${q.text}`}</strong>\n                        </Link>\n                      </p>\n                      <small>{`by ${q.author}`}</small>\n                      <br />\n                    </div>\n                  ) : (\n                    \"\"\n                  )\n                )\n              : \"No new questions\"}\n            <hr />\n            {appointments.length > 0\n              ? appointments.map((a) =>\n                  !a.seen ? (\n                    <div>\n                      <p>\n                        <strong>\n                          <Link\n                            to={`/customers/${a.customer.id}/appointments/${a.id}`}\n                          >{`Appointment - ${a.reason}`}</Link>\n                        </strong>\n                      </p>\n                      <small>{`by ${a.customer.firstName} ${a.customer.lastName}`}</small>\n                      <br />\n                    </div>\n                  ) : (\n                    \"\"\n                  )\n                )\n              : \"No new appointments\"}\n          </Typography>\n        </Popover>\n      </Badge>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Navbar/Navbar.js",["308"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport AuthService from \"../Services/auth.service\";\n\nexport default function Navbar() {\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  function logOut() {\n    AuthService.logout();\n  }\n\n  return (\n    <div>\n      <nav\n        class=\"navbar navbar-expand-lg navbar-light fixed-top py-3\"\n        id=\"mainNav\"\n      >\n        <div class=\"container\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            {currentUser.username}\n          </Link>\n          <button\n            class=\"navbar-toggler navbar-toggler-right\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav ml-auto my-2 my-lg-0\">\n              {/* <li class=\"nav-item\">\n                <Link to={\"/dash\"} className=\"nav-link\">\n                  Dasboard\n                </Link>\n              </li> */}\n              {currentUser ? (\n                <div className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item\">\n                    <Link\n                      to={`/myProfile/${currentUser.id}`}\n                      className=\"nav-link\"\n                    >\n                      {currentUser.username}\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                      LogOut\n                    </a>\n                  </li>\n                </div>\n              ) : (\n                <div className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item\">\n                    <Link to={\"/login\"} className=\"nav-link\">\n                      Login\n                    </Link>\n                  </li>\n\n                  <li className=\"nav-item\">\n                    <Link to={\"/register\"} className=\"nav-link\">\n                      Sign Up\n                    </Link>\n                  </li>\n                </div>\n              )}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Title.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/ConfirmationScreens/SuccesPage.js",["309"],"import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { AppBar } from \"@material-ui/core\";\n\nexport default function SuccesPage() {\n  return (\n    <div className=\"successPageBody\">\n      <AppBar />\n      <div className=\"card\">\n        <div\n          style={{\n            \"border-radius\": \"200px\",\n            height: \"200px\",\n            width: \"200px\",\n            background: \"#F8FAF5\",\n            margin: \"0 auto\",\n          }}\n        >\n          <i className=\"checkmark\" className=\"successI\">\n            ✓\n          </i>\n        </div>\n        <h1 className=\"successH1\">Success</h1>\n        <p className=\"successP\">\n          Your response has been sent !\n          <br />\n          <Link to={`/dash`}>\n            <Button variant=\"contained\" style={{ marginTop: \"5%\" }}>\n              Back to dashboard\n            </Button>{\" \"}\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Navbar/NavigationBar.js",["310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport AuthService from \"../Services/auth.service\";\n\nconst NavigationBar = () => {\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n  const history = useHistory();\n\n  function logOut() {\n    AuthService.logout();\n    history.push(\"/login\");\n  }\n\n  return (\n    <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div class=\"navbar-brand\">\n        <a class=\"navbar-item\" href=\"https://bulma.io\">\n          <img\n            src=\"https://bulma.io/images/bulma-logo.png\"\n            width=\"112\"\n            height=\"28\"\n          />\n        </a>\n\n        <a\n          role=\"button\"\n          class=\"navbar-burger\"\n          aria-label=\"menu\"\n          aria-expanded=\"false\"\n          data-target=\"navbarBasicExample\"\n        >\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </a>\n      </div>\n      {currentUser ? (\n        <div id=\"navbarBasicExample\" class=\"navbar-menu\">\n          <div class=\"navbar-start\">\n            <a class=\"navbar-item\" href=\"/dash\">\n              Dashboard\n            </a>\n            <div class=\"navbar-item has-dropdown is-hoverable\">\n              <a class=\"navbar-link\">More</a>\n\n              <div class=\"navbar-dropdown\">\n                <a class=\"navbar-item\">About</a>\n                <a class=\"navbar-item\">Jobs</a>\n                <a class=\"navbar-item\">Contact</a>\n                <hr class=\"navbar-divider\" />\n                <a class=\"navbar-item\">Report an issue</a>\n              </div>\n            </div>\n          </div>\n          <div class=\"navbar-end\">\n            <div class=\"navbar-item\">\n              <div class=\"buttons\">\n                <a class=\"button is-light\">\n                  <button\n                    onClick={logOut}\n                    style={{ border: \"none\", backgroundColor: \"transparent\" }}\n                  >\n                    Logout\n                  </button>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div id=\"navbarBasicExample\" class=\"navbar-menu\">\n          <div class=\"navbar-start\">\n            <a class=\"navbar-item\">Home</a>\n\n            <a class=\"navbar-item\">Documentation</a>\n\n            <div class=\"navbar-item has-dropdown is-hoverable\">\n              <a class=\"navbar-link\">More</a>\n\n              <div class=\"navbar-dropdown\">\n                <a class=\"navbar-item\">About</a>\n                <a class=\"navbar-item\">Jobs</a>\n                <a class=\"navbar-item\">Contact</a>\n                <hr class=\"navbar-divider\" />\n                <a class=\"navbar-item\">Report an issue</a>\n              </div>\n            </div>\n          </div>\n          <div class=\"navbar-end\">\n            <div class=\"navbar-item\">\n              <div class=\"buttons\">\n                <a class=\"button is-primary\" href=\"/register\">\n                  <strong>Sign up</strong>\n                </a>\n                <a class=\"button is-light\" href=\"/login\">\n                  Log in\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default NavigationBar;\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Appointments/AppointmentComponent.js",["326","327","328","329"],"import React from \"react\";\n\nconst AppointmentComponent = ({ appointment, date, customerImage }) => {\n  return (\n    <>\n      <div>\n        <article class=\"media\">\n          <div class=\"media-left\">\n            <figure class=\"image is-64x64\">\n              <img src={customerImage} alt=\"Image\" />\n            </figure>\n          </div>\n          <div class=\"media-content\">\n            <div class=\"content\">\n              <p>\n                {appointment.customer ? (\n                  <div>\n                    <strong>{appointment.customer.firstName}</strong>{\" \"}\n                    <small>@{appointment.customer.username}</small>{\" \"}\n                  </div>\n                ) : (\n                  \"Loading ...\"\n                )}\n                <small>{date}</small>\n                <br />\n                Reason: {appointment.reason}\n              </p>\n            </div>\n            <nav class=\"level is-mobile\">\n              <div class=\"level-left\">\n                <a class=\"level-item\" aria-label=\"reply\">\n                  <span class=\"icon is-small\">\n                    <i class=\"fas fa-reply\" aria-hidden=\"true\"></i>\n                  </span>\n                </a>\n                <a class=\"level-item\" aria-label=\"retweet\">\n                  <span class=\"icon is-small\">\n                    <i class=\"fas fa-retweet\" aria-hidden=\"true\"></i>\n                  </span>\n                </a>\n                <a class=\"level-item\" aria-label=\"like\">\n                  <span class=\"icon is-small\">\n                    <i class=\"fas fa-heart\" aria-hidden=\"true\"></i>\n                  </span>\n                </a>\n              </div>\n            </nav>\n          </div>\n        </article>\n      </div>\n    </>\n  );\n};\n\nexport default AppointmentComponent;\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Components/Forms/Authentication/LoginForm.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Components/Forms/Authentication/RegisterForm.js",["330","331"],"import React, { useState } from \"react\";\nimport FormValidationLogic from \"./FormValidationLogic\";\nimport authService from \"../../../Services/auth.service\";\nimport { Grid, Avatar } from \"@material-ui/core\";\nimport Navbar from \"../../../Navbar/Navbar\";\nimport { useHistory } from \"react-router-dom\";\nimport NavigationBar from \"../../../Navbar/NavigationBar\";\n\nconst avatarStyle = {\n  backgroundColor: \"#6c93ea\",\n};\n\nconst RegisterForm = () => {\n  const [clinicName, setclinicName] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [agreed, setagreed] = useState(false);\n  const [error, seterror] = useState(\"\");\n  const history = useHistory();\n\n  const {\n    checkForClinicName,\n    checkForPassword,\n    checkForEmail,\n    clinicNameValid,\n    passwordValid,\n    emailValid,\n  } = FormValidationLogic({\n    clinicName: clinicName,\n    password: password,\n    email: email,\n  });\n\n  const register = (e) => {\n    e.preventDefault();\n\n    if (agreed === false) {\n      seterror(\"Please accept terms and conditions to continue\");\n    } else {\n      seterror(\"\");\n      clinicNameValid && passwordValid && emailValid\n        ? authService\n            .registerClinic(clinicName, email, password)\n            .then(() => redirectUser())\n            .catch((err) => seterror(\"Clinic name or email already used\"))\n        : console.log(\"\");\n    }\n  };\n\n  const redirectUser = () => {\n    history.push(`/login`);\n    window.location.reload(\"/login\");\n  };\n\n  const closeNotification = () => {\n    seterror(\"\");\n  };\n\n  const agreeTerms = () => {\n    let agree = agreed;\n    setagreed(!agree);\n  };\n\n  const onChangeClinicName = async (e) => {\n    const clinicName = await e.target.value;\n    setclinicName(await clinicName);\n    checkForClinicName();\n  };\n\n  const onChangePassword = async (e) => {\n    const password = await e.target.value;\n    setpassword(await password);\n    checkForPassword();\n  };\n\n  const onChangeEmail = async (e) => {\n    const email = await e.target.value;\n    setemail(await email);\n    checkForEmail();\n  };\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <div\n        className=\"container is-max-desktop box mt-5\"\n        style={{ width: \"35%\" }}\n      >\n        <Grid align=\"center\" className=\"mt-2\">\n          <Avatar style={avatarStyle}>\n            <img\n              src=\"https://cdn4.iconfinder.com/data/icons/pet-shop-14/500/pet_10-512.png\"\n              alt=\"\"\n            />\n          </Avatar>\n        </Grid>\n        <br />\n        <div style={{ textAlign: \"center\" }}>\n          <p className=\"title\">Register as Clinic</p>\n        </div>\n        <form onSubmit={register}>\n          <br />\n          <div class=\"field\">\n            <label class=\"label\">Clinic name</label>\n            <div class=\"control has-icons-left has-icons-right\">\n              <input\n                class={clinicNameValid ? \"input is-primary\" : \"input is-danger\"}\n                type=\"text\"\n                placeholder=\"Type your clinic name\"\n                onChange={onChangeClinicName}\n                value={clinicName}\n                name=\"name\"\n              />\n              <span class=\"icon is-small is-left\">\n                <i class=\"fas fa-user\"></i>\n              </span>\n              {clinicNameValid === true ? (\n                <div>\n                  <span class=\"icon is-small is-right\">\n                    <i class=\"fas fa-check\"></i>\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n            {clinicNameValid === true ? (\n              <p class=\"help is-success\">Valid clinic name</p>\n            ) : (\n              <p class=\"help is-danger\">\n                Username must be between 3 and 25 characters\n              </p>\n            )}\n          </div>\n          <br />\n          <div class=\"field\">\n            <label class=\"label\">Password</label>\n            <div class=\"control has-icons-left has-icons-right\">\n              <input\n                class={passwordValid ? \"input is-primary\" : \"input is-danger\"}\n                type=\"password\"\n                placeholder=\"Type your password\"\n                onChange={onChangePassword}\n                value={password}\n              />\n              <span class=\"icon is-small is-left\">\n                <i class=\"fas fa-key\"></i>\n              </span>\n              {passwordValid === true ? (\n                <div>\n                  <span class=\"icon is-small is-right\">\n                    <i class=\"fas fa-check\"></i>\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n            {passwordValid ? (\n              <p class=\"help is-success\">Valid password</p>\n            ) : (\n              <p class=\"help is-danger\">\n                Password must contain letters and numbers only.\n              </p>\n            )}\n          </div>\n          <br />\n          <div class=\"field\">\n            <label class=\"label\">Email</label>\n            <div class=\"control has-icons-left has-icons-right\">\n              <input\n                class={emailValid ? \"input is-primary\" : \"input is-danger\"}\n                type=\"email\"\n                placeholder=\"Type your clinic email\"\n                onChange={onChangeEmail}\n                value={email}\n                name=\"email\"\n              />\n              <span class=\"icon is-small is-left\">\n                <i class=\"fas fa-envelope\"></i>\n              </span>\n              {emailValid === true ? (\n                <div>\n                  <span class=\"icon is-small is-right\">\n                    <i class=\"fas fa-check\"></i>\n                  </span>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n            {emailValid === true ? (\n              <p class=\"help is-success\">Valid clinic email</p>\n            ) : (\n              <p class=\"help is-danger\">Must be a valid email</p>\n            )}\n          </div>\n          <br />\n          <div>\n            <p>\n              {error ? (\n                <div class=\"notification is-danger is-light\">\n                  <button class=\"delete\" onClick={closeNotification}></button>\n                  {error}\n                </div>\n              ) : (\n                \"\"\n              )}\n            </p>\n          </div>\n          <div class=\"field\">\n            <div class=\"control\">\n              <label class=\"checkbox\">\n                <input type=\"checkbox\" onChange={agreeTerms} />I agree to the{\" \"}\n                <a href=\"#\">terms and conditions</a>\n              </label>\n            </div>\n          </div>\n          <br />\n          <div class=\"field is-grouped\">\n            <div class=\"control\">\n              <button class=\"button is-link\">Submit</button>\n            </div>\n            <div\n              class=\"control\"\n              style={{ position: \"absolute\", right: \"10px\" }}\n            >\n              <button class=\"button is-link is-light\">Cancel</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default RegisterForm;\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Components/Forms/Other/AddNewCustomerForm.js",["332","333","334"],"import React, { useState, useEffect } from \"react\";\nimport authService from \"../../../Services/auth.service\";\nimport Navbar from \"../../../Navbar/Navbar\";\nimport { useHistory } from \"react-router-dom\";\nimport NavigationBar from \"../../../Navbar/NavigationBar\";\nimport FormValidationLogic from \"../Authentication/FormValidationLogic\";\nimport AuthService from \"../../../Services/auth.service\";\nimport LinearBuffer from \"./LinearBuffer\";\n\nconst AddNewCustomerForm = () => {\n  const [email, setemail] = useState(\"\");\n  const [username, setusername] = useState(\"\");\n  const [firstName, setfirstName] = useState(\"\");\n  const [lastName, setlastName] = useState(\"\");\n  const [address, setaddress] = useState(\"\");\n  const [gender, setgender] = useState(\"\");\n  const [phoneNumber, setphoneNumber] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [error, seterror] = useState(\"\");\n  const [confirmation, setconfirmation] = useState(false);\n  const history = useHistory();\n\n  const [currentClinic, setcurrentClinic] = useState(\n    AuthService.getCurrentUser()\n  );\n\n  const { checkForEmail, emailValid } = FormValidationLogic({\n    clinicName: \"\",\n    password: \"\",\n    email: email,\n  });\n\n  const onChangeUsername = async (e) => {\n    const username = await e.target.value;\n    setusername(await username);\n    checkForEmail();\n  };\n\n  const onChangeFirstName = async (e) => {\n    const firstName = await e.target.value;\n    setfirstName(await firstName);\n  };\n\n  const onChangeLastName = async (e) => {\n    const lastName = await e.target.value;\n    setlastName(await lastName);\n  };\n\n  const onChangeAddress = async (e) => {\n    const address = await e.target.value;\n    setaddress(await address);\n  };\n\n  const onChangeGender = async (e) => {\n    const gender = await e.target.value;\n    setgender(await gender);\n  };\n\n  const onChangePhoneNumber = async (e) => {\n    const phoneNumber = await e.target.value;\n    setphoneNumber(await phoneNumber);\n  };\n\n  const onChangeEmail = async (e) => {\n    const email = await e.target.value;\n    setemail(await email);\n    checkForEmail();\n  };\n\n  const redirectUser = () => {\n    setTimeout(() => {\n      history.push(`/dash`);\n      window.location.reload(\"/dash\");\n    }, 2000);\n    setloading(false);\n    console.log(loading);\n  };\n\n  const addCustomer = (e) => {\n    e.preventDefault();\n    setloading(true);\n    setconfirmation(\"\");\n    if (emailValid === true) {\n      authService\n        .register(\n          username + ` - ${currentClinic.username}`,\n          email,\n          address,\n          phoneNumber,\n          gender,\n          firstName,\n          lastName\n        )\n        .catch(() => {\n          seterror(\"Something went wrong, please try again.\");\n        });\n\n      if (error === \"\") {\n        setconfirmation(\"Success !\");\n      }\n\n      if (confirmation === \"\") {\n        seterror(\"Something went wrong, please try again.\");\n      }\n\n      setTimeout(() => {\n        setloading(false);\n      }, 2500);\n\n      //   setTimeout(() => {\n      //     seterror(\"\");\n      //   }, 4000);\n    }\n  };\n\n  useEffect(() => {}, [error, confirmation]);\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <div\n        className=\"container is-max-desktop box mt-5\"\n        style={{ width: \"50%\" }}\n      >\n        <br />\n        {loading ? (\n          <div>\n            <LinearBuffer />\n            <br />\n          </div>\n        ) : (\n          <div>\n            <p>\n              {error ? (\n                <div class=\"notification is-danger is-light\">{error}</div>\n              ) : (\n                \"\"\n              )}\n              {confirmation ? (\n                <div class=\"notification is-primary is-light\">\n                  {confirmation}\n                </div>\n              ) : (\n                \"\"\n              )}\n            </p>\n            <br />\n            <div style={{ textAlign: \"center\" }}>\n              <p className=\"title\">Add new customer</p>\n            </div>\n            <form onSubmit={addCustomer}>\n              <br />\n              <div class=\"field\">\n                <label class=\"label\">Username</label>\n                <div class=\"control has-icons-left has-icons-right\">\n                  <input\n                    class=\"input\"\n                    type=\"text\"\n                    placeholder=\"Customer username\"\n                    onChange={onChangeUsername}\n                    value={username}\n                    name=\"username\"\n                  />\n                  <span class=\"icon is-small is-left\">\n                    <i class=\"fas fa-user\"></i>\n                  </span>\n                </div>\n              </div>\n              <div class=\"field\">\n                <label class=\"label\">First name</label>\n                <div class=\"control has-icons-left has-icons-right\">\n                  <input\n                    class=\"input\"\n                    type=\"text\"\n                    placeholder=\"Customer first name\"\n                    onChange={onChangeFirstName}\n                    value={firstName}\n                    name=\"firstName\"\n                  />\n                  <span class=\"icon is-small is-left\">\n                    <i class=\"fas fa-user\"></i>\n                  </span>\n                </div>\n              </div>\n              <br />\n              <div class=\"field\">\n                <label class=\"label\">Last name</label>\n                <div class=\"control has-icons-left has-icons-right\">\n                  <input\n                    class=\"input\"\n                    type=\"text\"\n                    placeholder=\"Customer last name\"\n                    onChange={onChangeLastName}\n                    value={lastName}\n                  />\n                  <span class=\"icon is-small is-left\">\n                    <i class=\"fas fa-user\"></i>\n                  </span>\n                </div>\n              </div>\n              <div class=\"field\">\n                <label class=\"label\">Phone number</label>\n                <div class=\"control has-icons-left has-icons-right\">\n                  <input\n                    class=\"input\"\n                    type=\"phone\"\n                    placeholder=\"Customer phone number\"\n                    onChange={onChangePhoneNumber}\n                    value={phoneNumber}\n                    pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\"\n                    required\n                  />\n                  <span class=\"icon is-small is-left\">\n                    <i class=\"fa fa-phone\"></i>\n                  </span>\n                </div>\n              </div>\n              <br />\n              <div class=\"field\">\n                <label class=\"label\">Gender</label>\n                <div class=\"control has-icons-left has-icons-right\">\n                  <div class=\"select\">\n                    <select onChange={onChangeGender} value={gender}>\n                      <option value=\"male\">Male</option>\n                      <option value=\"female\">Female</option>\n                      <option value=\"other\">Other</option>\n                    </select>\n                  </div>\n                  <span class=\"icon is-small is-left\">\n                    <i class=\"fas fa-user\"></i>\n                  </span>\n                </div>\n              </div>\n              <br />\n              <div class=\"field\">\n                <label class=\"label\">Email</label>\n                <div class=\"control has-icons-left has-icons-right\">\n                  <input\n                    class={emailValid ? \"input is-primary\" : \"input is-danger\"}\n                    type=\"email\"\n                    placeholder=\"Type your clinic email\"\n                    onChange={onChangeEmail}\n                    value={email}\n                    name=\"email\"\n                  />\n                  <span class=\"icon is-small is-left\">\n                    <i class=\"fas fa-envelope\"></i>\n                  </span>\n\n                  {emailValid === true ? (\n                    <span class=\"icon is-small is-right\">\n                      <i class=\"fas fa-check\"></i>\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n                {emailValid === true ? (\n                  <p class=\"help is-success\">Valid customer email</p>\n                ) : (\n                  <p class=\"help is-danger\">Must be a valid email</p>\n                )}\n              </div>\n              {/* <br /> */}\n              <div class=\"field\">\n                <label class=\"label\">Address</label>\n                <div class=\"control has-icons-left has-icons-right\">\n                  <input\n                    class=\"input\"\n                    type=\"address\"\n                    placeholder=\"Type your clinic address\"\n                    onChange={onChangeAddress}\n                    value={address}\n                    name=\"address\"\n                  />\n                  <span class=\"icon is-small is-left\">\n                    <i class=\"fas fa-home\"></i>\n                  </span>\n                </div>\n              </div>\n              <br />\n\n              <div class=\"field is-grouped\">\n                <div class=\"control\">\n                  <button class=\"button is-link\">Submit</button>\n                </div>\n                <div\n                  class=\"control\"\n                  style={{ position: \"absolute\", right: \"10px\" }}\n                >\n                  <button class=\"button is-link is-light\">Cancel</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default AddNewCustomerForm;\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/CustomerProfileComponent.js",["335"],"import React from \"react\";\nimport \"../../Styles/PetDetails.css\";\nimport CustomerProfileLogic from \"./CustomerProfileLogic\";\n\nconst CustomerProfileComponent = ({\n  customer,\n  customerImage,\n  pets,\n  appointments,\n  questions,\n}) => {\n  const {\n    cancelDeletion,\n    showModal,\n    openConfirmationModal,\n    confirmDeletion,\n  } = CustomerProfileLogic({ customer });\n\n  return (\n    <>\n      <div class=\"container\">\n        <div class=\"main-body\">\n          <div class=\"row gutters-sm\">\n            <div class=\"col-md-4 mb-3\">\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"d-flex flex-column align-items-center text-center\">\n                    <img\n                      src={\n                        customerImage\n                          ? customerImage\n                          : \"https://www.pinclipart.com/picdir/middle/165-1653686_female-user-icon-png-download-user-colorful-icon.png\"\n                      }\n                      alt=\"Admin\"\n                      class=\"rounded-circle\"\n                      width=\"150\"\n                    />\n                    <div class=\"mt-3\">\n                      <h4>{customer.username}</h4>\n                      <p class=\"text-secondary mb-1\">{customer.email}</p>\n                      <p class=\"text-muted font-size-sm\">\n                        {customer.age} years old\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"card mt-3\">\n                <ul class=\"list-group list-group-flush\">\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                    <h6 class=\"mb-0\">Questions asked:</h6>\n                    <span class=\"text-secondary\">{questions.length}</span>\n                  </li>\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                    <h6 class=\"mb-0\">Appointments:</h6>\n                    <span class=\"text-secondary\">{appointments.length}</span>\n                  </li>\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                    <h6 class=\"mb-0\">Visits:</h6>\n                    <span class=\"text-secondary\">3</span>\n                  </li>\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                    <h6 class=\"mb-0\">Pets:</h6>\n                    <span class=\"text-secondary\">{pets.length}</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div class=\"col-md-8\">\n              <div class=\"card mb-3\">\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <div class=\"col-sm-3\">\n                      <h6 class=\"mb-0\">Fullname</h6>\n                    </div>\n                    <div class=\"col-sm-9 text-secondary\">\n                      {customer.firstName} {customer.lastName}\n                    </div>\n                  </div>\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-sm-3\">\n                      <h6 class=\"mb-0\">Email</h6>\n                    </div>\n                    <div class=\"col-sm-9 text-secondary\">{customer.email}</div>\n                  </div>\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-sm-3\">\n                      <h6 class=\"mb-0\">Phone number</h6>\n                    </div>\n                    <div class=\"col-sm-9 text-secondary\">\n                      {customer.phoneNumber}\n                    </div>\n                  </div>\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-sm-3\">\n                      <h6 class=\"mb-0\">Address</h6>\n                    </div>\n                    <div class=\"col-sm-9 text-secondary\">\n                      {customer.address}\n                    </div>\n                  </div>\n                  <hr />\n                </div>\n              </div>\n              <div class=\"row gutters-sm\">\n                <div class=\"col-sm-6 mb-3\">\n                  <div class=\"card h-100\">\n                    <div class=\"card-body\">\n                      <h6 class=\"d-flex align-items-center mb-3 title\">Pets</h6>\n                      {pets.map((pet) => (\n                        <p style={{ textAlign: \"left\" }}>\n                          -{\" \"}\n                          <a href={`/customers/${customer.id}/pets/${pet.id}`}>\n                            {pet.name}\n                          </a>{\" \"}\n                        </p>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-sm-6 mb-3\">\n                  <div class=\"card h-100\">\n                    <div class=\"card-body\">\n                      <h6 class=\"d-flex align-items-center mb-3 title\">\n                        Appointments\n                      </h6>\n                      {appointments.map((app) => (\n                        <p>\n                          -{\" \"}\n                          <a\n                            href={`/customers/${customer.id}/appointments/${app.id}`}\n                          >\n                            {app.reason}\n                          </a>{\" \"}\n                        </p>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <a\n            href={`/customers/${customer.id}/addPet`}\n            style={{ marginRight: \"10%\" }}\n          >\n            Add pet\n          </a>\n          <a\n            href={`/customers/${customer.id}/updateCustomer`}\n            style={{ marginRight: \"10%\" }}\n          >\n            Update customer data\n          </a>\n          {showModal ? (\n            <div class=\"modal is-active\">\n              <div class=\"modal-background\"></div>\n              <div class=\"modal-content\">\n                <span\n                  onclick=\"document.getElementById('id01').style.display='none'\"\n                  class=\"close\"\n                  title=\"Close Modal\"\n                >\n                  &times;\n                </span>\n                <form class=\"modal-content\" action=\"/action_page.php\">\n                  <div class=\"container\">\n                    <h1>Delete Customer</h1>\n                    <p>Are you sure you want to delete this customer ?</p>\n\n                    <div class=\"clearfix\">\n                      <button\n                        type=\"button\"\n                        class=\"modalButton cancelbtn\"\n                        onClick={cancelDeletion}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"modalButton deletebtn\"\n                        onClick={confirmDeletion}\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <a onClick={openConfirmationModal} className=\"deleteButton\">\n            Delete customer data\n          </a>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CustomerProfileComponent;\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/PetPageHTML.js",["336","337"],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Firebase/firebase.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Employess/Components/EmployeeProfileComponent.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Components/Forms/Authentication/FormValidationLogic.js",["338","339","340","341"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport authHeader from \"../../../Services/auth-header\";\n\nconst FormValidationLogic = ({ clinicName, password, email }) => {\n  const [clinicNameValid, setClinicNameValid] = useState(false);\n  const [passwordValid, setpasswordValid] = useState(false);\n  const [emailValid, setemailValid] = useState(false);\n\n  useEffect(() => {\n    checkForClinicName();\n    checkForPassword();\n    checkForEmail();\n  }, [password, clinicName, email]);\n\n  const checkForClinicName = async () => {\n    setClinicNameValid(clinicName.length >= 3 && clinicName.length <= 25);\n  };\n\n  const checkForPassword = () => {\n    let letterNumberExpression = \"S*(S*([a-zA-Z]S*[0-9])|([0-9]S*[a-zA-Z]))S*\";\n    let letterNumberBoolean = password.match(letterNumberExpression);\n    let letterContainsSpacesBoolean = /\\s/.test(password);\n    setpasswordValid(\n      letterNumberBoolean &&\n        password.length >= 6 &&\n        !letterContainsSpacesBoolean\n    );\n  };\n\n  const checkForEmail = () => {\n    setemailValid(\n      email.length >= 13 &&\n        (email.includes(\"@gmail.com\") || email.includes(\"@yahoo.com\"))\n    );\n  };\n\n  return {\n    checkForClinicName,\n    checkForPassword,\n    checkForEmail,\n    clinicNameValid,\n    passwordValid,\n    emailValid,\n  };\n};\n\nexport default FormValidationLogic;\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Components/Forms/Other/LinearBuffer.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Services/user.service.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Customers/Components/CustomerProfileLogic.js",["342","343"],"import React, { useState } from \"react\";\nimport userService from \"../../Services/user.service\";\n\nconst CustomerProfileLogic = ({ customer }) => {\n  const [confirmedDeletion, setconfirmedDeletion] = useState(false);\n  const [showModal, setshowModal] = useState(false);\n  const { deleteCustomer } = userService({ customer: customer });\n\n  const openConfirmationModal = () => {\n    setshowModal(true);\n  };\n\n  const confirmDeletion = () => {\n    setconfirmedDeletion(true);\n    deleteCustomer();\n  };\n\n  const cancelDeletion = () => {\n    setconfirmedDeletion(false);\n    setshowModal(false);\n  };\n\n  return {\n    cancelDeletion,\n    showModal,\n    openConfirmationModal,\n    confirmDeletion,\n  };\n};\n\nexport default CustomerProfileLogic;\n","/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/PetPageLogic.js",["344"],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/MicroComponents/PetVaccine.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/MicroComponents/PetSick.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/MicroComponents/PetAlergic.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Pets/Components/MicroComponents/PetHasInjuries.js",[],"/Users/gabi/Desktop/Work/PetBox/PetBox-FrontendAdmin/src/Questions/Components/ConfirmationModal.js",["345"],{"ruleId":"346","replacedBy":"347"},{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","severity":1,"message":"351","line":12,"column":8,"nodeType":"352","messageId":"353","endLine":12,"endColumn":21},{"ruleId":"350","severity":1,"message":"354","line":24,"column":8,"nodeType":"352","messageId":"353","endLine":24,"endColumn":24},{"ruleId":"350","severity":1,"message":"355","line":32,"column":8,"nodeType":"352","messageId":"353","endLine":32,"endColumn":20},{"ruleId":"350","severity":1,"message":"356","line":35,"column":10,"nodeType":"352","messageId":"353","endLine":35,"endColumn":21},{"ruleId":"350","severity":1,"message":"357","line":35,"column":23,"nodeType":"352","messageId":"353","endLine":35,"endColumn":37},{"ruleId":"350","severity":1,"message":"358","line":21,"column":8,"nodeType":"352","messageId":"353","endLine":21,"endColumn":20},{"ruleId":"350","severity":1,"message":"359","line":23,"column":8,"nodeType":"352","messageId":"353","endLine":23,"endColumn":18},{"ruleId":"350","severity":1,"message":"360","line":27,"column":8,"nodeType":"352","messageId":"353","endLine":27,"endColumn":21},{"ruleId":"350","severity":1,"message":"357","line":124,"column":23,"nodeType":"352","messageId":"353","endLine":124,"endColumn":37},{"ruleId":"350","severity":1,"message":"361","line":14,"column":8,"nodeType":"352","messageId":"353","endLine":14,"endColumn":16},{"ruleId":"362","severity":1,"message":"363","line":71,"column":28,"nodeType":"364","messageId":"365","endLine":71,"endColumn":30},{"ruleId":"350","severity":1,"message":"357","line":30,"column":23,"nodeType":"352","messageId":"353","endLine":30,"endColumn":37},{"ruleId":"366","severity":1,"message":"367","line":42,"column":6,"nodeType":"368","endLine":42,"endColumn":8,"suggestions":"369"},{"ruleId":"350","severity":1,"message":"370","line":2,"column":10,"nodeType":"352","messageId":"353","endLine":2,"endColumn":20},{"ruleId":"350","severity":1,"message":"371","line":3,"column":8,"nodeType":"352","messageId":"353","endLine":3,"endColumn":13},{"ruleId":"350","severity":1,"message":"361","line":7,"column":8,"nodeType":"352","messageId":"353","endLine":7,"endColumn":16},{"ruleId":"366","severity":1,"message":"372","line":96,"column":6,"nodeType":"368","endLine":96,"endColumn":20,"suggestions":"373"},{"ruleId":"374","severity":1,"message":"375","line":142,"column":21,"nodeType":"376","endLine":142,"endColumn":80},{"ruleId":"366","severity":1,"message":"377","line":59,"column":6,"nodeType":"368","endLine":59,"endColumn":8,"suggestions":"378"},{"ruleId":"350","severity":1,"message":"379","line":2,"column":8,"nodeType":"352","messageId":"353","endLine":2,"endColumn":17},{"ruleId":"350","severity":1,"message":"380","line":3,"column":8,"nodeType":"352","messageId":"353","endLine":3,"endColumn":17},{"ruleId":"350","severity":1,"message":"357","line":8,"column":23,"nodeType":"352","messageId":"353","endLine":8,"endColumn":37},{"ruleId":"350","severity":1,"message":"381","line":9,"column":10,"nodeType":"352","messageId":"353","endLine":9,"endColumn":14},{"ruleId":"350","severity":1,"message":"382","line":11,"column":18,"nodeType":"352","messageId":"353","endLine":11,"endColumn":25},{"ruleId":"350","severity":1,"message":"383","line":16,"column":11,"nodeType":"352","messageId":"353","endLine":16,"endColumn":23},{"ruleId":"350","severity":1,"message":"384","line":6,"column":10,"nodeType":"352","messageId":"353","endLine":6,"endColumn":14},{"ruleId":"350","severity":1,"message":"385","line":7,"column":8,"nodeType":"352","messageId":"353","endLine":7,"endColumn":13},{"ruleId":"350","severity":1,"message":"386","line":42,"column":7,"nodeType":"352","messageId":"353","endLine":42,"endColumn":16},{"ruleId":"350","severity":1,"message":"356","line":63,"column":11,"nodeType":"352","messageId":"353","endLine":63,"endColumn":22},{"ruleId":"350","severity":1,"message":"384","line":4,"column":10,"nodeType":"352","messageId":"353","endLine":4,"endColumn":14},{"ruleId":"350","severity":1,"message":"387","line":52,"column":18,"nodeType":"352","messageId":"353","endLine":52,"endColumn":32},{"ruleId":"366","severity":1,"message":"388","line":71,"column":6,"nodeType":"368","endLine":71,"endColumn":8,"suggestions":"389"},{"ruleId":"350","severity":1,"message":"357","line":47,"column":23,"nodeType":"352","messageId":"353","endLine":47,"endColumn":37},{"ruleId":"362","severity":1,"message":"363","line":65,"column":28,"nodeType":"364","messageId":"365","endLine":65,"endColumn":30},{"ruleId":"366","severity":1,"message":"390","line":74,"column":6,"nodeType":"368","endLine":74,"endColumn":8,"suggestions":"391"},{"ruleId":"350","severity":1,"message":"392","line":19,"column":19,"nodeType":"352","messageId":"353","endLine":19,"endColumn":29},{"ruleId":"366","severity":1,"message":"393","line":39,"column":6,"nodeType":"368","endLine":39,"endColumn":8,"suggestions":"394"},{"ruleId":"350","severity":1,"message":"357","line":47,"column":23,"nodeType":"352","messageId":"353","endLine":47,"endColumn":37},{"ruleId":"366","severity":1,"message":"395","line":57,"column":6,"nodeType":"368","endLine":57,"endColumn":8,"suggestions":"396"},{"ruleId":"362","severity":1,"message":"363","line":64,"column":28,"nodeType":"364","messageId":"365","endLine":64,"endColumn":30},{"ruleId":"350","severity":1,"message":"397","line":39,"column":7,"nodeType":"352","messageId":"353","endLine":39,"endColumn":11},{"ruleId":"366","severity":1,"message":"395","line":71,"column":6,"nodeType":"368","endLine":71,"endColumn":8,"suggestions":"398"},{"ruleId":"366","severity":1,"message":"399","line":35,"column":6,"nodeType":"368","endLine":35,"endColumn":8,"suggestions":"400"},{"ruleId":"350","severity":1,"message":"401","line":16,"column":10,"nodeType":"352","messageId":"353","endLine":16,"endColumn":18},{"ruleId":"350","severity":1,"message":"402","line":16,"column":20,"nodeType":"352","messageId":"353","endLine":16,"endColumn":31},{"ruleId":"366","severity":1,"message":"399","line":39,"column":6,"nodeType":"368","endLine":39,"endColumn":8,"suggestions":"403"},{"ruleId":"350","severity":1,"message":"357","line":19,"column":23,"nodeType":"352","messageId":"353","endLine":19,"endColumn":37},{"ruleId":"350","severity":1,"message":"404","line":4,"column":22,"nodeType":"352","messageId":"353","endLine":4,"endColumn":33},{"ruleId":"366","severity":1,"message":"405","line":40,"column":6,"nodeType":"368","endLine":40,"endColumn":8,"suggestions":"406"},{"ruleId":"350","severity":1,"message":"357","line":47,"column":23,"nodeType":"352","messageId":"353","endLine":47,"endColumn":37},{"ruleId":"366","severity":1,"message":"407","line":57,"column":6,"nodeType":"368","endLine":57,"endColumn":8,"suggestions":"408"},{"ruleId":"362","severity":1,"message":"363","line":64,"column":28,"nodeType":"364","messageId":"365","endLine":64,"endColumn":30},{"ruleId":"350","severity":1,"message":"409","line":5,"column":22,"nodeType":"352","messageId":"353","endLine":5,"endColumn":31},{"ruleId":"350","severity":1,"message":"410","line":9,"column":9,"nodeType":"352","messageId":"353","endLine":9,"endColumn":16},{"ruleId":"350","severity":1,"message":"357","line":10,"column":23,"nodeType":"352","messageId":"353","endLine":10,"endColumn":37},{"ruleId":"366","severity":1,"message":"405","line":33,"column":6,"nodeType":"368","endLine":33,"endColumn":8,"suggestions":"411"},{"ruleId":"350","severity":1,"message":"412","line":1,"column":38,"nodeType":"352","messageId":"353","endLine":1,"endColumn":53},{"ruleId":"350","severity":1,"message":"413","line":15,"column":10,"nodeType":"352","messageId":"353","endLine":15,"endColumn":24},{"ruleId":"414","severity":1,"message":"415","line":41,"column":7,"nodeType":"416","messageId":"417","endLine":56,"endColumn":8},{"ruleId":"350","severity":1,"message":"418","line":1,"column":17,"nodeType":"352","messageId":"353","endLine":1,"endColumn":25},{"ruleId":"350","severity":1,"message":"419","line":1,"column":27,"nodeType":"352","messageId":"353","endLine":1,"endColumn":36},{"ruleId":"350","severity":1,"message":"420","line":6,"column":8,"nodeType":"352","messageId":"353","endLine":6,"endColumn":21},{"ruleId":"350","severity":1,"message":"421","line":12,"column":8,"nodeType":"352","messageId":"353","endLine":12,"endColumn":22},{"ruleId":"350","severity":1,"message":"422","line":28,"column":10,"nodeType":"352","messageId":"353","endLine":28,"endColumn":14},{"ruleId":"350","severity":1,"message":"423","line":28,"column":16,"nodeType":"352","messageId":"353","endLine":28,"endColumn":23},{"ruleId":"350","severity":1,"message":"424","line":29,"column":7,"nodeType":"352","messageId":"353","endLine":29,"endColumn":11},{"ruleId":"350","severity":1,"message":"357","line":7,"column":23,"nodeType":"352","messageId":"353","endLine":7,"endColumn":37},{"ruleId":"425","severity":1,"message":"426","line":20,"column":36,"nodeType":"427","endLine":20,"endColumn":56},{"ruleId":"350","severity":1,"message":"357","line":7,"column":23,"nodeType":"352","messageId":"353","endLine":7,"endColumn":37},{"ruleId":"428","severity":1,"message":"429","line":19,"column":11,"nodeType":"376","endLine":23,"endColumn":13},{"ruleId":"374","severity":1,"message":"375","line":26,"column":9,"nodeType":"376","endLine":32,"endColumn":10},{"ruleId":"374","severity":1,"message":"375","line":45,"column":15,"nodeType":"376","endLine":45,"endColumn":38},{"ruleId":"374","severity":1,"message":"375","line":48,"column":17,"nodeType":"376","endLine":48,"endColumn":40},{"ruleId":"374","severity":1,"message":"375","line":49,"column":17,"nodeType":"376","endLine":49,"endColumn":40},{"ruleId":"374","severity":1,"message":"375","line":50,"column":17,"nodeType":"376","endLine":50,"endColumn":40},{"ruleId":"374","severity":1,"message":"375","line":52,"column":17,"nodeType":"376","endLine":52,"endColumn":40},{"ruleId":"374","severity":1,"message":"375","line":59,"column":17,"nodeType":"376","endLine":59,"endColumn":44},{"ruleId":"374","severity":1,"message":"375","line":74,"column":13,"nodeType":"376","endLine":74,"endColumn":36},{"ruleId":"374","severity":1,"message":"375","line":76,"column":13,"nodeType":"376","endLine":76,"endColumn":36},{"ruleId":"374","severity":1,"message":"375","line":79,"column":15,"nodeType":"376","endLine":79,"endColumn":38},{"ruleId":"374","severity":1,"message":"375","line":82,"column":17,"nodeType":"376","endLine":82,"endColumn":40},{"ruleId":"374","severity":1,"message":"375","line":83,"column":17,"nodeType":"376","endLine":83,"endColumn":40},{"ruleId":"374","severity":1,"message":"375","line":84,"column":17,"nodeType":"376","endLine":84,"endColumn":40},{"ruleId":"374","severity":1,"message":"375","line":86,"column":17,"nodeType":"376","endLine":86,"endColumn":40},{"ruleId":"430","severity":1,"message":"431","line":10,"column":15,"nodeType":"376","endLine":10,"endColumn":54},{"ruleId":"374","severity":1,"message":"375","line":31,"column":17,"nodeType":"376","endLine":31,"endColumn":58},{"ruleId":"374","severity":1,"message":"375","line":36,"column":17,"nodeType":"376","endLine":36,"endColumn":60},{"ruleId":"374","severity":1,"message":"375","line":41,"column":17,"nodeType":"376","endLine":41,"endColumn":57},{"ruleId":"350","severity":1,"message":"432","line":5,"column":8,"nodeType":"352","messageId":"353","endLine":5,"endColumn":14},{"ruleId":"374","severity":1,"message":"433","line":215,"column":17,"nodeType":"376","endLine":215,"endColumn":29},{"ruleId":"350","severity":1,"message":"432","line":3,"column":8,"nodeType":"352","messageId":"353","endLine":3,"endColumn":14},{"ruleId":"350","severity":1,"message":"434","line":23,"column":25,"nodeType":"352","messageId":"353","endLine":23,"endColumn":41},{"ruleId":"350","severity":1,"message":"435","line":70,"column":9,"nodeType":"352","messageId":"353","endLine":70,"endColumn":21},{"ruleId":"374","severity":1,"message":"375","line":197,"column":11,"nodeType":"376","endLine":197,"endColumn":71},{"ruleId":"350","severity":1,"message":"355","line":9,"column":8,"nodeType":"352","messageId":"353","endLine":9,"endColumn":20},{"ruleId":"350","severity":1,"message":"436","line":32,"column":5,"nodeType":"352","messageId":"353","endLine":32,"endColumn":12},{"ruleId":"350","severity":1,"message":"437","line":1,"column":8,"nodeType":"352","messageId":"353","endLine":1,"endColumn":13},{"ruleId":"350","severity":1,"message":"385","line":2,"column":8,"nodeType":"352","messageId":"353","endLine":2,"endColumn":13},{"ruleId":"350","severity":1,"message":"438","line":3,"column":8,"nodeType":"352","messageId":"353","endLine":3,"endColumn":18},{"ruleId":"366","severity":1,"message":"439","line":14,"column":6,"nodeType":"368","endLine":14,"endColumn":35,"suggestions":"440"},{"ruleId":"350","severity":1,"message":"437","line":1,"column":8,"nodeType":"352","messageId":"353","endLine":1,"endColumn":13},{"ruleId":"350","severity":1,"message":"441","line":5,"column":10,"nodeType":"352","messageId":"353","endLine":5,"endColumn":27},{"ruleId":"350","severity":1,"message":"437","line":1,"column":8,"nodeType":"352","messageId":"353","endLine":1,"endColumn":13},{"ruleId":"374","severity":1,"message":"375","line":50,"column":7,"nodeType":"376","endLine":50,"endColumn":69},"no-native-reassign",["442"],"no-negated-in-lhs",["443"],"no-unused-vars","'PersonProfile' is defined but never used.","Identifier","unusedVar","'RegisterCustomer' is defined but never used.","'LinearBuffer' is defined but never used.","'currentUser' is assigned a value but never used.","'setcurrentUser' is assigned a value but never used.","'Appointments' is defined but never used.","'AddPersons' is defined but never used.","'NavigationBar' is defined but never used.","'Checkbox' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getQuestions'. Either include it or remove the dependency array.","ArrayExpression",["444"],"'makeStyles' is defined but never used.","'Paper' is defined but never used.","React Hook useEffect has a missing dependency: 'getQuestion'. Either include it or remove the dependency array.",["445"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getAppointment'. Either include it or remove the dependency array.",["446"],"'ClearIcon' is defined but never used.","'CheckIcon' is defined but never used.","'user' is assigned a value but never used.","'getData' is defined but never used.","'userResponse' is assigned a value but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'vpassword' is assigned a value but never used.","'updateCustomer' is defined but never used.","React Hook useEffect has missing dependencies: 'getCustomer', 'getCustomerAppointments', and 'getCustomerPets'. Either include them or remove the dependency array.",["447"],"React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.",["448"],"'setloading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCustomer'. Either include it or remove the dependency array.",["449"],"React Hook useEffect has a missing dependency: 'getPets'. Either include it or remove the dependency array.",["450"],"'rows' is assigned a value but never used.",["451"],"React Hook useEffect has a missing dependency: 'getPet'. Either include it or remove the dependency array.",["452"],"'customer' is assigned a value but never used.","'setcustomer' is assigned a value but never used.",["453"],"'userHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'getEmployee'. Either include it or remove the dependency array.",["454"],"React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.",["455"],"'useParams' is defined but never used.","'history' is assigned a value but never used.",["456"],"'useLayoutEffect' is defined but never used.","'preventDefault' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'useEffect' is defined but never used.","'ListSubheader' is defined but never used.","'AssignmentIcon' is defined but never used.","'seen' is assigned a value but never used.","'setseen' is assigned a value but never used.","'data' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Navbar' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setcurrentClinic' is assigned a value but never used.","'redirectUser' is assigned a value but never used.","'loading' is assigned a value but never used.","'React' is defined but never used.","'authHeader' is defined but never used.","React Hook useEffect has missing dependencies: 'checkForClinicName', 'checkForEmail', and 'checkForPassword'. Either include them or remove the dependency array.",["457"],"'confirmedDeletion' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"470","fix":"472"},{"desc":"473","fix":"474"},{"desc":"473","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"476","fix":"480"},{"desc":"481","fix":"482"},"Update the dependencies array to be: [getQuestions]",{"range":"483","text":"484"},"Update the dependencies array to be: [getQuestion, showTextArea]",{"range":"485","text":"486"},"Update the dependencies array to be: [getAppointment]",{"range":"487","text":"488"},"Update the dependencies array to be: [getCustomer, getCustomerAppointments, getCustomerPets]",{"range":"489","text":"490"},"Update the dependencies array to be: [getCustomers]",{"range":"491","text":"492"},"Update the dependencies array to be: [getCustomer]",{"range":"493","text":"494"},"Update the dependencies array to be: [getPets]",{"range":"495","text":"496"},{"range":"497","text":"496"},"Update the dependencies array to be: [getPet]",{"range":"498","text":"499"},{"range":"500","text":"499"},"Update the dependencies array to be: [getEmployee]",{"range":"501","text":"502"},"Update the dependencies array to be: [getEmployees]",{"range":"503","text":"504"},{"range":"505","text":"502"},"Update the dependencies array to be: [password, clinicName, email, checkForClinicName, checkForPassword, checkForEmail]",{"range":"506","text":"507"},[1383,1385],"[getQuestions]",[2692,2706],"[getQuestion, showTextArea]",[1745,1747],"[getAppointment]",[1818,1820],"[getCustomer, getCustomerAppointments, getCustomerPets]",[2194,2196],"[getCustomers]",[1020,1022],"[getCustomer]",[1769,1771],"[getPets]",[1997,1999],[928,930],"[getPet]",[1055,1057],[1074,1076],"[getEmployee]",[1798,1800],"[getEmployees]",[853,855],[481,510],"[password, clinicName, email, checkForClinicName, checkForPassword, checkForEmail]"]