[{"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/index.js":"1","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/App.js":"2","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Dashboard.js":"3","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Questions/Questions.js":"4","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Questions/QuestionPage.js":"5","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Appointments/Appointments.js":"6","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Appointments/AppointmentPage.js":"7","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Services/auth.service.js":"8","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/SuccessPage/SuccesPage.js":"9","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/ClientUI.js/WelcomePage.js":"10","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/ClientUI.js/Profile.js":"11","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Auth/login.component.js":"12","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Auth/register.component.js":"13","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Customers/Components/CustomerProfile.js":"14","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Customers/Components/GetAllCustomers.js":"15","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Customers/Components/AddCustomer.js":"16","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Pets/Components/PetDetails.js":"17","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Pets/Components/GetAllPets.js":"18","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Employess/Components/AddEmployee.js":"19","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Pets/Components/AddPet.js":"20","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Pets/Components/GetPetsOfCustomer.js":"21","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Employess/Components/Employees.js":"22","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Employess/Components/EmployeeProfile.js":"23","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/listItems.js":"24","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/LastCustomer.js":"25","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Services/auth-header.js":"26","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Notification/Components/SimplePopover.js":"27","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Navbar/Navbar.js":"28","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Title.js":"29","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Customers/Components/UpdateCustomer.js":"30"},{"size":274,"mtime":1611409736088,"results":"31","hashOfConfig":"32"},{"size":3805,"mtime":1613057196303,"results":"33","hashOfConfig":"32"},{"size":6292,"mtime":1612784851784,"results":"34","hashOfConfig":"32"},{"size":3023,"mtime":1613052375796,"results":"35","hashOfConfig":"32"},{"size":3027,"mtime":1612779042642,"results":"36","hashOfConfig":"32"},{"size":5192,"mtime":1613054020856,"results":"37","hashOfConfig":"32"},{"size":3799,"mtime":1613053876828,"results":"38","hashOfConfig":"32"},{"size":871,"mtime":1613064047334,"results":"39","hashOfConfig":"32"},{"size":969,"mtime":1610278368325,"results":"40","hashOfConfig":"32"},{"size":199,"mtime":1612893153917,"results":"41","hashOfConfig":"32"},{"size":695,"mtime":1612787863459,"results":"42","hashOfConfig":"32"},{"size":3994,"mtime":1612894093999,"results":"43","hashOfConfig":"32"},{"size":8698,"mtime":1613064320297,"results":"44","hashOfConfig":"32"},{"size":2951,"mtime":1613061307192,"results":"45","hashOfConfig":"32"},{"size":5288,"mtime":1612776227587,"results":"46","hashOfConfig":"32"},{"size":3432,"mtime":1613054670718,"results":"47","hashOfConfig":"32"},{"size":1292,"mtime":1613061485968,"results":"48","hashOfConfig":"32"},{"size":4789,"mtime":1612780025037,"results":"49","hashOfConfig":"32"},{"size":5151,"mtime":1612779693701,"results":"50","hashOfConfig":"32"},{"size":3681,"mtime":1613062683972,"results":"51","hashOfConfig":"32"},{"size":4562,"mtime":1612778933003,"results":"52","hashOfConfig":"32"},{"size":5138,"mtime":1612778779679,"results":"53","hashOfConfig":"32"},{"size":1863,"mtime":1612780668396,"results":"54","hashOfConfig":"32"},{"size":2576,"mtime":1612894171693,"results":"55","hashOfConfig":"32"},{"size":1600,"mtime":1613063747758,"results":"56","hashOfConfig":"32"},{"size":240,"mtime":1612775968463,"results":"57","hashOfConfig":"32"},{"size":4814,"mtime":1610271874543,"results":"58","hashOfConfig":"32"},{"size":4036,"mtime":1612786914660,"results":"59","hashOfConfig":"32"},{"size":343,"mtime":1609326640336,"results":"60","hashOfConfig":"32"},{"size":4852,"mtime":1613058527456,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1hu664o",{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"64"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"64"},"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/index.js",[],["142","143"],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/App.js",["144","145","146","147"],"import \"./App.css\";\n\nimport React, { useState } from \"react\";\nimport GetAllPersons from \"./Customers/Components/GetAllCustomers\";\nimport GetAllPets from \"./Pets/Components/GetAllPets\";\nimport GetPetsOfCustomer from \"./Pets/Components/GetPetsOfCustomer\";\nimport Reports from \"./Questions/Questions\";\nimport Employees from \"./Employess/Components/Employees\";\nimport Appointments from \"./Appointments/Appointments\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport PersonProfile from \"./Customers/Components/CustomerProfile\";\nimport PetDetails from \"./Pets/Components/PetDetails\";\nimport AddPet from \"./Pets/Components/AddPet\";\nimport AppointmentPage from \"./Appointments/AppointmentPage\";\nimport AddEmployee from \"./Employess/Components/AddEmployee\";\nimport EmployeeProfile from \"./Employess/Components/EmployeeProfile\";\nimport AddCustomer from \"./Customers/Components/AddCustomer\";\nimport QuestionPage from \"./Questions/QuestionPage\";\nimport SuccesPage from \"./SuccessPage/SuccesPage\";\nimport CustomerProfile from \"./Customers/Components/CustomerProfile\";\n\nimport AuthService from \"./Services/auth.service\";\nimport WelcomePage from \"./ClientUI.js/WelcomePage\";\nimport Register from \"./Auth/register.component\";\nimport Login from \"./Auth/login.component\";\nimport Profile from \"./ClientUI.js/Profile\";\nimport UpdateCustomer from \"./Customers/Components/UpdateCustomer\";\n\nexport default function App() {\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/dash\" component={Dashboard} />\n\n          <Route path=\"/customers\" exact component={GetAllPersons} />\n          <Route\n            path=\"/customers/:customerId\"\n            exact\n            component={CustomerProfile}\n          />\n          <Route path=\"/addCustomer\" exact component={Register} />\n          <Route\n            path=\"/customers/:customerId/pets/:petId\"\n            exact\n            component={PetDetails}\n          />\n          <Route\n            path=\"/customers/:customerId/appointments/:appointmentId\"\n            exact\n            component={AppointmentPage}\n          />\n          <Route\n            path=\"/customers/:customerId/pets\"\n            exact\n            component={GetPetsOfCustomer}\n          />\n\n          <Route\n            path=\"/customers/:customerId/updateCustomer\"\n            exact\n            component={UpdateCustomer}\n          />\n\n          <Route\n            path=\"/customers/:customerId/addPet\"\n            exact\n            component={AddPet}\n          />\n          <Route path=\"/pets\" component={GetAllPets} />\n          <Route\n            path=\"/customers/:customerId/pets/:petId\"\n            exact\n            component={PetDetails}\n          />\n\n          <Route path=\"/questions\" exact component={Reports} />\n          <Route\n            path=\"/customers/:customerId/questions/:questionId\"\n            exact\n            component={QuestionPage}\n          />\n\n          <Route path=\"/employees\" component={Employees} exact />\n          <Route\n            path=\"/employees/:employeeId\"\n            component={EmployeeProfile}\n            exact\n          />\n          <Route path=\"/addEmployee\" exact component={AddEmployee} />\n\n          <Route path=\"/appointments\" component={Appointments} />\n\n          <Route path=\"/successPage\" component={SuccesPage} />\n\n          <Route path=\"/home\" component={WelcomePage} />\n\n          <Route path=\"/\" component={WelcomePage} exact />\n\n          <Route path=\"/register\" component={Register} />\n\n          <Route path=\"/login\" component={Login} />\n\n          <Route path=\"/myProfile/:id\" exact component={Profile} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Dashboard.js",["148","149","150"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { mainListItems, secondaryListItems } from \"./listItems\";\nimport Deposits from \"./LastCustomer\";\nimport Appointments from \"./Appointments/Appointments\";\nimport PetsIcon from \"@material-ui/icons/Pets\";\nimport AddPersons from \"./Customers/Components/AddCustomer\";\nimport SimplePopover from \"./Notification/Components/SimplePopover\";\nimport authService from \"./Services/auth.service\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const [currentUser, setcurrentUser] = useState(authService.getCurrentUser());\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            PetBox <PetsIcon />\n          </Typography>\n          <IconButton color=\"inherit\">\n            <SimplePopover />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <img\n                  src=\"https://veryimportantpets.ro/wp-content/uploads/2019/10/pets-hanging-1.png\"\n                  alt=\"Logo\"\n                  style={{ height: \"100%\" }}\n                />\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper} style={{ height: \"100%\" }}>\n                <AddPersons />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Questions/Questions.js",[],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Questions/QuestionPage.js",["151","152"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport authHeader from \"../Services/auth-header\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: \"inline\",\n  },\n}));\n\nexport default function AlignItemsList(props) {\n  const classes = useStyles();\n  const [question, setquestion] = useState([]);\n  const [response, setresponse] = useState();\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n  const questionId = params.questionId;\n\n  async function markAsSolved() {\n    await axios.get(\n      `http://localhost:8080/customers/${customerId}/questions/${questionId}/setSolved`,\n      { headers: authHeader() }\n    );\n  }\n\n  async function getQuestion() {\n    await axios\n      .get(\n        `http://localhost:8080/customers/${customerId}/questions/${questionId}`,\n        { headers: authHeader() }\n      )\n      .then((res) => setquestion(res.data));\n  }\n\n  function handleChange(event) {\n    setresponse(event.target.value);\n  }\n\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.get(\n      `http://localhost:8080/customers/${customerId}/questions/${questionId}/setResponse`,\n      {\n        response: data.get(\"response\"),\n        headers: authHeader(),\n      }\n    );\n  }\n\n  useEffect(() => {\n    getQuestion();\n  }, []);\n\n  return (\n    <Container>\n      <p>\n        Question author{\" \"}\n        <small>\n          <Link to={`http://localhost:8080/customers/${customerId}`}>\n            {question.author}\n          </Link>\n        </small>\n      </p>\n      <Paper>\n        <p>Question: {question.text}</p>\n        Response: <small>{response}</small>\n        <form className=\"form-signin\" method=\"post\" onSubmit={submitForm}>\n          <div class=\"form-floating\">\n            <textarea\n              className=\"form-control\"\n              placeholder=\"Leave a comment here\"\n              id=\"response\"\n              style={{ height: \"100px\" }}\n              onChange={handleChange}\n              name=\"response\"\n            ></textarea>\n            <label for=\"floatingTextarea2\">Add your response</label>\n          </div>\n          {/* <Link to={`/successPage`}>\n            {\" \"} */}\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit response\n          </button>\n          {/* </Link> */}\n        </form>\n        <p>Question date: {question.date}</p>\n        Mark as solved:{\" \"}\n        <Checkbox\n          checked={question.solved ? true : false}\n          onClick={markAsSolved}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n        {console.log(question.solved)}\n      </Paper>\n    </Container>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Appointments/Appointments.js",["153","154"],"import React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport axios from \"axios\";\nimport Container from \"@material-ui/core/Container\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Link } from \"react-router-dom\";\nimport authHeader from \"../Services/auth-header\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  const [appointments, setappointments] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  async function getAppointments() {\n    await axios\n      .get(\"http://localhost:8080/appointments\", { headers: authHeader() })\n      .then((res) => setappointments(res.data));\n  }\n\n  function formatDateWithoutTime(date) {\n    var parsedDate = new Date(date);\n    return parsedDate.toLocaleDateString();\n  }\n\n  useEffect(() => {\n    getAppointments();\n  }, []);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = appointments.filter((app) =>\n      app.customer.firstName\n        .toString()\n        .toLowerCase()\n        .includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(appointments);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  const displayAppointments = (appointments) => {\n    return (\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Customer Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Date</StyledTableCell>\n              <StyledTableCell align=\"right\">Hour</StyledTableCell>\n              <StyledTableCell align=\"right\">Reason</StyledTableCell>\n              <StyledTableCell align=\"right\">Status</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {appointments.map((app) => (\n              <StyledTableRow key={app.id}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  <Link to={`customers/${app.customer.id}`}>\n                    {app.customer.firstName}\n                  </Link>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {formatDateWithoutTime(app.dateOfAppointment)}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{app.hour}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <Link\n                    to={`customers/${app.customer.id}/appointments/${app.id}`}\n                  >\n                    {app.reason}\n                  </Link>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {!app.accepted && !app.declined ? (\n                    <p style={{ color: \"orange\" }}>Waiting</p>\n                  ) : app.accepted ? (\n                    <p style={{ color: \"green\" }}>Accepted</p>\n                  ) : (\n                    <p style={{ color: \"red\" }}>Declined</p>\n                  )}\n                </StyledTableCell>\n                {console.log(app)}\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayAppointments(searchResults)\n        : displayAppointments(appointments)}\n    </div>\n  );\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchAppointment\"\n        freeSolo\n        options={appointments.map((app) => app.customer.firstName)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search appointment\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-appointment\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"lg\">\n        <h1>Appointments</h1>\n        <div>{search}</div>\n        {content}\n      </Container>\n    </React.Fragment>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Appointments/AppointmentPage.js",["155"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport authHeader from \"../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function AppointmentPage(props) {\n  const {\n    match: { params },\n  } = props;\n  const history = useHistory();\n  const customerId = params.customerId;\n  const appointmentId = params.appointmentId;\n  const [appointment, setappointment] = useState({});\n\n  async function getAppointment() {\n    await axios\n      .get(\n        `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}`,\n        { headers: authHeader() }\n      )\n      .then((res) => setappointment(res.data));\n  }\n\n  function acceptAppointment() {\n    // set accept boolean of appointment to true with a put request\n    axios.get(\n      `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}/accept`,\n      { headers: authHeader() }\n    );\n    window.location.reload();\n  }\n\n  function declineAppointment() {\n    // set accept boolean of appointment to false with a put request\n    axios.get(\n      `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}/decline`,\n      { headers: authHeader() }\n    );\n    window.location.reload();\n  }\n\n  function deleteAppointment() {\n    axios.delete(\n      `http://localhost:8080/customers/${customerId}/appointments/${appointmentId}`,\n      { headers: authHeader() }\n    );\n    history.push(\"/appointments\");\n  }\n\n  function formatDateWithoutTime(date) {\n    var parsedDate = new Date(date);\n    return parsedDate.toLocaleDateString();\n  }\n\n  useEffect(() => {\n    getAppointment();\n  }, []);\n\n  return (\n    <div>\n      Appointment author:{\" \"}\n      <h1>\n        {appointment.customer\n          ? appointment.customer.firstName + \" \" + appointment.customer.lastName\n          : \"\"}\n      </h1>\n      Reason of appointment: <h2>{appointment.reason}</h2>\n      Date of appointment:{\" \"}\n      <h3>\n        {formatDateWithoutTime(appointment.dateOfAppointment)} - At{\" \"}\n        {appointment.hour}\n      </h3>\n      <div>\n        {appointment.accepted ? (\n          <div>\n            <h2>This appointment has been accepted.</h2>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={declineAppointment}\n              className=\"btn btn-primary btn-sm\"\n            >\n              Change to declined\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={deleteAppointment}\n            >\n              Delete appointment\n            </Button>\n          </div>\n        ) : appointment.declined ? (\n          \"\"\n        ) : (\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={acceptAppointment}\n            >\n              Accept\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={declineAppointment}\n            >\n              Decline\n            </Button>\n          </div>\n        )}\n        {appointment.declined ? (\n          <div>\n            <h2>This appointment has been declined.</h2>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={acceptAppointment}\n            >\n              Change to accepted\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={deleteAppointment}\n            >\n              Delete appointment\n            </Button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      {console.log(appointment.reason)}\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Services/auth.service.js",[],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/SuccessPage/SuccesPage.js",["156"],"import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { AppBar } from \"@material-ui/core\";\n\nexport default function SuccesPage() {\n  return (\n    <div className=\"successPageBody\">\n      <AppBar />\n      <div className=\"card\">\n        <div\n          style={{\n            \"border-radius\": \"200px\",\n            height: \"200px\",\n            width: \"200px\",\n            background: \"#F8FAF5\",\n            margin: \"0 auto\",\n          }}\n        >\n          <i className=\"checkmark\" className=\"successI\">\n            ✓\n          </i>\n        </div>\n        <h1 className=\"successH1\">Success</h1>\n        <p className=\"successP\">\n          Your response has been sent !\n          <br />\n          <Link to={`/dash`}>\n            <Button variant=\"contained\" style={{ marginTop: \"5%\" }}>\n              Back to dashboard\n            </Button>{\" \"}\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/ClientUI.js/WelcomePage.js",[],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/ClientUI.js/Profile.js",["157","158","159","160","161","162"],"import React, { useState } from \"react\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AuthService from \"../Services/auth.service\";\nimport axios from \"axios\";\n\nexport default function Profile(props) {\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n  const [user, setuser] = useState({});\n\n  async function getData() {\n    const response = await axios.get(\n      `http://localhost:8080/customers/${currentUser.id}`\n    );\n    setuser(response.data);\n    const userResponse = axios.get(\n      `http://localhost:8080/customers/${currentUser.id}`\n    );\n  }\n\n  return <div>{currentUser.username}</div>;\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Auth/login.component.js",[],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Auth/register.component.js",["163"],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Customers/Components/CustomerProfile.js",["164","165"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function CustomerProfile(props) {\n  const history = useHistory();\n  const [customer, setcustomer] = useState({});\n  const [pets, setpets] = useState([]);\n  const [appointments, setappointments] = useState([]);\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n\n  async function getCustomer() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => setcustomer(res.data));\n  }\n\n  async function getCustomerPets() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/pets`, {\n        headers: authHeader(),\n      })\n      .then((res) => setpets(res.data));\n  }\n\n  async function getCustomerAppointments() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/appointments`, {\n        headers: authHeader(),\n      })\n      .then((res) => setappointments(res.data));\n  }\n\n  async function deleteCustomer() {\n    await axios.delete(\n      `http://localhost:8080/customers/${customerId}`,\n      { headers: authHeader() },\n      {\n        data: { customer },\n      }\n    );\n    history.push(\"/customers\");\n  }\n\n  async function updateCustomer() {\n    await axios.put(\n      `http://localhost:8080/customers/${customerId}`,\n      {\n        customer,\n      },\n      { headers: authHeader() }\n    );\n  }\n\n  function formatDateWithoutTime(date) {\n    var parsedDate = new Date(date);\n    return parsedDate.toLocaleString();\n  }\n\n  useEffect(() => {\n    getCustomer();\n    getCustomerPets();\n    getCustomerAppointments();\n  }, []);\n\n  return (\n    <div>\n      Username: {customer.username}\n      <br />\n      First name: {customer.firstName}\n      <br />\n      Last name : {customer.lastName}\n      <br />\n      Gender : {customer.gender}\n      <br />\n      Address: {customer.address}\n      <br />\n      Last seen at: {formatDateWithoutTime(customer.lastSeen)}\n      <br />\n      <ul>\n        Pets:\n        {pets.map((pet) => (\n          <li>\n            <Link to={`/customers/${customerId}/pets/${pet.id}`}>\n              {pet.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <Link to={`/customers/${customer.id}/addPet`}>Add new pet</Link>\n      <ul>\n        Appointments\n        {appointments.map((app) => (\n          <li>\n            <Link to={`/customers/${customer.id}/appointments/${app.id}`}>\n              {app.reason}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <button className=\"btn btn-danger\" onClick={deleteCustomer}>\n        Delete\n      </button>\n      <Link to={`/customers/${customerId}/updateCustomer`}>\n        <button className=\"btn btn-warning\">Edit</button>\n      </Link>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Customers/Components/GetAllCustomers.js",["166"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport authHeader from \"../../Services/auth-header\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  const [customers, setcustomers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  async function getCustomers() {\n    await axios\n      .get(\"http://localhost:8080/customers\", { headers: authHeader() })\n      .then((res) => setcustomers(res.data));\n  }\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = customers.filter((customer) =>\n      customer.firstName\n        .toString()\n        .toLowerCase()\n        .includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(customers);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  const displayCustomers = (customers) => {\n    return (\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>FirstName</StyledTableCell>\n              <StyledTableCell align=\"right\">LastName</StyledTableCell>\n              <StyledTableCell align=\"right\">Address</StyledTableCell>\n              <StyledTableCell align=\"right\">PhoneNumber</StyledTableCell>\n              <StyledTableCell align=\"right\">Gender</StyledTableCell>\n              <StyledTableCell align=\"right\">Age</StyledTableCell>\n              <StyledTableCell align=\"right\">Pets</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {customers.map((customer) => (\n              <StyledTableRow key={customer.id}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  <Link\n                    to={`/customers/${customer.id}`}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    {customer.firstName}\n                  </Link>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.lastName}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.address}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.phoneNumber}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {customer.gender}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{customer.age}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <Link\n                    to={`/customers/${customer.id}/pets`}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    See pets\n                  </Link>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayCustomers(searchResults)\n        : displayCustomers(customers)}\n    </div>\n  );\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchCustomer\"\n        freeSolo\n        options={customers.map((customer) => customer.firstName)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search customer\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-customer\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"lg\">\n        <h1>Customers</h1>\n        <div>{search}</div>\n        <Link to=\"/addCustomer\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Add new customer\n          </button>\n        </Link>\n        {content}\n      </Container>\n    </React.Fragment>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Customers/Components/AddCustomer.js",["167"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function AddPersons(props) {\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.post(\"http://localhost:8080/customers\", {\n      firstName: data.get(\"firstName\"),\n      lastName: data.get(\"lastName\"),\n      address: data.get(\"address\"),\n      phoneNumber: data.get(\"phoneNumber\"),\n      gender: data.get(\"gender\"),\n      age: data.get(\"age\"),\n      lastSeen: new Date(),\n    });\n  }\n\n  return (\n    <Container\n      style={{\n        border: \"white\",\n        height: \"100%\",\n        width: \"50%\",\n        margin: \"auto\",\n        marginTop: \"5%\",\n      }}\n    >\n      <h1>Add customer</h1>\n      <form\n        className=\"form-signin\"\n        method=\"post\"\n        action=\"/customers\"\n        onSubmit={submitForm}\n      >\n        <div className=\"mb-3\">\n          <label htmlFor=\"firstName\" className=\"form-label\">\n            First Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"firstName\"\n            name=\"firstName\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"lastName\" className=\"form-label\">\n            Last Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"lastName\"\n            name=\"lastName\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"phoneNumber\" className=\"form-label\">\n            Phone Number\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"gender\" className=\"form-label\">\n            Gender\n          </label>\n          <select\n            className=\"form-select form-select-sm mb-3\"\n            aria-label=\".form-select-sm example\"\n            id=\"gender\"\n            name=\"gender\"\n          >\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n            <option value=\"other\">Other</option>\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            name=\"email\"\n          />\n          <div id=\"emailHelp\" className=\"form-text\">\n            We'll never share your email with anyone else.\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"address\" className=\"form-label\">\n            Address\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"address\"\n            name=\"address\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"age\" className=\"form-label\">\n            Age\n          </label>\n          <input type=\"text\" className=\"form-control\" id=\"age\" name=\"age\" />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </Container>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Pets/Components/PetDetails.js",["168"],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Pets/Components/GetAllPets.js",["169","170"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport authHeader from \"../../Services/auth-header\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function GetAllPets() {\n  const classes = useStyles();\n  const [pets, setpets] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  async function getPets() {\n    await axios\n      .get(\"http://localhost:8080/pets\", { headers: authHeader() })\n      .then((res) => setpets(res.data));\n  }\n\n  useEffect(() => {\n    getPets();\n  }, []);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = pets.filter((pet) =>\n      pet.name.toString().toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(pets);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  const displayPets = (pets) => {\n    return (\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Gender</StyledTableCell>\n              <StyledTableCell align=\"right\">Race</StyledTableCell>\n              <StyledTableCell align=\"right\">Age</StyledTableCell>\n              <StyledTableCell align=\"right\">Color</StyledTableCell>\n              <StyledTableCell align=\"right\">Owner</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {pets\n              ? pets.map((pet) => (\n                  <StyledTableRow key={pet.id}>\n                    <Link to={`/customers/${pet.customer.id}/pets/${pet.id}`}>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {pet.name}\n                      </StyledTableCell>\n                    </Link>\n                    <StyledTableCell align=\"right\">\n                      {pet.gender}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.race}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.age}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.color}</StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      <Link to={`/customers/${pet.customer.id}`}>\n                        {pet.customer.firstName} {pet.customer.lastName}\n                      </Link>\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))\n              : \"Loading...\"}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayPets(searchResults)\n        : displayPets(pets)}\n    </div>\n  );\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchPet\"\n        freeSolo\n        options={pets.map((pet) => pet.name)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search for pet\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-pet\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"lg\">\n        <h1>Pets</h1>\n        <div>\n          <div>{search}</div>\n          {content}\n        </div>\n      </Container>\n    </React.Fragment>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Employess/Components/AddEmployee.js",["171"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"@material-ui/core\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nexport default function AddEmployee() {\n  const history = useHistory();\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.post(\n      \"http://localhost:8080/employees\",\n      {\n        firstName: data.get(\"firstName\"),\n        lastName: data.get(\"lastName\"),\n        address: data.get(\"address\"),\n        phoneNumber: data.get(\"phoneNumber\"),\n        gender: data.get(\"gender\"),\n        age: data.get(\"age\"),\n        role: data.get(\"role\"),\n        contractStartingDate: data.get(\"startDate\"),\n        contractEndingDate: data.get(\"endDate\"),\n        salary: data.get(\"salary\"),\n      },\n      { headers: authHeader() }\n    );\n    history.push(`/employees`);\n  }\n\n  return (\n    <div>\n      <Container\n        style={{\n          border: \"white\",\n          height: \"100%\",\n          width: \"50%\",\n          margin: \"auto\",\n          marginTop: \"5%\",\n        }}\n      >\n        <h1>Add employee</h1>\n        <form\n          className=\"form-signin\"\n          method=\"post\"\n          action=\"/customers\"\n          onSubmit={submitForm}\n        >\n          <div className=\"mb-3\">\n            <label htmlFor=\"firstName\" className=\"form-label\">\n              First Name\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"firstName\"\n              name=\"firstName\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"lastName\" className=\"form-label\">\n              Last Name\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"lastName\"\n              name=\"lastName\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"phoneNumber\" className=\"form-label\">\n              Phone Number\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"phoneNumber\"\n              name=\"phoneNumber\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"gender\" className=\"form-label\">\n              Gender\n            </label>\n            <select\n              className=\"form-select form-select-sm mb-3\"\n              aria-label=\".form-select-sm example\"\n              id=\"gender\"\n              name=\"gender\"\n            >\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n              Email address\n            </label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              name=\"email\"\n            />\n            <div id=\"emailHelp\" className=\"form-text\">\n              We'll never share your email with anyone else.\n            </div>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"address\" className=\"form-label\">\n              Address\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"address\"\n              name=\"address\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"age\" className=\"form-label\">\n              Age\n            </label>\n            <input type=\"text\" className=\"form-control\" id=\"age\" name=\"age\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"role\" className=\"form-label\">\n              Role\n            </label>\n            <input type=\"text\" className=\"form-control\" id=\"age\" name=\"role\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"salary\" className=\"form-label\">\n              Salary\n            </label>\n            <input\n              type=\"number\"\n              min=\"1\"\n              step=\"any\"\n              className=\"form-control\"\n              id=\"salary\"\n              name=\"salary\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"startDate\" className=\"form-label\">\n              Start date\n            </label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"startDate\"\n              name=\"startDate\"\n            />\n            <label htmlFor=\"endDate\" className=\"form-label\">\n              End date\n            </label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"endDate\"\n              name=\"endDate\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </Container>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Pets/Components/AddPet.js",["172"],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Pets/Components/GetPetsOfCustomer.js",["173","174"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Container } from \"@material-ui/core\";\nimport authHeader from \"../../Services/auth-header\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function GetAllPets(props) {\n  const classes = useStyles();\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n  const [pets, setpets] = useState([]);\n\n  async function getPets() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}/pets`, {\n        headers: authHeader(),\n      })\n      .then((res) => setpets(res.data));\n  }\n\n  useEffect(() => {\n    getPets();\n  }, []);\n\n  return (\n    <Container>\n      {pets.length > 0 ? (\n        <div>\n          <h1>Pets</h1>{\" \"}\n          <div>\n            <Autocomplete\n              style={{ width: \"250px\" }}\n              freeSolo\n              id=\"free-solo-2-demo\"\n              disableClearable\n              // options={top100Films.map((option) => option.title)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Search input\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          </div>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"customized table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell>Name</StyledTableCell>\n                  <StyledTableCell align=\"right\">Gender</StyledTableCell>\n                  <StyledTableCell align=\"right\">Race</StyledTableCell>\n                  <StyledTableCell align=\"right\">Age</StyledTableCell>\n                  <StyledTableCell align=\"right\">Color</StyledTableCell>\n                  <StyledTableCell align=\"right\">Owner</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {pets.map((pet) => (\n                  <StyledTableRow key={pet.id}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      <Link to={`/customers/${customerId}/pets/${pet.id}`}>\n                        {pet.name}\n                      </Link>\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      {pet.gender}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.race}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.age}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{pet.color}</StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      <Link to={`/customers/${pet.customer.id}`}>\n                        {pet.customer.firstName} {pet.customer.lastName}\n                      </Link>\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      ) : (\n        <h1>No pets for this customer yet.</h1>\n      )}\n    </Container>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Employess/Components/Employees.js",["175"],"import React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport authHeader from \"../../Services/auth-header\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#3f51b5\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function Employees() {\n  const classes = useStyles();\n  const [employees, setemployees] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  async function getEmployees() {\n    await axios\n      .get(\"http://localhost:8080/employees\", { headers: authHeader() })\n      .then((res) => setemployees(res.data));\n  }\n\n  useEffect(() => {\n    getEmployees();\n  }, []);\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    const results = employees.filter((empl) =>\n      empl.firstName.toString().toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    if (event.target.value == \"\") {\n      setSearchResults(employees);\n    } else {\n      setSearchResults(results);\n    }\n  };\n\n  const search = (\n    <div>\n      <Autocomplete\n        style={{ width: \"200px\" }}\n        id=\"searchEmployee\"\n        freeSolo\n        options={employees.map((em) => em.firstName)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search employee\"\n            margin=\"normal\"\n            onChange={handleChange}\n            onKeyPress={handleChange}\n            value={searchTerm}\n            type=\"text\"\n            name=\"search-employee\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n    </div>\n  );\n\n  const displayEmployees = (employees) => {\n    return (\n      <React.Fragment>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>FIrst Name</StyledTableCell>\n                <StyledTableCell align=\"left\">Last Name</StyledTableCell>\n                <StyledTableCell align=\"left\">Age</StyledTableCell>\n                <StyledTableCell align=\"left\">Role</StyledTableCell>\n                <StyledTableCell align=\"left\">Salary</StyledTableCell>\n                <StyledTableCell align=\"left\">Phone number</StyledTableCell>\n                <StyledTableCell align=\"left\">Address</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {employees.map((em) => (\n                <StyledTableRow key={em.id}>\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                    <Link to={`/employees/${em.id}`}>{em.firstName}</Link>\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.lastName}</StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.age}</StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.role}</StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.salary}</StyledTableCell>\n                  <StyledTableCell align=\"left\">\n                    {em.phoneNumber}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">{em.address}</StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </React.Fragment>\n    );\n  };\n\n  const content = (\n    <div className=\"cards\">\n      {searchResults.length > 0\n        ? displayEmployees(searchResults)\n        : displayEmployees(employees)}\n    </div>\n  );\n\n  return (\n    <div>\n      {employees.length > 0 ? (\n        <Container maxWidth=\"lg\" style={{ marginTop: \"5%\" }}>\n          <h1>Employees</h1>\n          <div>{search}</div>\n          <Link to=\"/addEmployee\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Add employee\n            </button>\n          </Link>\n          {content}\n        </Container>\n      ) : (\n        <Container>\n          <h2>No employees yet.</h2>\n          <Link to=\"/addEmployee\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Add employee\n            </button>\n          </Link>\n        </Container>\n      )}\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Employess/Components/EmployeeProfile.js",["176","177","178"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory, userHistory } from \"react-router-dom\";\n\nimport { Link } from \"react-router-dom\";\n\nexport default function EmployeeProfile(props) {\n  const [employee, setEmployee] = useState({});\n  const history = useHistory();\n\n  const {\n    match: { params },\n  } = props;\n  const employeeId = params.employeeId;\n\n  async function getEmployee() {\n    await axios\n      .get(`http://localhost:8080/employees/${employeeId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => setEmployee(res.data));\n  }\n\n  async function deleteEmployee() {\n    await axios.delete(\n      `http://localhost:8080/employees/${employeeId}`,\n      { headers: authHeader() },\n      {\n        data: { employee },\n      }\n    );\n    history.push(\"/dash\");\n  }\n\n  async function updateEmployee() {\n    await axios.put(\n      `http://localhost:8080/employees/${employeeId}`,\n      {\n        employee,\n      },\n      { headers: authHeader() }\n    );\n  }\n\n  useEffect(() => {\n    getEmployee();\n  }, []);\n\n  return (\n    <div>\n      First name: {employee.firstName}\n      <br />\n      Last name : {employee.lastName}\n      <br />\n      Gender : {employee.gender}\n      <br />\n      Address: {employee.address}\n      <br />\n      Phone number: {employee.phoneNumber}\n      <br />\n      Contract started on: {employee.contractStartingDate}\n      <br />\n      Contract ends on: {employee.contractEndingDate}\n      <br />\n      Currently working as an {employee.role}\n      <br />\n      Current salary: {employee.salary}$\n      <br />\n      <button className=\"btn btn-danger\" onClick={deleteEmployee}>\n        Delete\n      </button>\n      <button className=\"btn btn-warning\" onClick={updateEmployee}>\n        Edit\n      </button>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/listItems.js",["179","180","181","182"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PetsIcon from \"@material-ui/icons/Pets\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport SpellcheckIcon from \"@material-ui/icons/Spellcheck\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport AuthService from \"./Services/auth.service\";\n\nconst currentUser = AuthService.getCurrentUser();\n\nfunction logOut() {\n  AuthService.logout();\n}\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <Link to=\"/dash\">\n        <ListItemText primary=\"Dashboard\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PetsIcon />\n      </ListItemIcon>\n      <Link to=\"/pets\">\n        <ListItemText primary=\"Pets\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <Link to=\"/customers\">\n        <ListItemText primary=\"Customers\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <HelpIcon />\n      </ListItemIcon>\n      <Link to=\"/questions\">\n        <ListItemText primary=\"Questions\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIndIcon />\n      </ListItemIcon>\n      <Link to=\"/employees\">\n        <ListItemText primary=\"Employees\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <SpellcheckIcon />\n      </ListItemIcon>\n      <Link to=\"/appointments\">\n        <ListItemText primary=\"Appointments\" />\n      </Link>\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    {currentUser && currentUser.roles.includes(\"ROLE_ADMIN\") ? (\n      <div className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link to={\"/profile\"} className=\"nav-link\">\n            {currentUser.username}\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n            LogOut\n          </a>\n        </li>\n      </div>\n    ) : (\n      \"\"\n    )}\n  </div>\n);\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/LastCustomer.js",["183","184"],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Services/auth-header.js",[],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Notification/Components/SimplePopover.js",["185","186","187"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport axios from \"axios\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function SimplePopover() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [questions, setquestions] = useState([]);\n  const [appointments, setappointments] = useState([]);\n  const [numberOfUnseenQuestions, setNumberOfUnseenQuestions] = useState();\n  const [\n    numberOfUnseenAppointments,\n    setNumberOfUnseenAppointments,\n  ] = useState();\n  const [seen, setseen] = useState();\n  var data;\n\n  async function getData() {\n    await axios\n      .get(\"http://localhost:8080/questions\")\n      .then((res) => setquestions(!res.data.seen ? res.data : \"\"));\n    await axios\n      .get(\"http://localhost:8080/appointments\")\n      .then((res) => setappointments(!res.data.seen ? res.data : \"\"));\n  }\n\n  useEffect(() => {\n    getData();\n    getNumberOfUnseenQuestions();\n    getNumberOfUnseenAppointments();\n  }, []);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  function markAsSeen() {\n    questions.length > 0\n      ? questions.forEach((q) => {\n          axios.get(\n            `http://localhost:8080/customers/${q.customer.id}/questions/${q.id}/setSeen`\n          );\n        })\n      : console.log(\"No question\");\n\n    appointments.length > 0\n      ? appointments.forEach((a) => {\n          axios.get(\n            `http://localhost:8080/customers/${a.customer.id}/appointments/${a.id}/setSeen`\n          );\n        })\n      : console.log(\"No appointment\");\n  }\n\n  async function getNumberOfUnseenQuestions() {\n    return await axios\n      .get(\"http://localhost:8080/questions/seen\")\n      .then((res) => setNumberOfUnseenQuestions(res.data));\n  }\n\n  async function getNumberOfUnseenAppointments() {\n    return await axios\n      .get(\"http://localhost:8080/appointments/seen\")\n      .then((res) => setNumberOfUnseenAppointments(res.data));\n  }\n\n  return (\n    <div>\n      {console.log(questions)}\n      <Badge\n        badgeContent={numberOfUnseenQuestions + numberOfUnseenAppointments}\n        color=\"secondary\"\n        onClick={markAsSeen}\n      >\n        {\" \"}\n        <Button\n          aria-describedby={id}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleClick}\n        >\n          <NotificationsIcon />\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <Typography className={classes.typography}>\n            {console.log(questions)}\n            {questions.length > 0\n              ? questions.map((q) =>\n                  !q.seen ? (\n                    <div>\n                      <p>\n                        <Link\n                          to={`/customers/${q.customer.id}/questions/${q.id}`}\n                        >\n                          <strong>{`Question - ${q.text}`}</strong>\n                        </Link>\n                      </p>\n                      <small>{`by ${q.author}`}</small>\n                      <br />\n                    </div>\n                  ) : (\n                    \"\"\n                  )\n                )\n              : \"No new questions\"}\n            <hr />\n            {appointments.length > 0\n              ? appointments.map((a) =>\n                  !a.seen ? (\n                    <div>\n                      <p>\n                        <strong>\n                          <Link\n                            to={`/customers/${a.customer.id}/appointments/${a.id}`}\n                          >{`Appointment - ${a.reason}`}</Link>\n                        </strong>\n                      </p>\n                      <small>{`by ${a.customer.firstName} ${a.customer.lastName}`}</small>\n                      <br />\n                    </div>\n                  ) : (\n                    \"\"\n                  )\n                )\n              : \"No new appointments\"}\n          </Typography>\n        </Popover>\n      </Badge>\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Navbar/Navbar.js",["188"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport AuthService from \"../Services/auth.service\";\n\nexport default function Navbar() {\n  const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser());\n\n  function logOut() {\n    AuthService.logout();\n  }\n\n  return (\n    <div>\n      <nav\n        class=\"navbar navbar-expand-lg navbar-light fixed-top py-3\"\n        id=\"mainNav\"\n      >\n        <div class=\"container\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            PetBox\n          </Link>\n          <button\n            class=\"navbar-toggler navbar-toggler-right\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav ml-auto my-2 my-lg-0\">\n              <li class=\"nav-item\">\n                <Link to={\"/home\"} className=\"nav-link\">\n                  Home\n                </Link>\n              </li>\n              {/* {currentUser && (\n                <li className=\"nav-item\">\n                  <Link to={\"/user\"} className=\"nav-link\">\n                    User\n                  </Link>\n                </li>\n              )} */}\n              {currentUser ? (\n                <div className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item\">\n                    <Link\n                      to={`/myProfile/${currentUser.id}`}\n                      className=\"nav-link\"\n                    >\n                      {currentUser.username}\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                      LogOut\n                    </a>\n                  </li>\n                </div>\n              ) : (\n                <div className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item\">\n                    <Link to={\"/login\"} className=\"nav-link\">\n                      Login\n                    </Link>\n                  </li>\n\n                  <li className=\"nav-item\">\n                    <Link to={\"/register\"} className=\"nav-link\">\n                      Sign Up\n                    </Link>\n                  </li>\n                </div>\n              )}\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n      {/* <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <Link to={\"/\"} className=\"navbar-brand\">\n          PetBox\n        </Link>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/home\"} className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n\n          {currentUser && (\n            <li className=\"nav-item\">\n              <Link to={\"/user\"} className=\"nav-link\">\n                User\n              </Link>\n            </li>\n          )}\n        </div>\n\n        {currentUser ? (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/profile\"} className=\"nav-link\">\n                {currentUser.username}\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                LogOut\n              </a>\n            </li>\n          </div>\n        ) : (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\">\n                Login\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to={\"/register\"} className=\"nav-link\">\n                Sign Up\n              </Link>\n            </li>\n          </div>\n        )}\n      </nav> */}\n    </div>\n  );\n}\n","/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Title.js",[],"/home/gabi/Desktop/Projects/PersonalProjects/SchoolManagement/frontendAdmin/src/Customers/Components/UpdateCustomer.js",["189","190"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport authHeader from \"../../Services/auth-header\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function UpdateCustomer(props) {\n  const {\n    match: { params },\n  } = props;\n  const customerId = params.customerId;\n  const [customer, setcustomer] = useState({});\n  const history = useHistory();\n\n  async function getCustomer() {\n    await axios\n      .get(`http://localhost:8080/customers/${customerId}`, {\n        headers: authHeader(),\n      })\n      .then((res) => setcustomer(res.data));\n  }\n\n  const onChangeHandler = (e) => {\n    setcustomer({\n      ...customer,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  useEffect(() => {\n    getCustomer();\n  }, []);\n\n  function submitForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    axios.put(\n      `http://localhost:8080/customers/${customerId}`,\n      {\n        id: customerId,\n        firstName: data.get(\"firstName\"),\n        lastName: data.get(\"lastName\"),\n        address: data.get(\"address\"),\n        phoneNumber: data.get(\"phoneNumber\"),\n        gender: data.get(\"gender\"),\n        age: data.get(\"age\"),\n        lastSeen: new Date(),\n      },\n      { headers: authHeader() }\n    );\n    history.push(`/customers/${customerId}`);\n  }\n\n  return (\n    <Container\n      style={{\n        border: \"white\",\n        height: \"100%\",\n        width: \"50%\",\n        margin: \"auto\",\n        marginTop: \"5%\",\n      }}\n    >\n      <h1>Update customer data</h1>\n      <form\n        className=\"form-signin\"\n        method=\"post\"\n        action=\"/customers\"\n        onSubmit={submitForm}\n      >\n        <div className=\"mb-3\">\n          <label htmlFor=\"firstName\" className=\"form-label\">\n            First Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"firstName\"\n            name=\"firstName\"\n            value={customer.firstName}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"lastName\" className=\"form-label\">\n            Last Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"lastName\"\n            name=\"lastName\"\n            value={customer.lastName}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"phoneNumber\" className=\"form-label\">\n            Phone Number\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            value={customer.phoneNumber}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"gender\" className=\"form-label\">\n            Gender\n          </label>\n          <select\n            className=\"form-select form-select-sm mb-3\"\n            aria-label=\".form-select-sm example\"\n            id=\"gender\"\n            name=\"gender\"\n            value={customer.gender}\n            onChange={onChangeHandler}\n          >\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n            <option value=\"other\">Other</option>\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            name=\"email\"\n            value={customer.email}\n            onChange={onChangeHandler}\n          />\n          <div id=\"emailHelp\" className=\"form-text\">\n            We'll never share your email with anyone else.\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"address\" className=\"form-label\">\n            Address\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"address\"\n            name=\"address\"\n            value={customer.address}\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"age\" className=\"form-label\">\n            Age\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"age\"\n            name=\"age\"\n            value={customer.age}\n            onChange={onChangeHandler}\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </Container>\n  );\n}\n",{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":12,"column":8,"nodeType":"197","messageId":"198","endLine":12,"endColumn":21},{"ruleId":"195","severity":1,"message":"199","line":18,"column":8,"nodeType":"197","messageId":"198","endLine":18,"endColumn":19},{"ruleId":"195","severity":1,"message":"200","line":31,"column":10,"nodeType":"197","messageId":"198","endLine":31,"endColumn":21},{"ruleId":"195","severity":1,"message":"201","line":31,"column":23,"nodeType":"197","messageId":"198","endLine":31,"endColumn":37},{"ruleId":"195","severity":1,"message":"202","line":21,"column":8,"nodeType":"197","messageId":"198","endLine":21,"endColumn":20},{"ruleId":"195","severity":1,"message":"200","line":122,"column":10,"nodeType":"197","messageId":"198","endLine":122,"endColumn":21},{"ruleId":"195","severity":1,"message":"201","line":122,"column":23,"nodeType":"197","messageId":"198","endLine":122,"endColumn":37},{"ruleId":"195","severity":1,"message":"203","line":21,"column":9,"nodeType":"197","messageId":"198","endLine":21,"endColumn":16},{"ruleId":"204","severity":1,"message":"205","line":65,"column":6,"nodeType":"206","endLine":65,"endColumn":8,"suggestions":"207"},{"ruleId":"195","severity":1,"message":"208","line":14,"column":8,"nodeType":"197","messageId":"198","endLine":14,"endColumn":16},{"ruleId":"209","severity":1,"message":"210","line":71,"column":28,"nodeType":"211","messageId":"212","endLine":71,"endColumn":30},{"ruleId":"204","severity":1,"message":"213","line":58,"column":6,"nodeType":"206","endLine":58,"endColumn":8,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":20,"column":36,"nodeType":"217","endLine":20,"endColumn":56},{"ruleId":"195","severity":1,"message":"218","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":17},{"ruleId":"195","severity":1,"message":"219","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":17},{"ruleId":"195","severity":1,"message":"201","line":8,"column":23,"nodeType":"197","messageId":"198","endLine":8,"endColumn":37},{"ruleId":"195","severity":1,"message":"220","line":9,"column":10,"nodeType":"197","messageId":"198","endLine":9,"endColumn":14},{"ruleId":"195","severity":1,"message":"221","line":11,"column":18,"nodeType":"197","messageId":"198","endLine":11,"endColumn":25},{"ruleId":"195","severity":1,"message":"222","line":16,"column":11,"nodeType":"197","messageId":"198","endLine":16,"endColumn":23},{"ruleId":"195","severity":1,"message":"223","line":40,"column":7,"nodeType":"197","messageId":"198","endLine":40,"endColumn":16},{"ruleId":"195","severity":1,"message":"224","line":52,"column":18,"nodeType":"197","messageId":"198","endLine":52,"endColumn":32},{"ruleId":"204","severity":1,"message":"225","line":71,"column":6,"nodeType":"206","endLine":71,"endColumn":8,"suggestions":"226"},{"ruleId":"209","severity":1,"message":"210","line":61,"column":28,"nodeType":"211","messageId":"212","endLine":61,"endColumn":30},{"ruleId":"195","severity":1,"message":"227","line":4,"column":10,"nodeType":"197","messageId":"198","endLine":4,"endColumn":14},{"ruleId":"204","severity":1,"message":"228","line":40,"column":6,"nodeType":"206","endLine":40,"endColumn":8,"suggestions":"229"},{"ruleId":"195","severity":1,"message":"230","line":35,"column":10,"nodeType":"197","messageId":"198","endLine":35,"endColumn":20},{"ruleId":"209","severity":1,"message":"210","line":66,"column":28,"nodeType":"211","messageId":"212","endLine":66,"endColumn":30},{"ruleId":"195","severity":1,"message":"231","line":5,"column":22,"nodeType":"197","messageId":"198","endLine":5,"endColumn":31},{"ruleId":"195","severity":1,"message":"232","line":12,"column":9,"nodeType":"197","messageId":"198","endLine":12,"endColumn":16},{"ruleId":"195","severity":1,"message":"233","line":39,"column":7,"nodeType":"197","messageId":"198","endLine":39,"endColumn":11},{"ruleId":"204","severity":1,"message":"234","line":71,"column":6,"nodeType":"206","endLine":71,"endColumn":8,"suggestions":"235"},{"ruleId":"209","severity":1,"message":"210","line":62,"column":28,"nodeType":"211","messageId":"212","endLine":62,"endColumn":30},{"ruleId":"195","severity":1,"message":"236","line":4,"column":22,"nodeType":"197","messageId":"198","endLine":4,"endColumn":33},{"ruleId":"195","severity":1,"message":"227","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":14},{"ruleId":"204","severity":1,"message":"237","line":48,"column":6,"nodeType":"206","endLine":48,"endColumn":8,"suggestions":"238"},{"ruleId":"195","severity":1,"message":"239","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"240","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"241","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":21},{"ruleId":"195","severity":1,"message":"242","line":12,"column":8,"nodeType":"197","messageId":"198","endLine":12,"endColumn":22},{"ruleId":"195","severity":1,"message":"243","line":1,"column":38,"nodeType":"197","messageId":"198","endLine":1,"endColumn":53},{"ruleId":"195","severity":1,"message":"244","line":9,"column":10,"nodeType":"197","messageId":"198","endLine":9,"endColumn":24},{"ruleId":"195","severity":1,"message":"245","line":27,"column":10,"nodeType":"197","messageId":"198","endLine":27,"endColumn":14},{"ruleId":"195","severity":1,"message":"246","line":27,"column":16,"nodeType":"197","messageId":"198","endLine":27,"endColumn":23},{"ruleId":"195","severity":1,"message":"247","line":28,"column":7,"nodeType":"197","messageId":"198","endLine":28,"endColumn":11},{"ruleId":"195","severity":1,"message":"201","line":7,"column":23,"nodeType":"197","messageId":"198","endLine":7,"endColumn":37},{"ruleId":"195","severity":1,"message":"227","line":4,"column":10,"nodeType":"197","messageId":"198","endLine":4,"endColumn":14},{"ruleId":"204","severity":1,"message":"248","line":33,"column":6,"nodeType":"206","endLine":33,"endColumn":8,"suggestions":"249"},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"no-unused-vars","'PersonProfile' is defined but never used.","Identifier","unusedVar","'AddCustomer' is defined but never used.","'currentUser' is assigned a value but never used.","'setcurrentUser' is assigned a value but never used.","'Appointments' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getQuestion'. Either include it or remove the dependency array.","ArrayExpression",["252"],"'Checkbox' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getAppointment'. Either include it or remove the dependency array.",["253"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ClearIcon' is defined but never used.","'CheckIcon' is defined but never used.","'user' is assigned a value but never used.","'getData' is defined but never used.","'userResponse' is assigned a value but never used.","'vpassword' is assigned a value but never used.","'updateCustomer' is defined but never used.","React Hook useEffect has missing dependencies: 'getCustomer', 'getCustomerAppointments', and 'getCustomerPets'. Either include them or remove the dependency array.",["254"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getPet'. Either include it or remove the dependency array.",["255"],"'createData' is defined but never used.","'useParams' is defined but never used.","'history' is assigned a value but never used.","'rows' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPets'. Either include it or remove the dependency array.",["256"],"'userHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'getEmployee'. Either include it or remove the dependency array.",["257"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'ListSubheader' is defined but never used.","'AssignmentIcon' is defined but never used.","'useLayoutEffect' is defined but never used.","'preventDefault' is defined but never used.","'seen' is assigned a value but never used.","'setseen' is assigned a value but never used.","'data' is defined but never used.","React Hook useEffect has a missing dependency: 'getCustomer'. Either include it or remove the dependency array.",["258"],"no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [getQuestion]",{"range":"273","text":"274"},"Update the dependencies array to be: [getAppointment]",{"range":"275","text":"276"},"Update the dependencies array to be: [getCustomer, getCustomerAppointments, getCustomerPets]",{"range":"277","text":"278"},"Update the dependencies array to be: [getPet]",{"range":"279","text":"280"},"Update the dependencies array to be: [getPets]",{"range":"281","text":"282"},"Update the dependencies array to be: [getEmployee]",{"range":"283","text":"284"},"Update the dependencies array to be: [getCustomer]",{"range":"285","text":"286"},[1690,1692],"[getQuestion]",[1694,1696],"[getAppointment]",[1818,1820],"[getCustomer, getCustomerAppointments, getCustomerPets]",[918,920],"[getPet]",[1997,1999],"[getPets]",[1119,1121],"[getEmployee]",[853,855],"[getCustomer]"]